{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/lib/burger.js","src/scripts/lib/headerScroll.js","src/scripts/lib/navScroll.js","src/scripts/lib/slider.js","node_modules/swiper/swiper.mjs","node_modules/swiper/shared/swiper-core.mjs","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_object_spread.js","node_modules/@swc/helpers/esm/_object_spread_props.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/swiper/shared/ssr-window.esm.mjs","node_modules/swiper/shared/utils.mjs","node_modules/swiper/modules/index.mjs","node_modules/swiper/modules/virtual.mjs","node_modules/swiper/modules/keyboard.mjs","node_modules/swiper/modules/mousewheel.mjs","node_modules/swiper/modules/navigation.mjs","node_modules/swiper/shared/create-element-if-not-defined.mjs","node_modules/swiper/modules/pagination.mjs","node_modules/swiper/shared/classes-to-selector.mjs","node_modules/swiper/modules/scrollbar.mjs","node_modules/swiper/modules/parallax.mjs","node_modules/swiper/modules/zoom.mjs","node_modules/swiper/modules/controller.mjs","node_modules/swiper/modules/a11y.mjs","node_modules/swiper/modules/history.mjs","node_modules/swiper/modules/hash-navigation.mjs","node_modules/swiper/modules/autoplay.mjs","node_modules/swiper/modules/thumbs.mjs","node_modules/swiper/modules/free-mode.mjs","node_modules/swiper/modules/grid.mjs","node_modules/swiper/modules/manipulation.mjs","node_modules/swiper/modules/effect-fade.mjs","node_modules/swiper/shared/effect-init.mjs","node_modules/swiper/shared/effect-target.mjs","node_modules/swiper/shared/effect-virtual-transition-end.mjs","node_modules/swiper/modules/effect-cube.mjs","node_modules/swiper/modules/effect-flip.mjs","node_modules/swiper/shared/create-shadow.mjs","node_modules/swiper/modules/effect-coverflow.mjs","node_modules/swiper/modules/effect-creative.mjs","node_modules/swiper/modules/effect-cards.mjs","src/scripts/lib/gallery.js","node_modules/lightgallery/lightgallery.es5.js","node_modules/src/lg-events.ts","node_modules/src/lg-settings.ts","node_modules/src/lgQuery.ts","node_modules/src/lg-utils.ts","node_modules/src/lightgallery.ts","node_modules/src/index.ts","node_modules/lightgallery/plugins/thumbnail/lg-thumbnail.es5.js","node_modules/src/plugins/thumbnail/lg-thumbnail-settings.ts","node_modules/src/plugins/thumbnail/lg-thumbnail.ts"],"sourcesContent":["(function () {\n\"use strict\";\n(function burger() {\n    var body = document.querySelector(\"body\");\n    var burgerButton = document.querySelector(\".header__burger-button\");\n    var header = document.querySelector(\".header\");\n    if (burgerButton) burgerButton.addEventListener(\"click\", function(e) {\n        e.stopPropagation();\n        var scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;\n        document.documentElement.classList.toggle(\"menu-open\");\n        if (document.querySelector(\".menu-open\")) {\n            body.style.paddingRight = \"\".concat(scrollBarWidth, \"px\");\n            window.addEventListener(\"click\", function() {\n                if (!e.target.closest(\".header__menu\")) {\n                    document.documentElement.classList.remove(\"menu-open\");\n                    body.style.paddingRight = \"0\";\n                }\n            });\n        } else body.style.paddingRight = \"0\";\n    });\n    if (header) header.addEventListener(\"click\", function(e) {\n        if (e.target.tagName === \"A\") {\n            document.documentElement.classList.remove(\"menu-open\");\n            body.style.paddingRight = \"0\";\n        }\n    });\n})();\n\n\n\"use strict\";\n(function headerScroll() {\n    var scrollPos = window.scrollY;\n    var header = document.querySelector(\"header.header\");\n    var addScroll = function() {\n        return header.classList.add(\"header-scroll\");\n    };\n    var removeScroll = function() {\n        return header.classList.remove(\"header-scroll\");\n    };\n    window.addEventListener(\"scroll\", function() {\n        scrollPos = window.scrollY;\n        if (scrollPos > 0) addScroll();\n        else removeScroll();\n    });\n})();\n\n\n\"use strict\";\n(function navScroll() {\n    var headerHeight = document.querySelector(\".header\").offsetHeight;\n    document.querySelectorAll('a[href^=\"#\"]').forEach(function(anchor) {\n        anchor.addEventListener(\"click\", function(e) {\n            e.preventDefault();\n            var targetId = this.getAttribute(\"href\");\n            var targetElement = document.querySelector(targetId);\n            if (targetElement) {\n                var targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset - headerHeight;\n                window.scrollTo({\n                    top: targetPosition,\n                    behavior: \"smooth\"\n                });\n            }\n        });\n    });\n})();\n\n\n/**\n * Swiper 11.0.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2024 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 5, 2024\n */ function $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\nfunction $ad1c00e896d27009$export$581ff339ea0ba762(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n        ownKeys.forEach(function(key) {\n            (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\nfunction $f17388ede13a49cc$var$ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction $f17388ede13a49cc$export$4fa2f4023c9cbda5(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else $f17388ede13a49cc$var$ownKeys(Object(source)).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n    return target;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */ /* eslint-disable no-param-reassign */ function $0c3479cf5570869b$var$isObject(obj) {\n    return obj !== null && typeof obj === \"object\" && \"constructor\" in obj && obj.constructor === Object;\n}\nfunction $0c3479cf5570869b$var$extend(target, src) {\n    if (target === void 0) target = {};\n    if (src === void 0) src = {};\n    Object.keys(src).forEach(function(key) {\n        if (typeof target[key] === \"undefined\") target[key] = src[key];\n        else if ($0c3479cf5570869b$var$isObject(src[key]) && $0c3479cf5570869b$var$isObject(target[key]) && Object.keys(src[key]).length > 0) $0c3479cf5570869b$var$extend(target[key], src[key]);\n    });\n}\nvar $0c3479cf5570869b$var$ssrDocument = {\n    body: {},\n    addEventListener: function() {},\n    removeEventListener: function() {},\n    activeElement: {\n        blur: function() {},\n        nodeName: \"\"\n    },\n    querySelector: function() {\n        return null;\n    },\n    querySelectorAll: function() {\n        return [];\n    },\n    getElementById: function() {\n        return null;\n    },\n    createEvent: function() {\n        return {\n            initEvent: function() {}\n        };\n    },\n    createElement: function() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function() {},\n            getElementsByTagName: function() {\n                return [];\n            }\n        };\n    },\n    createElementNS: function() {\n        return {};\n    },\n    importNode: function() {\n        return null;\n    },\n    location: {\n        hash: \"\",\n        host: \"\",\n        hostname: \"\",\n        href: \"\",\n        origin: \"\",\n        pathname: \"\",\n        protocol: \"\",\n        search: \"\"\n    }\n};\nfunction $0c3479cf5570869b$export$39b482c5e57630a8() {\n    var doc = typeof document !== \"undefined\" ? document : {};\n    $0c3479cf5570869b$var$extend(doc, $0c3479cf5570869b$var$ssrDocument);\n    return doc;\n}\nvar $0c3479cf5570869b$var$ssrWindow = {\n    document: $0c3479cf5570869b$var$ssrDocument,\n    navigator: {\n        userAgent: \"\"\n    },\n    location: {\n        hash: \"\",\n        host: \"\",\n        hostname: \"\",\n        href: \"\",\n        origin: \"\",\n        pathname: \"\",\n        protocol: \"\",\n        search: \"\"\n    },\n    history: {\n        replaceState: function() {},\n        pushState: function() {},\n        go: function() {},\n        back: function() {}\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener: function() {},\n    removeEventListener: function() {},\n    getComputedStyle: function() {\n        return {\n            getPropertyValue: function() {\n                return \"\";\n            }\n        };\n    },\n    Image: function() {},\n    Date: function() {},\n    screen: {},\n    setTimeout: function() {},\n    clearTimeout: function() {},\n    matchMedia: function() {\n        return {};\n    },\n    requestAnimationFrame: function(callback) {\n        if (typeof setTimeout === \"undefined\") {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame: function(id) {\n        if (typeof setTimeout === \"undefined\") return;\n        clearTimeout(id);\n    }\n};\nfunction $0c3479cf5570869b$export$407448d2b89b1813() {\n    var win = typeof window !== \"undefined\" ? window : {};\n    $0c3479cf5570869b$var$extend(win, $0c3479cf5570869b$var$ssrWindow);\n    return win;\n}\n\n\n\n\n\nfunction $d680807689e9ecb0$export$dda1d9f60106f0e9(classes) {\n    if (classes === void 0) classes = \"\";\n    return classes.trim().split(\" \").filter(function(c) {\n        return !!c.trim();\n    });\n}\nfunction $d680807689e9ecb0$export$90a7f3efeed30595(obj) {\n    var object = obj;\n    Object.keys(object).forEach(function(key) {\n        try {\n            object[key] = null;\n        } catch (e) {\n        // no getter for object\n        }\n        try {\n            delete object[key];\n        } catch (e) {\n        // something got wrong\n        }\n    });\n}\nfunction $d680807689e9ecb0$export$7ccc53e8f1e7dfc5(callback, delay) {\n    if (delay === void 0) delay = 0;\n    return setTimeout(callback, delay);\n}\nfunction $d680807689e9ecb0$export$4368d992c4eafac0() {\n    return Date.now();\n}\nfunction $d680807689e9ecb0$var$getComputedStyle(el) {\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var style;\n    if (window1.getComputedStyle) style = window1.getComputedStyle(el, null);\n    if (!style && el.currentStyle) style = el.currentStyle;\n    if (!style) style = el.style;\n    return style;\n}\nfunction $d680807689e9ecb0$export$23f2a1d2818174ef(el, axis) {\n    if (axis === void 0) axis = \"x\";\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var matrix;\n    var curTransform;\n    var transformMatrix;\n    var curStyle = $d680807689e9ecb0$var$getComputedStyle(el);\n    if (window1.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(\",\").length > 6) curTransform = curTransform.split(\", \").map(function(a) {\n            return a.replace(\",\", \".\");\n        }).join(\", \");\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new window1.WebKitCSSMatrix(curTransform === \"none\" ? \"\" : curTransform);\n    } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue(\"transform\").replace(\"translate(\", \"matrix(1, 0, 0, 1,\");\n        matrix = transformMatrix.toString().split(\",\");\n    }\n    if (axis === \"x\") {\n        // Latest Chrome and webkits Fix\n        if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n        else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === \"y\") {\n        // Latest Chrome and webkits Fix\n        if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n        else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n}\nfunction $d680807689e9ecb0$export$342063e11d6c3cad(o) {\n    return typeof o === \"object\" && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === \"Object\";\n}\nfunction $d680807689e9ecb0$var$isNode(node) {\n    // eslint-disable-next-line\n    if (typeof window !== \"undefined\" && typeof window.HTMLElement !== \"undefined\") return node instanceof HTMLElement;\n    return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction $d680807689e9ecb0$export$3b14a55fb2447963() {\n    var _arguments = arguments, _loop = function(i) {\n        var nextSource = i < 0 || _arguments.length <= i ? undefined : _arguments[i];\n        if (nextSource !== undefined && nextSource !== null && !$d680807689e9ecb0$var$isNode(nextSource)) {\n            var keysArray = Object.keys(Object(nextSource)).filter(function(key) {\n                return noExtend.indexOf(key) < 0;\n            });\n            for(var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1){\n                var nextKey = keysArray[nextIndex];\n                var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                if (desc !== undefined && desc.enumerable) {\n                    if ($d680807689e9ecb0$export$342063e11d6c3cad(to[nextKey]) && $d680807689e9ecb0$export$342063e11d6c3cad(nextSource[nextKey])) {\n                        if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];\n                        else $d680807689e9ecb0$export$3b14a55fb2447963(to[nextKey], nextSource[nextKey]);\n                    } else if (!$d680807689e9ecb0$export$342063e11d6c3cad(to[nextKey]) && $d680807689e9ecb0$export$342063e11d6c3cad(nextSource[nextKey])) {\n                        to[nextKey] = {};\n                        if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];\n                        else $d680807689e9ecb0$export$3b14a55fb2447963(to[nextKey], nextSource[nextKey]);\n                    } else to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n    };\n    var to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n    var noExtend = [\n        \"__proto__\",\n        \"constructor\",\n        \"prototype\"\n    ];\n    for(var i = 1; i < arguments.length; i += 1)_loop(i);\n    return to;\n}\nfunction $d680807689e9ecb0$export$2408f22a0fab9ae5(el, varName, varValue) {\n    el.style.setProperty(varName, varValue);\n}\nfunction $d680807689e9ecb0$export$43caf9889c228507(_ref) {\n    var swiper = _ref.swiper, targetPosition = _ref.targetPosition, side = _ref.side;\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var startPosition = -swiper.translate;\n    var startTime = null;\n    var time;\n    var duration = swiper.params.speed;\n    swiper.wrapperEl.style.scrollSnapType = \"none\";\n    window1.cancelAnimationFrame(swiper.cssModeFrameID);\n    var dir = targetPosition > startPosition ? \"next\" : \"prev\";\n    var isOutOfBound = function(current, target) {\n        return dir === \"next\" && current >= target || dir === \"prev\" && current <= target;\n    };\n    var animate = function() {\n        time = new Date().getTime();\n        if (startTime === null) startTime = time;\n        var progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n        var easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n        var currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n        if (isOutOfBound(currentPosition, targetPosition)) currentPosition = targetPosition;\n        swiper.wrapperEl.scrollTo((0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)({}, side, currentPosition));\n        if (isOutOfBound(currentPosition, targetPosition)) {\n            swiper.wrapperEl.style.overflow = \"hidden\";\n            swiper.wrapperEl.style.scrollSnapType = \"\";\n            setTimeout(function() {\n                swiper.wrapperEl.style.overflow = \"\";\n                swiper.wrapperEl.scrollTo((0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)({}, side, currentPosition));\n            });\n            window1.cancelAnimationFrame(swiper.cssModeFrameID);\n            return;\n        }\n        swiper.cssModeFrameID = window1.requestAnimationFrame(animate);\n    };\n    animate();\n}\nfunction $d680807689e9ecb0$export$882b5998b3b9117c(slideEl) {\n    return slideEl.querySelector(\".swiper-slide-transform\") || slideEl.shadowRoot && slideEl.shadowRoot.querySelector(\".swiper-slide-transform\") || slideEl;\n}\nfunction $d680807689e9ecb0$export$f1e1789686576879(element, selector) {\n    if (selector === void 0) selector = \"\";\n    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(element.children).filter(function(el) {\n        return el.matches(selector);\n    });\n}\nfunction $d680807689e9ecb0$export$625550452a3fa3ec(text) {\n    try {\n        console.warn(text);\n        return;\n    } catch (err) {\n    // err\n    }\n}\nfunction $d680807689e9ecb0$export$db3b6bfb95261072(tag, classes) {\n    var _el_classList;\n    if (classes === void 0) classes = [];\n    var el = document.createElement(tag);\n    (_el_classList = el.classList).add.apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array.isArray(classes) ? classes : $d680807689e9ecb0$export$dda1d9f60106f0e9(classes)));\n    return el;\n}\nfunction $d680807689e9ecb0$export$8b22cf2602fb60ce(el) {\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var document1 = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    var box = el.getBoundingClientRect();\n    var body = document1.body;\n    var clientTop = el.clientTop || body.clientTop || 0;\n    var clientLeft = el.clientLeft || body.clientLeft || 0;\n    var scrollTop = el === window1 ? window1.scrollY : el.scrollTop;\n    var scrollLeft = el === window1 ? window1.scrollX : el.scrollLeft;\n    return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n    };\n}\nfunction $d680807689e9ecb0$export$9e5f44173e64f162(el, selector) {\n    var prevEls = [];\n    while(el.previousElementSibling){\n        var prev = el.previousElementSibling; // eslint-disable-line\n        if (selector) {\n            if (prev.matches(selector)) prevEls.push(prev);\n        } else prevEls.push(prev);\n        el = prev;\n    }\n    return prevEls;\n}\nfunction $d680807689e9ecb0$export$ffb5f4729a158638(el, selector) {\n    var nextEls = [];\n    while(el.nextElementSibling){\n        var next = el.nextElementSibling; // eslint-disable-line\n        if (selector) {\n            if (next.matches(selector)) nextEls.push(next);\n        } else nextEls.push(next);\n        el = next;\n    }\n    return nextEls;\n}\nfunction $d680807689e9ecb0$export$ae1af26003f05816(el, prop) {\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    return window1.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction $d680807689e9ecb0$export$39b482c5e57630a8(el) {\n    var child = el;\n    var i;\n    if (child) {\n        i = 0;\n        // eslint-disable-next-line\n        while((child = child.previousSibling) !== null)if (child.nodeType === 1) i += 1;\n        return i;\n    }\n    return undefined;\n}\nfunction $d680807689e9ecb0$export$407448d2b89b1813(el, selector) {\n    var parents = []; // eslint-disable-line\n    var parent = el.parentElement; // eslint-disable-line\n    while(parent){\n        if (selector) {\n            if (parent.matches(selector)) parents.push(parent);\n        } else parents.push(parent);\n        parent = parent.parentElement;\n    }\n    return parents;\n}\nfunction $d680807689e9ecb0$export$35e795649ee09318(el, callback) {\n    function fireCallBack(e) {\n        if (e.target !== el) return;\n        callback.call(el, e);\n        el.removeEventListener(\"transitionend\", fireCallBack);\n    }\n    if (callback) el.addEventListener(\"transitionend\", fireCallBack);\n}\nfunction $d680807689e9ecb0$export$2d1720544b23b823(el, size, includeMargins) {\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    if (includeMargins) return el[size === \"width\" ? \"offsetWidth\" : \"offsetHeight\"] + parseFloat(window1.getComputedStyle(el, null).getPropertyValue(size === \"width\" ? \"margin-right\" : \"margin-top\")) + parseFloat(window1.getComputedStyle(el, null).getPropertyValue(size === \"width\" ? \"margin-left\" : \"margin-bottom\"));\n    return el.offsetWidth;\n}\nfunction $d680807689e9ecb0$export$953cecd6e717a553(el) {\n    return (Array.isArray(el) ? el : [\n        el\n    ]).filter(function(e) {\n        return !!e;\n    });\n}\n\n\nvar $12f396601cf1ba7d$var$support;\nfunction $12f396601cf1ba7d$var$calcSupport() {\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var document1 = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    return {\n        smoothScroll: document1.documentElement && document1.documentElement.style && \"scrollBehavior\" in document1.documentElement.style,\n        touch: !!(\"ontouchstart\" in window1 || window1.DocumentTouch && document1 instanceof window1.DocumentTouch)\n    };\n}\nfunction $12f396601cf1ba7d$var$getSupport() {\n    if (!$12f396601cf1ba7d$var$support) $12f396601cf1ba7d$var$support = $12f396601cf1ba7d$var$calcSupport();\n    return $12f396601cf1ba7d$var$support;\n}\nvar $12f396601cf1ba7d$var$deviceCached;\nfunction $12f396601cf1ba7d$var$calcDevice(_temp) {\n    var userAgent = (_temp === void 0 ? {} : _temp).userAgent;\n    var support = $12f396601cf1ba7d$var$getSupport();\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var platform = window1.navigator.platform;\n    var ua = userAgent || window1.navigator.userAgent;\n    var device = {\n        ios: false,\n        android: false\n    };\n    var screenWidth = window1.screen.width;\n    var screenHeight = window1.screen.height;\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    var windows = platform === \"Win32\";\n    var macos = platform === \"MacIntel\";\n    // iPadOs 13 fix\n    var iPadScreens = [\n        \"1024x1366\",\n        \"1366x1024\",\n        \"834x1194\",\n        \"1194x834\",\n        \"834x1112\",\n        \"1112x834\",\n        \"768x1024\",\n        \"1024x768\",\n        \"820x1180\",\n        \"1180x820\",\n        \"810x1080\",\n        \"1080x810\"\n    ];\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(\"\".concat(screenWidth, \"x\").concat(screenHeight)) >= 0) {\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\n        if (!ipad) ipad = [\n            0,\n            1,\n            \"13_0_0\"\n        ];\n        macos = false;\n    }\n    // Android\n    if (android && !windows) {\n        device.os = \"android\";\n        device.android = true;\n    }\n    if (ipad || iphone || ipod) {\n        device.os = \"ios\";\n        device.ios = true;\n    }\n    // Export object\n    return device;\n}\nfunction $12f396601cf1ba7d$var$getDevice(overrides) {\n    if (overrides === void 0) overrides = {};\n    if (!$12f396601cf1ba7d$var$deviceCached) $12f396601cf1ba7d$var$deviceCached = $12f396601cf1ba7d$var$calcDevice(overrides);\n    return $12f396601cf1ba7d$var$deviceCached;\n}\nvar $12f396601cf1ba7d$var$browser;\nfunction $12f396601cf1ba7d$var$calcBrowser() {\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var device = $12f396601cf1ba7d$var$getDevice();\n    var needPerspectiveFix = false;\n    function isSafari() {\n        var ua = window1.navigator.userAgent.toLowerCase();\n        return ua.indexOf(\"safari\") >= 0 && ua.indexOf(\"chrome\") < 0 && ua.indexOf(\"android\") < 0;\n    }\n    if (isSafari()) {\n        var ua = String(window1.navigator.userAgent);\n        if (ua.includes(\"Version/\")) {\n            var _ua_split__split__split_map = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(ua.split(\"Version/\")[1].split(\" \")[0].split(\".\").map(function(num) {\n                return Number(num);\n            }), 2), major = _ua_split__split__split_map[0], minor = _ua_split__split__split_map[1];\n            needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n        }\n    }\n    var isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window1.navigator.userAgent);\n    var isSafariBrowser = isSafari();\n    var need3dFix = isSafariBrowser || isWebView && device.ios;\n    return {\n        isSafari: needPerspectiveFix || isSafariBrowser,\n        needPerspectiveFix: needPerspectiveFix,\n        need3dFix: need3dFix,\n        isWebView: isWebView\n    };\n}\nfunction $12f396601cf1ba7d$var$getBrowser() {\n    if (!$12f396601cf1ba7d$var$browser) $12f396601cf1ba7d$var$browser = $12f396601cf1ba7d$var$calcBrowser();\n    return $12f396601cf1ba7d$var$browser;\n}\nfunction $12f396601cf1ba7d$var$Resize(_ref) {\n    var swiper = _ref.swiper, on = _ref.on, emit = _ref.emit;\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var observer = null;\n    var animationFrame = null;\n    var resizeHandler = function() {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit(\"beforeResize\");\n        emit(\"resize\");\n    };\n    var createObserver = function() {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        observer = new ResizeObserver(function(entries) {\n            animationFrame = window1.requestAnimationFrame(function() {\n                var width = swiper.width, height = swiper.height;\n                var newWidth = width;\n                var newHeight = height;\n                entries.forEach(function(_ref2) {\n                    var contentBoxSize = _ref2.contentBoxSize, contentRect = _ref2.contentRect, target = _ref2.target;\n                    if (target && target !== swiper.el) return;\n                    newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n                    newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n                });\n                if (newWidth !== width || newHeight !== height) resizeHandler();\n            });\n        });\n        observer.observe(swiper.el);\n    };\n    var removeObserver = function() {\n        if (animationFrame) window1.cancelAnimationFrame(animationFrame);\n        if (observer && observer.unobserve && swiper.el) {\n            observer.unobserve(swiper.el);\n            observer = null;\n        }\n    };\n    var orientationChangeHandler = function() {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit(\"orientationchange\");\n    };\n    on(\"init\", function() {\n        if (swiper.params.resizeObserver && typeof window1.ResizeObserver !== \"undefined\") {\n            createObserver();\n            return;\n        }\n        window1.addEventListener(\"resize\", resizeHandler);\n        window1.addEventListener(\"orientationchange\", orientationChangeHandler);\n    });\n    on(\"destroy\", function() {\n        removeObserver();\n        window1.removeEventListener(\"resize\", resizeHandler);\n        window1.removeEventListener(\"orientationchange\", orientationChangeHandler);\n    });\n}\nfunction $12f396601cf1ba7d$var$Observer(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    var observers = [];\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var attach = function attach(target, options) {\n        if (options === void 0) options = {};\n        var ObserverFunc = window1.MutationObserver || window1.WebkitMutationObserver;\n        var observer = new ObserverFunc(function(mutations) {\n            // The observerUpdate event should only be triggered\n            // once despite the number of mutations.  Additional\n            // triggers are redundant and are very costly\n            if (swiper.__preventObserver__) return;\n            if (mutations.length === 1) {\n                emit(\"observerUpdate\", mutations[0]);\n                return;\n            }\n            var observerUpdate = function observerUpdate() {\n                emit(\"observerUpdate\", mutations[0]);\n            };\n            if (window1.requestAnimationFrame) window1.requestAnimationFrame(observerUpdate);\n            else window1.setTimeout(observerUpdate, 0);\n        });\n        observer.observe(target, {\n            attributes: typeof options.attributes === \"undefined\" ? true : options.attributes,\n            childList: typeof options.childList === \"undefined\" ? true : options.childList,\n            characterData: typeof options.characterData === \"undefined\" ? true : options.characterData\n        });\n        observers.push(observer);\n    };\n    var init = function() {\n        if (!swiper.params.observer) return;\n        if (swiper.params.observeParents) {\n            var containerParents = (0, $d680807689e9ecb0$export$407448d2b89b1813)(swiper.hostEl);\n            for(var i = 0; i < containerParents.length; i += 1)attach(containerParents[i]);\n        }\n        // Observe container\n        attach(swiper.hostEl, {\n            childList: swiper.params.observeSlideChildren\n        });\n        // Observe wrapper\n        attach(swiper.wrapperEl, {\n            attributes: false\n        });\n    };\n    var destroy = function() {\n        observers.forEach(function(observer) {\n            observer.disconnect();\n        });\n        observers.splice(0, observers.length);\n    };\n    extendParams({\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false\n    });\n    on(\"init\", init);\n    on(\"destroy\", destroy);\n}\n/* eslint-disable no-underscore-dangle */ var $12f396601cf1ba7d$var$eventsEmitter = {\n    on: function(events, handler, priority) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== \"function\") return self;\n        var method = priority ? \"unshift\" : \"push\";\n        events.split(\" \").forEach(function(event) {\n            if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n            self.eventsListeners[event][method](handler);\n        });\n        return self;\n    },\n    once: function(events, handler, priority) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== \"function\") return self;\n        function onceHandler() {\n            self.off(events, onceHandler);\n            if (onceHandler.__emitterProxy) delete onceHandler.__emitterProxy;\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n            handler.apply(self, args);\n        }\n        onceHandler.__emitterProxy = handler;\n        return self.on(events, onceHandler, priority);\n    },\n    onAny: function(handler, priority) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== \"function\") return self;\n        var method = priority ? \"unshift\" : \"push\";\n        if (self.eventsAnyListeners.indexOf(handler) < 0) self.eventsAnyListeners[method](handler);\n        return self;\n    },\n    offAny: function(handler) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsAnyListeners) return self;\n        var index = self.eventsAnyListeners.indexOf(handler);\n        if (index >= 0) self.eventsAnyListeners.splice(index, 1);\n        return self;\n    },\n    off: function(events, handler) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        events.split(\" \").forEach(function(event) {\n            if (typeof handler === \"undefined\") self.eventsListeners[event] = [];\n            else if (self.eventsListeners[event]) self.eventsListeners[event].forEach(function(eventHandler, index) {\n                if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) self.eventsListeners[event].splice(index, 1);\n            });\n        });\n        return self;\n    },\n    emit: function() {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        var events;\n        var data;\n        var context;\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];\n        if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\n            events = args[0];\n            data = args.slice(1, args.length);\n            context = self;\n        } else {\n            events = args[0].events;\n            data = args[0].data;\n            context = args[0].context || self;\n        }\n        data.unshift(context);\n        var eventsArray = Array.isArray(events) ? events : events.split(\" \");\n        eventsArray.forEach(function(event) {\n            if (self.eventsAnyListeners && self.eventsAnyListeners.length) self.eventsAnyListeners.forEach(function(eventHandler) {\n                eventHandler.apply(context, [\n                    event\n                ].concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(data)));\n            });\n            if (self.eventsListeners && self.eventsListeners[event]) self.eventsListeners[event].forEach(function(eventHandler) {\n                eventHandler.apply(context, data);\n            });\n        });\n        return self;\n    }\n};\nfunction $12f396601cf1ba7d$var$updateSize() {\n    var swiper = this;\n    var width;\n    var height;\n    var el = swiper.el;\n    if (typeof swiper.params.width !== \"undefined\" && swiper.params.width !== null) width = swiper.params.width;\n    else width = el.clientWidth;\n    if (typeof swiper.params.height !== \"undefined\" && swiper.params.height !== null) height = swiper.params.height;\n    else height = el.clientHeight;\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) return;\n    // Subtract paddings\n    width = width - parseInt((0, $d680807689e9ecb0$export$ae1af26003f05816)(el, \"padding-left\") || 0, 10) - parseInt((0, $d680807689e9ecb0$export$ae1af26003f05816)(el, \"padding-right\") || 0, 10);\n    height = height - parseInt((0, $d680807689e9ecb0$export$ae1af26003f05816)(el, \"padding-top\") || 0, 10) - parseInt((0, $d680807689e9ecb0$export$ae1af26003f05816)(el, \"padding-bottom\") || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    Object.assign(swiper, {\n        width: width,\n        height: height,\n        size: swiper.isHorizontal() ? width : height\n    });\n}\nfunction $12f396601cf1ba7d$var$updateSlides() {\n    var swiper = this;\n    function getDirectionPropertyValue(node, label) {\n        return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n    }\n    var params = swiper.params;\n    var wrapperEl = swiper.wrapperEl, slidesEl = swiper.slidesEl, swiperSize = swiper.size, rtl = swiper.rtlTranslate, wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = (0, $d680807689e9ecb0$export$f1e1789686576879)(slidesEl, \".\".concat(swiper.params.slideClass, \", swiper-slide\"));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === \"function\") offsetBefore = params.slidesOffsetBefore.call(swiper);\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === \"function\") offsetAfter = params.slidesOffsetAfter.call(swiper);\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.slidesGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === \"undefined\") return;\n    if (typeof spaceBetween === \"string\" && spaceBetween.indexOf(\"%\") >= 0) spaceBetween = parseFloat(spaceBetween.replace(\"%\", \"\")) / 100 * swiperSize;\n    else if (typeof spaceBetween === \"string\") spaceBetween = parseFloat(spaceBetween);\n    swiper.virtualSize = -spaceBetween;\n    // reset margins\n    slides.forEach(function(slideEl) {\n        if (rtl) slideEl.style.marginLeft = \"\";\n        else slideEl.style.marginRight = \"\";\n        slideEl.style.marginBottom = \"\";\n        slideEl.style.marginTop = \"\";\n    });\n    // reset cssMode offsets\n    if (params.centeredSlides && params.cssMode) {\n        (0, $d680807689e9ecb0$export$2408f22a0fab9ae5)(wrapperEl, \"--swiper-centered-offset-before\", \"\");\n        (0, $d680807689e9ecb0$export$2408f22a0fab9ae5)(wrapperEl, \"--swiper-centered-offset-after\", \"\");\n    }\n    var gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n    if (gridEnabled) swiper.grid.initSlides(slides);\n    else if (swiper.grid) swiper.grid.unsetSlides();\n    // Calc slides\n    var slideSize;\n    var shouldResetSlideSize = params.slidesPerView === \"auto\" && params.breakpoints && Object.keys(params.breakpoints).filter(function(key) {\n        return typeof params.breakpoints[key].slidesPerView !== \"undefined\";\n    }).length > 0;\n    for(var i = 0; i < slidesLength; i += 1){\n        slideSize = 0;\n        var slide = void 0;\n        if (slides[i]) slide = slides[i];\n        if (gridEnabled) swiper.grid.updateSlide(i, slide, slides);\n        if (slides[i] && (0, $d680807689e9ecb0$export$ae1af26003f05816)(slide, \"display\") === \"none\") continue; // eslint-disable-line\n        if (params.slidesPerView === \"auto\") {\n            if (shouldResetSlideSize) slides[i].style[swiper.getDirectionLabel(\"width\")] = \"\";\n            var slideStyles = getComputedStyle(slide);\n            var currentTransform = slide.style.transform;\n            var currentWebKitTransform = slide.style.webkitTransform;\n            if (currentTransform) slide.style.transform = \"none\";\n            if (currentWebKitTransform) slide.style.webkitTransform = \"none\";\n            if (params.roundLengths) slideSize = swiper.isHorizontal() ? (0, $d680807689e9ecb0$export$2d1720544b23b823)(slide, \"width\", true) : (0, $d680807689e9ecb0$export$2d1720544b23b823)(slide, \"height\", true);\n            else {\n                // eslint-disable-next-line\n                var width = getDirectionPropertyValue(slideStyles, \"width\");\n                var paddingLeft = getDirectionPropertyValue(slideStyles, \"padding-left\");\n                var paddingRight = getDirectionPropertyValue(slideStyles, \"padding-right\");\n                var marginLeft = getDirectionPropertyValue(slideStyles, \"margin-left\");\n                var marginRight = getDirectionPropertyValue(slideStyles, \"margin-right\");\n                var boxSizing = slideStyles.getPropertyValue(\"box-sizing\");\n                if (boxSizing && boxSizing === \"border-box\") slideSize = width + marginLeft + marginRight;\n                else {\n                    var clientWidth = slide.clientWidth, offsetWidth = slide.offsetWidth;\n                    slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n                }\n            }\n            if (currentTransform) slide.style.transform = currentTransform;\n            if (currentWebKitTransform) slide.style.webkitTransform = currentWebKitTransform;\n            if (params.roundLengths) slideSize = Math.floor(slideSize);\n        } else {\n            slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n            if (params.roundLengths) slideSize = Math.floor(slideSize);\n            if (slides[i]) slides[i].style[swiper.getDirectionLabel(\"width\")] = \"\".concat(slideSize, \"px\");\n        }\n        if (slides[i]) slides[i].swiperSlideSize = slideSize;\n        slidesSizesGrid.push(slideSize);\n        if (params.centeredSlides) {\n            slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n            if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n            if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n            if (Math.abs(slidePosition) < 0.001) slidePosition = 0;\n            if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n            if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n        } else {\n            if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n            if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n            slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    if (rtl && wrongRTL && (params.effect === \"slide\" || params.effect === \"coverflow\")) wrapperEl.style.width = \"\".concat(swiper.virtualSize + spaceBetween, \"px\");\n    if (params.setWrapperSize) wrapperEl.style[swiper.getDirectionLabel(\"width\")] = \"\".concat(swiper.virtualSize + spaceBetween, \"px\");\n    if (gridEnabled) swiper.grid.updateWrapperSize(slideSize, snapGrid);\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n        var newSlidesGrid = [];\n        for(var i1 = 0; i1 < snapGrid.length; i1 += 1){\n            var slidesGridItem = snapGrid[i1];\n            if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n            if (snapGrid[i1] <= swiper.virtualSize - swiperSize) newSlidesGrid.push(slidesGridItem);\n        }\n        snapGrid = newSlidesGrid;\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n    if (isVirtual && params.loop) {\n        var size = slidesSizesGrid[0] + spaceBetween;\n        if (params.slidesPerGroup > 1) {\n            var groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n            var groupSize = size * params.slidesPerGroup;\n            for(var i2 = 0; i2 < groups; i2 += 1)snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n        }\n        for(var i3 = 0; i3 < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i3 += 1){\n            if (params.slidesPerGroup === 1) snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n            slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n            swiper.virtualSize += size;\n        }\n    }\n    if (snapGrid.length === 0) snapGrid = [\n        0\n    ];\n    if (spaceBetween !== 0) {\n        var key = swiper.isHorizontal() && rtl ? \"marginLeft\" : swiper.getDirectionLabel(\"marginRight\");\n        slides.filter(function(_, slideIndex) {\n            if (!params.cssMode || params.loop) return true;\n            if (slideIndex === slides.length - 1) return false;\n            return true;\n        }).forEach(function(slideEl) {\n            slideEl.style[key] = \"\".concat(spaceBetween, \"px\");\n        });\n    }\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n        var allSlidesSize = 0;\n        slidesSizesGrid.forEach(function(slideSizeValue) {\n            allSlidesSize += slideSizeValue + (spaceBetween || 0);\n        });\n        allSlidesSize -= spaceBetween;\n        var maxSnap = allSlidesSize - swiperSize;\n        snapGrid = snapGrid.map(function(snap) {\n            if (snap <= 0) return -offsetBefore;\n            if (snap > maxSnap) return maxSnap + offsetAfter;\n            return snap;\n        });\n    }\n    if (params.centerInsufficientSlides) {\n        var allSlidesSize1 = 0;\n        slidesSizesGrid.forEach(function(slideSizeValue) {\n            allSlidesSize1 += slideSizeValue + (spaceBetween || 0);\n        });\n        allSlidesSize1 -= spaceBetween;\n        if (allSlidesSize1 < swiperSize) {\n            var allSlidesOffset = (swiperSize - allSlidesSize1) / 2;\n            snapGrid.forEach(function(snap, snapIndex) {\n                snapGrid[snapIndex] = snap - allSlidesOffset;\n            });\n            slidesGrid.forEach(function(snap, snapIndex) {\n                slidesGrid[snapIndex] = snap + allSlidesOffset;\n            });\n        }\n    }\n    Object.assign(swiper, {\n        slides: slides,\n        snapGrid: snapGrid,\n        slidesGrid: slidesGrid,\n        slidesSizesGrid: slidesSizesGrid\n    });\n    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n        (0, $d680807689e9ecb0$export$2408f22a0fab9ae5)(wrapperEl, \"--swiper-centered-offset-before\", \"\".concat(-snapGrid[0], \"px\"));\n        (0, $d680807689e9ecb0$export$2408f22a0fab9ae5)(wrapperEl, \"--swiper-centered-offset-after\", \"\".concat(swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2, \"px\"));\n        var addToSnapGrid = -swiper.snapGrid[0];\n        var addToSlidesGrid = -swiper.slidesGrid[0];\n        swiper.snapGrid = swiper.snapGrid.map(function(v) {\n            return v + addToSnapGrid;\n        });\n        swiper.slidesGrid = swiper.slidesGrid.map(function(v) {\n            return v + addToSlidesGrid;\n        });\n    }\n    if (slidesLength !== previousSlidesLength) swiper.emit(\"slidesLengthChange\");\n    if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow) swiper.checkOverflow();\n        swiper.emit(\"snapGridLengthChange\");\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) swiper.emit(\"slidesGridLengthChange\");\n    if (params.watchSlidesProgress) swiper.updateSlidesOffset();\n    swiper.emit(\"slidesUpdated\");\n    if (!isVirtual && !params.cssMode && (params.effect === \"slide\" || params.effect === \"fade\")) {\n        var backFaceHiddenClass = \"\".concat(params.containerModifierClass, \"backface-hidden\");\n        var hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n        if (slidesLength <= params.maxBackfaceHiddenSlides) {\n            if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n        } else if (hasClassBackfaceClassAdded) swiper.el.classList.remove(backFaceHiddenClass);\n    }\n}\nfunction $12f396601cf1ba7d$var$updateAutoHeight(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    var newHeight = 0;\n    var i;\n    if (typeof speed === \"number\") swiper.setTransition(speed);\n    else if (speed === true) swiper.setTransition(swiper.params.speed);\n    var getSlideByIndex = function(index) {\n        if (isVirtual) return swiper.slides[swiper.getSlideIndexByData(index)];\n        return swiper.slides[index];\n    };\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== \"auto\" && swiper.params.slidesPerView > 1) {\n        if (swiper.params.centeredSlides) (swiper.visibleSlides || []).forEach(function(slide) {\n            activeSlides.push(slide);\n        });\n        else for(i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1){\n            var index = swiper.activeIndex + i;\n            if (index > swiper.slides.length && !isVirtual) break;\n            activeSlides.push(getSlideByIndex(index));\n        }\n    } else activeSlides.push(getSlideByIndex(swiper.activeIndex));\n    // Find new height from highest slide in view\n    for(i = 0; i < activeSlides.length; i += 1)if (typeof activeSlides[i] !== \"undefined\") {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n    }\n    // Update Height\n    if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = \"\".concat(newHeight, \"px\");\n}\nfunction $12f396601cf1ba7d$var$updateSlidesOffset() {\n    var swiper = this;\n    var slides = swiper.slides;\n    // eslint-disable-next-line\n    var minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n    for(var i = 0; i < slides.length; i += 1)slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n}\nfunction $12f396601cf1ba7d$var$updateSlidesProgress(translate) {\n    if (translate === void 0) translate = this && this.translate || 0;\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides, rtl = swiper.rtlTranslate, snapGrid = swiper.snapGrid;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === \"undefined\") swiper.updateSlidesOffset();\n    var offsetCenter = -translate;\n    if (rtl) offsetCenter = translate;\n    // Visible Slides\n    slides.forEach(function(slideEl) {\n        slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass);\n    });\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n    var spaceBetween = params.spaceBetween;\n    if (typeof spaceBetween === \"string\" && spaceBetween.indexOf(\"%\") >= 0) spaceBetween = parseFloat(spaceBetween.replace(\"%\", \"\")) / 100 * swiper.size;\n    else if (typeof spaceBetween === \"string\") spaceBetween = parseFloat(spaceBetween);\n    for(var i = 0; i < slides.length; i += 1){\n        var slide = slides[i];\n        var slideOffset = slide.swiperSlideOffset;\n        if (params.cssMode && params.centeredSlides) slideOffset -= slides[0].swiperSlideOffset;\n        var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n        var originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n        var slideBefore = -(offsetCenter - slideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n        var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n        if (isVisible) {\n            swiper.visibleSlides.push(slide);\n            swiper.visibleSlidesIndexes.push(i);\n            slides[i].classList.add(params.slideVisibleClass);\n        }\n        if (isFullyVisible) slides[i].classList.add(params.slideFullyVisibleClass);\n        slide.progress = rtl ? -slideProgress : slideProgress;\n        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n    }\n}\nfunction $12f396601cf1ba7d$var$updateProgress(translate) {\n    var swiper = this;\n    if (typeof translate === \"undefined\") {\n        var multiplier = swiper.rtlTranslate ? -1 : 1;\n        // eslint-disable-next-line\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress, isBeginning = swiper.isBeginning, isEnd = swiper.isEnd, progressLoop = swiper.progressLoop;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n    } else {\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\n        var isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n        var isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n        isBeginning = isBeginningRounded || progress <= 0;\n        isEnd = isEndRounded || progress >= 1;\n        if (isBeginningRounded) progress = 0;\n        if (isEndRounded) progress = 1;\n    }\n    if (params.loop) {\n        var firstSlideIndex = swiper.getSlideIndexByData(0);\n        var lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n        var firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n        var lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n        var translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n        var translateAbs = Math.abs(translate);\n        if (translateAbs >= firstSlideTranslate) progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n        else progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n        if (progressLoop > 1) progressLoop -= 1;\n    }\n    Object.assign(swiper, {\n        progress: progress,\n        progressLoop: progressLoop,\n        isBeginning: isBeginning,\n        isEnd: isEnd\n    });\n    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n    if (isBeginning && !wasBeginning) swiper.emit(\"reachBeginning toEdge\");\n    if (isEnd && !wasEnd) swiper.emit(\"reachEnd toEdge\");\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) swiper.emit(\"fromEdge\");\n    swiper.emit(\"progress\", progress);\n}\nfunction $12f396601cf1ba7d$var$updateSlidesClasses() {\n    var swiper = this;\n    var slides = swiper.slides, params = swiper.params, slidesEl = swiper.slidesEl, activeIndex = swiper.activeIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n    var getFilteredSlide = function(selector) {\n        return (0, $d680807689e9ecb0$export$f1e1789686576879)(slidesEl, \".\".concat(params.slideClass).concat(selector, \", swiper-slide\").concat(selector))[0];\n    };\n    slides.forEach(function(slideEl) {\n        slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n    });\n    var activeSlide;\n    var prevSlide;\n    var nextSlide;\n    if (isVirtual) {\n        if (params.loop) {\n            var slideIndex = activeIndex - swiper.virtual.slidesBefore;\n            if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n            if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n            activeSlide = getFilteredSlide('[data-swiper-slide-index=\"'.concat(slideIndex, '\"]'));\n        } else activeSlide = getFilteredSlide('[data-swiper-slide-index=\"'.concat(activeIndex, '\"]'));\n    } else if (gridEnabled) {\n        activeSlide = slides.filter(function(slideEl) {\n            return slideEl.column === activeIndex;\n        })[0];\n        nextSlide = slides.filter(function(slideEl) {\n            return slideEl.column === activeIndex + 1;\n        })[0];\n        prevSlide = slides.filter(function(slideEl) {\n            return slideEl.column === activeIndex - 1;\n        })[0];\n    } else activeSlide = slides[activeIndex];\n    if (activeSlide) {\n        // Active classes\n        activeSlide.classList.add(params.slideActiveClass);\n        if (gridEnabled) {\n            if (nextSlide) nextSlide.classList.add(params.slideNextClass);\n            if (prevSlide) prevSlide.classList.add(params.slidePrevClass);\n        } else {\n            // Next Slide\n            nextSlide = (0, $d680807689e9ecb0$export$ffb5f4729a158638)(activeSlide, \".\".concat(params.slideClass, \", swiper-slide\"))[0];\n            if (params.loop && !nextSlide) nextSlide = slides[0];\n            if (nextSlide) nextSlide.classList.add(params.slideNextClass);\n            // Prev Slide\n            prevSlide = (0, $d680807689e9ecb0$export$9e5f44173e64f162)(activeSlide, \".\".concat(params.slideClass, \", swiper-slide\"))[0];\n            params.loop;\n            if (prevSlide) prevSlide.classList.add(params.slidePrevClass);\n        }\n    }\n    swiper.emitSlidesClasses();\n}\nvar $12f396601cf1ba7d$var$processLazyPreloader = function(swiper, imageEl) {\n    if (!swiper || swiper.destroyed || !swiper.params) return;\n    var slideSelector = function() {\n        return swiper.isElement ? \"swiper-slide\" : \".\".concat(swiper.params.slideClass);\n    };\n    var slideEl = imageEl.closest(slideSelector());\n    if (slideEl) {\n        var lazyEl = slideEl.querySelector(\".\".concat(swiper.params.lazyPreloaderClass));\n        if (!lazyEl && swiper.isElement) {\n            if (slideEl.shadowRoot) lazyEl = slideEl.shadowRoot.querySelector(\".\".concat(swiper.params.lazyPreloaderClass));\n            else // init later\n            requestAnimationFrame(function() {\n                if (slideEl.shadowRoot) {\n                    lazyEl = slideEl.shadowRoot.querySelector(\".\".concat(swiper.params.lazyPreloaderClass));\n                    if (lazyEl) lazyEl.remove();\n                }\n            });\n        }\n        if (lazyEl) lazyEl.remove();\n    }\n};\nvar $12f396601cf1ba7d$var$unlazy = function(swiper, index) {\n    if (!swiper.slides[index]) return;\n    var imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n    if (imageEl) imageEl.removeAttribute(\"loading\");\n};\nvar $12f396601cf1ba7d$var$preload = function(swiper) {\n    if (!swiper || swiper.destroyed || !swiper.params) return;\n    var amount = swiper.params.lazyPreloadPrevNext;\n    var len = swiper.slides.length;\n    if (!len || !amount || amount < 0) return;\n    amount = Math.min(amount, len);\n    var slidesPerView = swiper.params.slidesPerView === \"auto\" ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n    var activeIndex = swiper.activeIndex;\n    if (swiper.params.grid && swiper.params.grid.rows > 1) {\n        var _preloadColumns;\n        var activeColumn = activeIndex;\n        var preloadColumns = [\n            activeColumn - amount\n        ];\n        (_preloadColumns = preloadColumns).push.apply(_preloadColumns, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array.from({\n            length: amount\n        }).map(function(_, i) {\n            return activeColumn + slidesPerView + i;\n        })));\n        swiper.slides.forEach(function(slideEl, i) {\n            if (preloadColumns.includes(slideEl.column)) $12f396601cf1ba7d$var$unlazy(swiper, i);\n        });\n        return;\n    }\n    var slideIndexLastInView = activeIndex + slidesPerView - 1;\n    if (swiper.params.rewind || swiper.params.loop) for(var i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1){\n        var realIndex = (i % len + len) % len;\n        if (realIndex < activeIndex || realIndex > slideIndexLastInView) $12f396601cf1ba7d$var$unlazy(swiper, realIndex);\n    }\n    else {\n        for(var i1 = Math.max(activeIndex - amount, 0); i1 <= Math.min(slideIndexLastInView + amount, len - 1); i1 += 1)if (i1 !== activeIndex && (i1 > slideIndexLastInView || i1 < activeIndex)) $12f396601cf1ba7d$var$unlazy(swiper, i1);\n    }\n};\nfunction $12f396601cf1ba7d$var$getActiveIndexByTranslate(swiper) {\n    var slidesGrid = swiper.slidesGrid, params = swiper.params;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var activeIndex;\n    for(var i = 0; i < slidesGrid.length; i += 1){\n        if (typeof slidesGrid[i + 1] !== \"undefined\") {\n            if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) activeIndex = i;\n            else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) activeIndex = i + 1;\n        } else if (translate >= slidesGrid[i]) activeIndex = i;\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === \"undefined\") activeIndex = 0;\n    }\n    return activeIndex;\n}\nfunction $12f396601cf1ba7d$var$updateActiveIndex(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var snapGrid = swiper.snapGrid, params = swiper.params, previousIndex = swiper.activeIndex, previousRealIndex = swiper.realIndex, previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    var getVirtualRealIndex = function(aIndex) {\n        var realIndex = aIndex - swiper.virtual.slidesBefore;\n        if (realIndex < 0) realIndex = swiper.virtual.slides.length + realIndex;\n        if (realIndex >= swiper.virtual.slides.length) realIndex -= swiper.virtual.slides.length;\n        return realIndex;\n    };\n    if (typeof activeIndex === \"undefined\") activeIndex = $12f396601cf1ba7d$var$getActiveIndexByTranslate(swiper);\n    if (snapGrid.indexOf(translate) >= 0) snapIndex = snapGrid.indexOf(translate);\n    else {\n        var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n    if (activeIndex === previousIndex && !swiper.params.loop) {\n        if (snapIndex !== previousSnapIndex) {\n            swiper.snapIndex = snapIndex;\n            swiper.emit(\"snapIndexChange\");\n        }\n        return;\n    }\n    if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.realIndex = getVirtualRealIndex(activeIndex);\n        return;\n    }\n    var gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n    // Get real index\n    var realIndex;\n    if (swiper.virtual && params.virtual.enabled && params.loop) realIndex = getVirtualRealIndex(activeIndex);\n    else if (gridEnabled) {\n        var firstSlideInColumn = swiper.slides.filter(function(slideEl) {\n            return slideEl.column === activeIndex;\n        })[0];\n        var activeSlideIndex = parseInt(firstSlideInColumn.getAttribute(\"data-swiper-slide-index\"), 10);\n        if (Number.isNaN(activeSlideIndex)) activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n        realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n    } else if (swiper.slides[activeIndex]) {\n        var slideIndex = swiper.slides[activeIndex].getAttribute(\"data-swiper-slide-index\");\n        if (slideIndex) realIndex = parseInt(slideIndex, 10);\n        else realIndex = activeIndex;\n    } else realIndex = activeIndex;\n    Object.assign(swiper, {\n        previousSnapIndex: previousSnapIndex,\n        snapIndex: snapIndex,\n        previousRealIndex: previousRealIndex,\n        realIndex: realIndex,\n        previousIndex: previousIndex,\n        activeIndex: activeIndex\n    });\n    if (swiper.initialized) $12f396601cf1ba7d$var$preload(swiper);\n    swiper.emit(\"activeIndexChange\");\n    swiper.emit(\"snapIndexChange\");\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n        if (previousRealIndex !== realIndex) swiper.emit(\"realIndexChange\");\n        swiper.emit(\"slideChange\");\n    }\n}\nfunction $12f396601cf1ba7d$var$updateClickedSlide(el, path) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = el.closest(\".\".concat(params.slideClass, \", swiper-slide\"));\n    if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(path.slice(path.indexOf(el) + 1, path.length)).forEach(function(pathEl) {\n        if (!slide && pathEl.matches && pathEl.matches(\".\".concat(params.slideClass, \", swiper-slide\"))) slide = pathEl;\n    });\n    var slideFound = false;\n    var slideIndex;\n    if (slide) {\n        for(var i = 0; i < swiper.slides.length; i += 1)if (swiper.slides[i] === slide) {\n            slideFound = true;\n            slideIndex = i;\n            break;\n        }\n    }\n    if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n        if (swiper.virtual && swiper.params.virtual.enabled) swiper.clickedIndex = parseInt(slide.getAttribute(\"data-swiper-slide-index\"), 10);\n        else swiper.clickedIndex = slideIndex;\n    } else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) swiper.slideToClickedSlide();\n}\nvar $12f396601cf1ba7d$var$update = {\n    updateSize: $12f396601cf1ba7d$var$updateSize,\n    updateSlides: $12f396601cf1ba7d$var$updateSlides,\n    updateAutoHeight: $12f396601cf1ba7d$var$updateAutoHeight,\n    updateSlidesOffset: $12f396601cf1ba7d$var$updateSlidesOffset,\n    updateSlidesProgress: $12f396601cf1ba7d$var$updateSlidesProgress,\n    updateProgress: $12f396601cf1ba7d$var$updateProgress,\n    updateSlidesClasses: $12f396601cf1ba7d$var$updateSlidesClasses,\n    updateActiveIndex: $12f396601cf1ba7d$var$updateActiveIndex,\n    updateClickedSlide: $12f396601cf1ba7d$var$updateClickedSlide\n};\nfunction $12f396601cf1ba7d$var$getSwiperTranslate(axis) {\n    if (axis === void 0) axis = this.isHorizontal() ? \"x\" : \"y\";\n    var swiper = this;\n    var params = swiper.params, rtl = swiper.rtlTranslate, translate = swiper.translate, wrapperEl = swiper.wrapperEl;\n    if (params.virtualTranslate) return rtl ? -translate : translate;\n    if (params.cssMode) return translate;\n    var currentTranslate = (0, $d680807689e9ecb0$export$23f2a1d2818174ef)(wrapperEl, axis);\n    currentTranslate += swiper.cssOverflowAdjustment();\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n}\nfunction $12f396601cf1ba7d$var$setTranslate(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate, params = swiper.params, wrapperEl = swiper.wrapperEl, progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    if (swiper.isHorizontal()) x = rtl ? -translate : translate;\n    else y = translate;\n    if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n    if (params.cssMode) wrapperEl[swiper.isHorizontal() ? \"scrollLeft\" : \"scrollTop\"] = swiper.isHorizontal() ? -x : -y;\n    else if (!params.virtualTranslate) {\n        if (swiper.isHorizontal()) x -= swiper.cssOverflowAdjustment();\n        else y -= swiper.cssOverflowAdjustment();\n        wrapperEl.style.transform = \"translate3d(\".concat(x, \"px, \").concat(y, \"px, \").concat(z, \"px)\");\n    }\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) newProgress = 0;\n    else newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    if (newProgress !== progress) swiper.updateProgress(translate);\n    swiper.emit(\"setTranslate\", swiper.translate, byController);\n}\nfunction $12f396601cf1ba7d$var$minTranslate() {\n    return -this.snapGrid[0];\n}\nfunction $12f396601cf1ba7d$var$maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n}\nfunction $12f396601cf1ba7d$var$translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n    if (translate === void 0) translate = 0;\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    if (translateBounds === void 0) translateBounds = true;\n    var swiper = this;\n    var params = swiper.params, wrapperEl = swiper.wrapperEl;\n    if (swiper.animating && params.preventInteractionOnTransition) return false;\n    var _$minTranslate = swiper.minTranslate();\n    var _$maxTranslate = swiper.maxTranslate();\n    var newTranslate;\n    if (translateBounds && translate > _$minTranslate) newTranslate = _$minTranslate;\n    else if (translateBounds && translate < _$maxTranslate) newTranslate = _$maxTranslate;\n    else newTranslate = translate;\n    // Update progress\n    swiper.updateProgress(newTranslate);\n    if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n        if (speed === 0) wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = -newTranslate;\n        else {\n            if (!swiper.support.smoothScroll) {\n                (0, $d680807689e9ecb0$export$43caf9889c228507)({\n                    swiper: swiper,\n                    targetPosition: -newTranslate,\n                    side: isH ? \"left\" : \"top\"\n                });\n                return true;\n            }\n            var _obj;\n            wrapperEl.scrollTo((_obj = {}, (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(_obj, isH ? \"left\" : \"top\", -newTranslate), (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(_obj, \"behavior\", \"smooth\"), _obj));\n        }\n        return true;\n    }\n    if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n            swiper.emit(\"beforeTransitionStart\", speed, internal);\n            swiper.emit(\"transitionEnd\");\n        }\n    } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n            swiper.emit(\"beforeTransitionStart\", speed, internal);\n            swiper.emit(\"transitionStart\");\n        }\n        if (!swiper.animating) {\n            swiper.animating = true;\n            if (!swiper.onTranslateToWrapperTransitionEnd) swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n                if (!swiper || swiper.destroyed) return;\n                if (e.target !== this) return;\n                swiper.wrapperEl.removeEventListener(\"transitionend\", swiper.onTranslateToWrapperTransitionEnd);\n                swiper.onTranslateToWrapperTransitionEnd = null;\n                delete swiper.onTranslateToWrapperTransitionEnd;\n                if (runCallbacks) swiper.emit(\"transitionEnd\");\n            };\n            swiper.wrapperEl.addEventListener(\"transitionend\", swiper.onTranslateToWrapperTransitionEnd);\n        }\n    }\n    return true;\n}\nvar $12f396601cf1ba7d$var$translate = {\n    getTranslate: $12f396601cf1ba7d$var$getSwiperTranslate,\n    setTranslate: $12f396601cf1ba7d$var$setTranslate,\n    minTranslate: $12f396601cf1ba7d$var$minTranslate,\n    maxTranslate: $12f396601cf1ba7d$var$maxTranslate,\n    translateTo: $12f396601cf1ba7d$var$translateTo\n};\nfunction $12f396601cf1ba7d$var$setTransition(duration, byController) {\n    var swiper = this;\n    if (!swiper.params.cssMode) {\n        swiper.wrapperEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n        swiper.wrapperEl.style.transitionDelay = duration === 0 ? \"0ms\" : \"\";\n    }\n    swiper.emit(\"setTransition\", duration, byController);\n}\nfunction $12f396601cf1ba7d$var$transitionEmit(_ref) {\n    var swiper = _ref.swiper, runCallbacks = _ref.runCallbacks, direction = _ref.direction, step = _ref.step;\n    var activeIndex = swiper.activeIndex, previousIndex = swiper.previousIndex;\n    var dir = direction;\n    if (!dir) {\n        if (activeIndex > previousIndex) dir = \"next\";\n        else if (activeIndex < previousIndex) dir = \"prev\";\n        else dir = \"reset\";\n    }\n    swiper.emit(\"transition\".concat(step));\n    if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === \"reset\") {\n            swiper.emit(\"slideResetTransition\".concat(step));\n            return;\n        }\n        swiper.emit(\"slideChangeTransition\".concat(step));\n        if (dir === \"next\") swiper.emit(\"slideNextTransition\".concat(step));\n        else swiper.emit(\"slidePrevTransition\".concat(step));\n    }\n}\nfunction $12f396601cf1ba7d$var$transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var params = swiper.params;\n    if (params.cssMode) return;\n    if (params.autoHeight) swiper.updateAutoHeight();\n    $12f396601cf1ba7d$var$transitionEmit({\n        swiper: swiper,\n        runCallbacks: runCallbacks,\n        direction: direction,\n        step: \"Start\"\n    });\n}\nfunction $12f396601cf1ba7d$var$transitionEnd(runCallbacks, direction) {\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var params = swiper.params;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    $12f396601cf1ba7d$var$transitionEmit({\n        swiper: swiper,\n        runCallbacks: runCallbacks,\n        direction: direction,\n        step: \"End\"\n    });\n}\nvar $12f396601cf1ba7d$var$transition = {\n    setTransition: $12f396601cf1ba7d$var$setTransition,\n    transitionStart: $12f396601cf1ba7d$var$transitionStart,\n    transitionEnd: $12f396601cf1ba7d$var$transitionEnd\n};\nfunction $12f396601cf1ba7d$var$slideTo(index, speed, runCallbacks, internal, initial) {\n    if (index === void 0) index = 0;\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    if (typeof index === \"string\") index = parseInt(index, 10);\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, previousIndex = swiper.previousIndex, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate, wrapperEl = swiper.wrapperEl, enabled = swiper.enabled;\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial || swiper.destroyed) return false;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n    var translate = -snapGrid[snapIndex];\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) for(var i = 0; i < slidesGrid.length; i += 1){\n        var normalizedTranslate = -Math.floor(translate * 100);\n        var normalizedGrid = Math.floor(slidesGrid[i] * 100);\n        var normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n        if (typeof slidesGrid[i + 1] !== \"undefined\") {\n            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) slideIndex = i;\n            else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) slideIndex = i + 1;\n        } else if (normalizedTranslate >= normalizedGrid) slideIndex = i;\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) return false;\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n            if ((activeIndex || 0) !== slideIndex) return false;\n        }\n    }\n    if (slideIndex !== (previousIndex || 0) && runCallbacks) swiper.emit(\"beforeSlideChangeStart\");\n    // Update progress\n    swiper.updateProgress(translate);\n    var direction;\n    if (slideIndex > activeIndex) direction = \"next\";\n    else if (slideIndex < activeIndex) direction = \"prev\";\n    else direction = \"reset\";\n    // Update Index\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n        swiper.updateActiveIndex(slideIndex);\n        // Update Height\n        if (params.autoHeight) swiper.updateAutoHeight();\n        swiper.updateSlidesClasses();\n        if (params.effect !== \"slide\") swiper.setTranslate(translate);\n        if (direction !== \"reset\") {\n            swiper.transitionStart(runCallbacks, direction);\n            swiper.transitionEnd(runCallbacks, direction);\n        }\n        return false;\n    }\n    if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n        var t = rtl ? translate : -translate;\n        if (speed === 0) {\n            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n            if (isVirtual) {\n                swiper.wrapperEl.style.scrollSnapType = \"none\";\n                swiper._immediateVirtual = true;\n            }\n            if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n                swiper._cssModeVirtualInitialSet = true;\n                requestAnimationFrame(function() {\n                    wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = t;\n                });\n            } else wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = t;\n            if (isVirtual) requestAnimationFrame(function() {\n                swiper.wrapperEl.style.scrollSnapType = \"\";\n                swiper._immediateVirtual = false;\n            });\n        } else {\n            if (!swiper.support.smoothScroll) {\n                (0, $d680807689e9ecb0$export$43caf9889c228507)({\n                    swiper: swiper,\n                    targetPosition: t,\n                    side: isH ? \"left\" : \"top\"\n                });\n                return true;\n            }\n            var _obj;\n            wrapperEl.scrollTo((_obj = {}, (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(_obj, isH ? \"left\" : \"top\", t), (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(_obj, \"behavior\", \"smooth\"), _obj));\n        }\n        return true;\n    }\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit(\"beforeTransitionStart\", speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (speed === 0) swiper.transitionEnd(runCallbacks, direction);\n    else if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.wrapperEl.removeEventListener(\"transitionend\", swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n        };\n        swiper.wrapperEl.addEventListener(\"transitionend\", swiper.onSlideToWrapperTransitionEnd);\n    }\n    return true;\n}\nfunction $12f396601cf1ba7d$var$slideToLoop(index, speed, runCallbacks, internal) {\n    if (index === void 0) index = 0;\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    if (typeof index === \"string\") {\n        var indexAsNumber = parseInt(index, 10);\n        index = indexAsNumber;\n    }\n    var swiper = this;\n    if (swiper.destroyed) return;\n    var gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n    var newIndex = index;\n    if (swiper.params.loop) {\n        if (swiper.virtual && swiper.params.virtual.enabled) // eslint-disable-next-line\n        newIndex = newIndex + swiper.virtual.slidesBefore;\n        else {\n            var targetSlideIndex;\n            if (gridEnabled) {\n                var slideIndex = newIndex * swiper.params.grid.rows;\n                targetSlideIndex = swiper.slides.filter(function(slideEl) {\n                    return slideEl.getAttribute(\"data-swiper-slide-index\") * 1 === slideIndex;\n                })[0].column;\n            } else targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n            var cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n            var centeredSlides = swiper.params.centeredSlides;\n            var slidesPerView = swiper.params.slidesPerView;\n            if (slidesPerView === \"auto\") slidesPerView = swiper.slidesPerViewDynamic();\n            else {\n                slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n                if (centeredSlides && slidesPerView % 2 === 0) slidesPerView = slidesPerView + 1;\n            }\n            var needLoopFix = cols - targetSlideIndex < slidesPerView;\n            if (centeredSlides) needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n            if (needLoopFix) {\n                var direction = centeredSlides ? targetSlideIndex < swiper.activeIndex ? \"prev\" : \"next\" : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? \"next\" : \"prev\";\n                swiper.loopFix({\n                    direction: direction,\n                    slideTo: true,\n                    activeSlideIndex: direction === \"next\" ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n                    slideRealIndex: direction === \"next\" ? swiper.realIndex : undefined\n                });\n            }\n            if (gridEnabled) {\n                var slideIndex1 = newIndex * swiper.params.grid.rows;\n                newIndex = swiper.slides.filter(function(slideEl) {\n                    return slideEl.getAttribute(\"data-swiper-slide-index\") * 1 === slideIndex1;\n                })[0].column;\n            } else newIndex = swiper.getSlideIndexByData(newIndex);\n        }\n    }\n    requestAnimationFrame(function() {\n        swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    });\n    return swiper;\n}\n/* eslint no-unused-vars: \"off\" */ function $12f396601cf1ba7d$var$slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var enabled = swiper.enabled, params = swiper.params, animating = swiper.animating;\n    if (!enabled || swiper.destroyed) return swiper;\n    var perGroup = params.slidesPerGroup;\n    if (params.slidesPerView === \"auto\" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) perGroup = Math.max(swiper.slidesPerViewDynamic(\"current\", true), 1);\n    var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    if (params.loop) {\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\n        swiper.loopFix({\n            direction: \"next\"\n        });\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\n        if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n            requestAnimationFrame(function() {\n                swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n            });\n            return true;\n        }\n    }\n    if (params.rewind && swiper.isEnd) return swiper.slideTo(0, speed, runCallbacks, internal);\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */ function $12f396601cf1ba7d$var$slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled, animating = swiper.animating;\n    if (!enabled || swiper.destroyed) return swiper;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    if (params.loop) {\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\n        swiper.loopFix({\n            direction: \"prev\"\n        });\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n        if (val < 0) return -Math.floor(Math.abs(val));\n        return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function(val) {\n        return normalize(val);\n    });\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    if (typeof prevSnap === \"undefined\" && params.cssMode) {\n        var prevSnapIndex;\n        snapGrid.forEach(function(snap, snapIndex) {\n            if (normalizedTranslate >= snap) // prevSnap = snap;\n            prevSnapIndex = snapIndex;\n        });\n        if (typeof prevSnapIndex !== \"undefined\") prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n    var prevIndex = 0;\n    if (typeof prevSnap !== \"undefined\") {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n        if (params.slidesPerView === \"auto\" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n            prevIndex = prevIndex - swiper.slidesPerViewDynamic(\"previous\", true) + 1;\n            prevIndex = Math.max(prevIndex, 0);\n        }\n    }\n    if (params.rewind && swiper.isBeginning) {\n        var lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n    } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n        requestAnimationFrame(function() {\n            swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n        });\n        return true;\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */ function $12f396601cf1ba7d$var$slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    if (swiper.destroyed) return;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */ function $12f396601cf1ba7d$var$slideToClosest(speed, runCallbacks, internal, threshold) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    if (threshold === void 0) threshold = 0.5;\n    var swiper = this;\n    if (swiper.destroyed) return;\n    var index = swiper.activeIndex;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    if (translate >= swiper.snapGrid[snapIndex]) {\n        // The current translate is on or after the current snap index, so the choice\n        // is between the current index and the one after it.\n        var currentSnap = swiper.snapGrid[snapIndex];\n        var nextSnap = swiper.snapGrid[snapIndex + 1];\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) index += swiper.params.slidesPerGroup;\n    } else {\n        // The current translate is before the current snap index, so the choice\n        // is between the current index and the one before it.\n        var prevSnap = swiper.snapGrid[snapIndex - 1];\n        var currentSnap1 = swiper.snapGrid[snapIndex];\n        if (translate - prevSnap <= (currentSnap1 - prevSnap) * threshold) index -= swiper.params.slidesPerGroup;\n    }\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n}\nfunction $12f396601cf1ba7d$var$slideToClickedSlide() {\n    var swiper = this;\n    if (swiper.destroyed) return;\n    var params = swiper.params, slidesEl = swiper.slidesEl;\n    var slidesPerView = params.slidesPerView === \"auto\" ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    var slideSelector = swiper.isElement ? \"swiper-slide\" : \".\".concat(params.slideClass);\n    if (params.loop) {\n        if (swiper.animating) return;\n        realIndex = parseInt(swiper.clickedSlide.getAttribute(\"data-swiper-slide-index\"), 10);\n        if (params.centeredSlides) {\n            if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n                swiper.loopFix();\n                slideToIndex = swiper.getSlideIndex((0, $d680807689e9ecb0$export$f1e1789686576879)(slidesEl, \"\".concat(slideSelector, '[data-swiper-slide-index=\"').concat(realIndex, '\"]'))[0]);\n                (0, $d680807689e9ecb0$export$7ccc53e8f1e7dfc5)(function() {\n                    swiper.slideTo(slideToIndex);\n                });\n            } else swiper.slideTo(slideToIndex);\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n            swiper.loopFix();\n            slideToIndex = swiper.getSlideIndex((0, $d680807689e9ecb0$export$f1e1789686576879)(slidesEl, \"\".concat(slideSelector, '[data-swiper-slide-index=\"').concat(realIndex, '\"]'))[0]);\n            (0, $d680807689e9ecb0$export$7ccc53e8f1e7dfc5)(function() {\n                swiper.slideTo(slideToIndex);\n            });\n        } else swiper.slideTo(slideToIndex);\n    } else swiper.slideTo(slideToIndex);\n}\nvar $12f396601cf1ba7d$var$slide = {\n    slideTo: $12f396601cf1ba7d$var$slideTo,\n    slideToLoop: $12f396601cf1ba7d$var$slideToLoop,\n    slideNext: $12f396601cf1ba7d$var$slideNext,\n    slidePrev: $12f396601cf1ba7d$var$slidePrev,\n    slideReset: $12f396601cf1ba7d$var$slideReset,\n    slideToClosest: $12f396601cf1ba7d$var$slideToClosest,\n    slideToClickedSlide: $12f396601cf1ba7d$var$slideToClickedSlide\n};\nfunction $12f396601cf1ba7d$var$loopCreate(slideRealIndex) {\n    var swiper = this;\n    var params = swiper.params, slidesEl = swiper.slidesEl;\n    if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n    var initSlides = function() {\n        var slides = (0, $d680807689e9ecb0$export$f1e1789686576879)(slidesEl, \".\".concat(params.slideClass, \", swiper-slide\"));\n        slides.forEach(function(el, index) {\n            el.setAttribute(\"data-swiper-slide-index\", index);\n        });\n    };\n    var gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n    var slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n    var shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n    var shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n    var addBlankSlides = function(amountOfSlides) {\n        for(var i = 0; i < amountOfSlides; i += 1){\n            var slideEl = swiper.isElement ? (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"swiper-slide\", [\n                params.slideBlankClass\n            ]) : (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", [\n                params.slideClass,\n                params.slideBlankClass\n            ]);\n            swiper.slidesEl.append(slideEl);\n        }\n    };\n    if (shouldFillGroup) {\n        if (params.loopAddBlankSlides) {\n            var slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n            addBlankSlides(slidesToAdd);\n            swiper.recalcSlides();\n            swiper.updateSlides();\n        } else (0, $d680807689e9ecb0$export$625550452a3fa3ec)(\"Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)\");\n        initSlides();\n    } else if (shouldFillGrid) {\n        if (params.loopAddBlankSlides) {\n            var slidesToAdd1 = params.grid.rows - swiper.slides.length % params.grid.rows;\n            addBlankSlides(slidesToAdd1);\n            swiper.recalcSlides();\n            swiper.updateSlides();\n        } else (0, $d680807689e9ecb0$export$625550452a3fa3ec)(\"Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)\");\n        initSlides();\n    } else initSlides();\n    swiper.loopFix({\n        slideRealIndex: slideRealIndex,\n        direction: params.centeredSlides ? undefined : \"next\"\n    });\n}\nfunction $12f396601cf1ba7d$var$loopFix(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp, slideRealIndex = _ref.slideRealIndex, _ref_slideTo = _ref.slideTo, _$slideTo = _ref_slideTo === void 0 ? true : _ref_slideTo, direction = _ref.direction, _$setTranslate = _ref.setTranslate, activeSlideIndex = _ref.activeSlideIndex, byController = _ref.byController, byMousewheel = _ref.byMousewheel;\n    var swiper = this;\n    if (!swiper.params.loop) return;\n    swiper.emit(\"beforeLoopFix\");\n    var slides = swiper.slides, allowSlidePrev = swiper.allowSlidePrev, allowSlideNext = swiper.allowSlideNext, slidesEl = swiper.slidesEl, params = swiper.params;\n    var centeredSlides = params.centeredSlides;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    if (swiper.virtual && params.virtual.enabled) {\n        if (_$slideTo) {\n            if (!params.centeredSlides && swiper.snapIndex === 0) swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n            else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n            else if (swiper.snapIndex === swiper.snapGrid.length - 1) swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n        }\n        swiper.allowSlidePrev = allowSlidePrev;\n        swiper.allowSlideNext = allowSlideNext;\n        swiper.emit(\"loopFix\");\n        return;\n    }\n    var slidesPerView = params.slidesPerView;\n    if (slidesPerView === \"auto\") slidesPerView = swiper.slidesPerViewDynamic();\n    else {\n        slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n        if (centeredSlides && slidesPerView % 2 === 0) slidesPerView = slidesPerView + 1;\n    }\n    var slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n    var loopedSlides = slidesPerGroup;\n    if (loopedSlides % slidesPerGroup !== 0) loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n    loopedSlides += params.loopAdditionalSlides;\n    swiper.loopedSlides = loopedSlides;\n    var gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n    if (slides.length < slidesPerView + loopedSlides) (0, $d680807689e9ecb0$export$625550452a3fa3ec)(\"Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters\");\n    else if (gridEnabled && params.grid.fill === \"row\") (0, $d680807689e9ecb0$export$625550452a3fa3ec)(\"Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`\");\n    var prependSlidesIndexes = [];\n    var appendSlidesIndexes = [];\n    var activeIndex = swiper.activeIndex;\n    if (typeof activeSlideIndex === \"undefined\") activeSlideIndex = swiper.getSlideIndex(slides.filter(function(el) {\n        return el.classList.contains(params.slideActiveClass);\n    })[0]);\n    else activeIndex = activeSlideIndex;\n    var isNext = direction === \"next\" || !direction;\n    var isPrev = direction === \"prev\" || !direction;\n    var slidesPrepended = 0;\n    var slidesAppended = 0;\n    var cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n    var activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n    var activeColIndexWithShift = activeColIndex + (centeredSlides && typeof _$setTranslate === \"undefined\" ? -slidesPerView / 2 + 0.5 : 0);\n    // prepend last slides before start\n    if (activeColIndexWithShift < loopedSlides) {\n        slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n        for(var i = 0; i < loopedSlides - activeColIndexWithShift; i += 1){\n            var index = i - Math.floor(i / cols) * cols;\n            if (gridEnabled) {\n                var colIndexToPrepend = cols - index - 1;\n                for(var i1 = slides.length - 1; i1 >= 0; i1 -= 1)if (slides[i1].column === colIndexToPrepend) prependSlidesIndexes.push(i1);\n            // slides.forEach((slide, slideIndex) => {\n            //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n            // });\n            } else prependSlidesIndexes.push(cols - index - 1);\n        }\n    } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n        var _loop = function(i2) {\n            var index = i2 - Math.floor(i2 / cols) * cols;\n            if (gridEnabled) slides.forEach(function(slide, slideIndex) {\n                if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n            });\n            else appendSlidesIndexes.push(index);\n        };\n        slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n        for(var i2 = 0; i2 < slidesAppended; i2 += 1)_loop(i2);\n    }\n    swiper.__preventObserver__ = true;\n    requestAnimationFrame(function() {\n        swiper.__preventObserver__ = false;\n    });\n    if (isPrev) prependSlidesIndexes.forEach(function(index) {\n        slides[index].swiperLoopMoveDOM = true;\n        slidesEl.prepend(slides[index]);\n        slides[index].swiperLoopMoveDOM = false;\n    });\n    if (isNext) appendSlidesIndexes.forEach(function(index) {\n        slides[index].swiperLoopMoveDOM = true;\n        slidesEl.append(slides[index]);\n        slides[index].swiperLoopMoveDOM = false;\n    });\n    swiper.recalcSlides();\n    if (params.slidesPerView === \"auto\") swiper.updateSlides();\n    else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) swiper.slides.forEach(function(slide, slideIndex) {\n        swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n    if (params.watchSlidesProgress) swiper.updateSlidesOffset();\n    if (_$slideTo) {\n        if (prependSlidesIndexes.length > 0 && isPrev) {\n            if (typeof slideRealIndex === \"undefined\") {\n                var currentSlideTranslate = swiper.slidesGrid[activeIndex];\n                var newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n                var diff = newSlideTranslate - currentSlideTranslate;\n                if (byMousewheel) swiper.setTranslate(swiper.translate - diff);\n                else {\n                    swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n                    if (_$setTranslate) {\n                        swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n                        swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n                    }\n                }\n            } else if (_$setTranslate) {\n                var shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n                swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n                swiper.touchEventsData.currentTranslate = swiper.translate;\n            }\n        } else if (appendSlidesIndexes.length > 0 && isNext) {\n            if (typeof slideRealIndex === \"undefined\") {\n                var currentSlideTranslate1 = swiper.slidesGrid[activeIndex];\n                var newSlideTranslate1 = swiper.slidesGrid[activeIndex - slidesAppended];\n                var diff1 = newSlideTranslate1 - currentSlideTranslate1;\n                if (byMousewheel) swiper.setTranslate(swiper.translate - diff1);\n                else {\n                    swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n                    if (_$setTranslate) {\n                        swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff1;\n                        swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff1;\n                    }\n                }\n            } else {\n                var shift1 = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n                swiper.slideTo(swiper.activeIndex - shift1, 0, false, true);\n            }\n        }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    if (swiper.controller && swiper.controller.control && !byController) {\n        var loopParams = {\n            slideRealIndex: slideRealIndex,\n            direction: direction,\n            setTranslate: _$setTranslate,\n            activeSlideIndex: activeSlideIndex,\n            byController: true\n        };\n        if (Array.isArray(swiper.controller.control)) swiper.controller.control.forEach(function(c) {\n            if (!c.destroyed && c.params.loop) c.loopFix((0, $f17388ede13a49cc$export$4fa2f4023c9cbda5)((0, $ad1c00e896d27009$export$581ff339ea0ba762)({}, loopParams), {\n                slideTo: c.params.slidesPerView === params.slidesPerView ? _$slideTo : false\n            }));\n        });\n        else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) swiper.controller.control.loopFix((0, $f17388ede13a49cc$export$4fa2f4023c9cbda5)((0, $ad1c00e896d27009$export$581ff339ea0ba762)({}, loopParams), {\n            slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? _$slideTo : false\n        }));\n    }\n    swiper.emit(\"loopFix\");\n}\nfunction $12f396601cf1ba7d$var$loopDestroy() {\n    var swiper = this;\n    var params = swiper.params, slidesEl = swiper.slidesEl;\n    if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n    swiper.recalcSlides();\n    var newSlidesOrder = [];\n    swiper.slides.forEach(function(slideEl) {\n        var index = typeof slideEl.swiperSlideIndex === \"undefined\" ? slideEl.getAttribute(\"data-swiper-slide-index\") * 1 : slideEl.swiperSlideIndex;\n        newSlidesOrder[index] = slideEl;\n    });\n    swiper.slides.forEach(function(slideEl) {\n        slideEl.removeAttribute(\"data-swiper-slide-index\");\n    });\n    newSlidesOrder.forEach(function(slideEl) {\n        slidesEl.append(slideEl);\n    });\n    swiper.recalcSlides();\n    swiper.slideTo(swiper.realIndex, 0);\n}\nvar $12f396601cf1ba7d$var$loop = {\n    loopCreate: $12f396601cf1ba7d$var$loopCreate,\n    loopFix: $12f396601cf1ba7d$var$loopFix,\n    loopDestroy: $12f396601cf1ba7d$var$loopDestroy\n};\nfunction $12f396601cf1ba7d$var$setGrabCursor(moving) {\n    var swiper = this;\n    if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    var el = swiper.params.touchEventsTarget === \"container\" ? swiper.el : swiper.wrapperEl;\n    if (swiper.isElement) swiper.__preventObserver__ = true;\n    el.style.cursor = \"move\";\n    el.style.cursor = moving ? \"grabbing\" : \"grab\";\n    if (swiper.isElement) requestAnimationFrame(function() {\n        swiper.__preventObserver__ = false;\n    });\n}\nfunction $12f396601cf1ba7d$var$unsetGrabCursor() {\n    var swiper = this;\n    if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    if (swiper.isElement) swiper.__preventObserver__ = true;\n    swiper[swiper.params.touchEventsTarget === \"container\" ? \"el\" : \"wrapperEl\"].style.cursor = \"\";\n    if (swiper.isElement) requestAnimationFrame(function() {\n        swiper.__preventObserver__ = false;\n    });\n}\nvar $12f396601cf1ba7d$var$grabCursor = {\n    setGrabCursor: $12f396601cf1ba7d$var$setGrabCursor,\n    unsetGrabCursor: $12f396601cf1ba7d$var$unsetGrabCursor\n};\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction $12f396601cf1ba7d$var$closestElement(selector, base) {\n    if (base === void 0) base = this;\n    function __closestFrom(el) {\n        if (!el || el === (0, $0c3479cf5570869b$export$39b482c5e57630a8)() || el === (0, $0c3479cf5570869b$export$407448d2b89b1813)()) return null;\n        if (el.assignedSlot) el = el.assignedSlot;\n        var found = el.closest(selector);\n        if (!found && !el.getRootNode) return null;\n        return found || __closestFrom(el.getRootNode().host);\n    }\n    return __closestFrom(base);\n}\nfunction $12f396601cf1ba7d$var$preventEdgeSwipe(swiper, event, startX) {\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var params = swiper.params;\n    var edgeSwipeDetection = params.edgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold;\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window1.innerWidth - edgeSwipeThreshold)) {\n        if (edgeSwipeDetection === \"prevent\") {\n            event.preventDefault();\n            return true;\n        }\n        return false;\n    }\n    return true;\n}\nfunction $12f396601cf1ba7d$var$onTouchStart(event) {\n    var swiper = this;\n    var document1 = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    var data = swiper.touchEventsData;\n    if (e.type === \"pointerdown\") {\n        if (data.pointerId !== null && data.pointerId !== e.pointerId) return;\n        data.pointerId = e.pointerId;\n    } else if (e.type === \"touchstart\" && e.targetTouches.length === 1) data.touchId = e.targetTouches[0].identifier;\n    if (e.type === \"touchstart\") {\n        // don't proceed touch event\n        $12f396601cf1ba7d$var$preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n        return;\n    }\n    var params = swiper.params, touches = swiper.touches, enabled = swiper.enabled;\n    if (!enabled) return;\n    if (!params.simulateTouch && e.pointerType === \"mouse\") return;\n    if (swiper.animating && params.preventInteractionOnTransition) return;\n    if (!swiper.animating && params.cssMode && params.loop) swiper.loopFix();\n    var targetEl = e.target;\n    if (params.touchEventsTarget === \"wrapper\") {\n        if (!swiper.wrapperEl.contains(targetEl)) return;\n    }\n    if (\"which\" in e && e.which === 3) return;\n    if (\"button\" in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return;\n    // change target el for shadow root component\n    var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== \"\";\n    // eslint-disable-next-line\n    var eventPath = e.composedPath ? e.composedPath() : e.path;\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) targetEl = eventPath[0];\n    var noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : \".\".concat(params.noSwipingClass);\n    var isTargetShadow = !!(e.target && e.target.shadowRoot);\n    // use closestElement for shadow root element to get the actual closest for nested shadow root element\n    if (params.noSwiping && (isTargetShadow ? $12f396601cf1ba7d$var$closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n        swiper.allowClick = true;\n        return;\n    }\n    if (params.swipeHandler) {\n        if (!targetEl.closest(params.swipeHandler)) return;\n    }\n    touches.currentX = e.pageX;\n    touches.currentY = e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n    if (!$12f396601cf1ba7d$var$preventEdgeSwipe(swiper, e, startX)) return;\n    Object.assign(data, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = (0, $d680807689e9ecb0$export$4368d992c4eafac0)();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n    var preventDefault = true;\n    if (targetEl.matches(data.focusableElements)) {\n        preventDefault = false;\n        if (targetEl.nodeName === \"SELECT\") data.isTouched = false;\n    }\n    if (document1.activeElement && document1.activeElement.matches(data.focusableElements) && document1.activeElement !== targetEl) document1.activeElement.blur();\n    var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) e.preventDefault();\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) swiper.freeMode.onTouchStart();\n    swiper.emit(\"touchStart\", e);\n}\nfunction $12f396601cf1ba7d$var$onTouchMove(event) {\n    var document1 = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, enabled = swiper.enabled;\n    if (!enabled) return;\n    if (!params.simulateTouch && event.pointerType === \"mouse\") return;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    if (e.type === \"pointermove\") {\n        if (data.touchId !== null) return; // return from pointer if we use touch\n        var id = e.pointerId;\n        if (id !== data.pointerId) return;\n    }\n    var targetTouch;\n    if (e.type === \"touchmove\") {\n        targetTouch = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(e.changedTouches).filter(function(t) {\n            return t.identifier === data.touchId;\n        })[0];\n        if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n    } else targetTouch = e;\n    if (!data.isTouched) {\n        if (data.startMoving && data.isScrolling) swiper.emit(\"touchMoveOpposite\", e);\n        return;\n    }\n    var pageX = targetTouch.pageX;\n    var pageY = targetTouch.pageY;\n    if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n    }\n    if (!swiper.allowTouchMove) {\n        if (!e.target.matches(data.focusableElements)) swiper.allowClick = false;\n        if (data.isTouched) {\n            Object.assign(touches, {\n                startX: pageX,\n                startY: pageY,\n                currentX: pageX,\n                currentY: pageY\n            });\n            data.touchStartTime = (0, $d680807689e9ecb0$export$4368d992c4eafac0)();\n        }\n        return;\n    }\n    if (params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) // Vertical\n        {\n            if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n                data.isTouched = false;\n                data.isMoved = false;\n                return;\n            }\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) return;\n    }\n    if (document1.activeElement) {\n        if (e.target === document1.activeElement && e.target.matches(data.focusableElements)) {\n            data.isMoved = true;\n            swiper.allowClick = false;\n            return;\n        }\n    }\n    if (data.allowTouchCallbacks) swiper.emit(\"touchMove\", e);\n    touches.previousX = touches.currentX;\n    touches.previousY = touches.currentY;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;\n    if (typeof data.isScrolling === \"undefined\") {\n        var touchAngle;\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) data.isScrolling = false;\n        else // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n    }\n    if (data.isScrolling) swiper.emit(\"touchMoveOpposite\", e);\n    if (typeof data.startMoving === \"undefined\") {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) data.startMoving = true;\n    }\n    if (data.isScrolling) {\n        data.isTouched = false;\n        return;\n    }\n    if (!data.startMoving) return;\n    swiper.allowClick = false;\n    if (!params.cssMode && e.cancelable) e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) e.stopPropagation();\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    var touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n    if (params.oneWayMovement) {\n        diff = Math.abs(diff) * (rtl ? 1 : -1);\n        touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n    }\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) {\n        diff = -diff;\n        touchesDiff = -touchesDiff;\n    }\n    var prevTouchesDirection = swiper.touchesDirection;\n    swiper.swipeDirection = diff > 0 ? \"prev\" : \"next\";\n    swiper.touchesDirection = touchesDiff > 0 ? \"prev\" : \"next\";\n    var isLoop = swiper.params.loop && !params.cssMode;\n    var allowLoopFix = swiper.touchesDirection === \"next\" && swiper.allowSlideNext || swiper.touchesDirection === \"prev\" && swiper.allowSlidePrev;\n    if (!data.isMoved) {\n        if (isLoop && allowLoopFix) swiper.loopFix({\n            direction: swiper.swipeDirection\n        });\n        data.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n        if (swiper.animating) {\n            var evt = new window.CustomEvent(\"transitionend\", {\n                bubbles: true,\n                cancelable: true\n            });\n            swiper.wrapperEl.dispatchEvent(evt);\n        }\n        data.allowMomentumBounce = false;\n        // Grab Cursor\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(true);\n        swiper.emit(\"sliderFirstMove\", e);\n    }\n    var loopFixed;\n    new Date().getTime();\n    if (data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n        Object.assign(touches, {\n            startX: pageX,\n            startY: pageY,\n            currentX: pageX,\n            currentY: pageY,\n            startTranslate: data.currentTranslate\n        });\n        data.loopSwapReset = true;\n        data.startTranslate = data.currentTranslate;\n        return;\n    }\n    swiper.emit(\"sliderMove\", e);\n    data.isMoved = true;\n    data.currentTranslate = diff + data.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) resistanceRatio = 0;\n    if (diff > 0) {\n        if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] : swiper.minTranslate())) swiper.loopFix({\n            direction: \"prev\",\n            setTranslate: true,\n            activeSlideIndex: 0\n        });\n        if (data.currentTranslate > swiper.minTranslate()) {\n            disableParentSwiper = false;\n            if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n        }\n    } else if (diff < 0) {\n        if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] : swiper.maxTranslate())) swiper.loopFix({\n            direction: \"next\",\n            setTranslate: true,\n            activeSlideIndex: swiper.slides.length - (params.slidesPerView === \"auto\" ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n        });\n        if (data.currentTranslate < swiper.maxTranslate()) {\n            disableParentSwiper = false;\n            if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n        }\n    }\n    if (disableParentSwiper) e.preventedByNestedSwiper = true;\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === \"next\" && data.currentTranslate < data.startTranslate) data.currentTranslate = data.startTranslate;\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === \"prev\" && data.currentTranslate > data.startTranslate) data.currentTranslate = data.startTranslate;\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) data.currentTranslate = data.startTranslate;\n    // Threshold\n    if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n            if (!data.allowThresholdMove) {\n                data.allowThresholdMove = true;\n                touches.startX = touches.currentX;\n                touches.startY = touches.currentY;\n                data.currentTranslate = data.startTranslate;\n                touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n                return;\n            }\n        } else {\n            data.currentTranslate = data.startTranslate;\n            return;\n        }\n    }\n    if (!params.followFinger || params.cssMode) return;\n    // Update active index in free mode\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    }\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode) swiper.freeMode.onTouchMove();\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n}\nfunction $12f396601cf1ba7d$var$onTouchEnd(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    var targetTouch;\n    var isTouchEvent = e.type === \"touchend\" || e.type === \"touchcancel\";\n    if (!isTouchEvent) {\n        if (data.touchId !== null) return; // return from pointer if we use touch\n        if (e.pointerId !== data.pointerId) return;\n        targetTouch = e;\n    } else {\n        targetTouch = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(e.changedTouches).filter(function(t) {\n            return t.identifier === data.touchId;\n        })[0];\n        if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n    }\n    if ([\n        \"pointercancel\",\n        \"pointerout\",\n        \"pointerleave\",\n        \"contextmenu\"\n    ].includes(e.type)) {\n        var proceed = [\n            \"pointercancel\",\n            \"contextmenu\"\n        ].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n        if (!proceed) return;\n    }\n    data.pointerId = null;\n    data.touchId = null;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, slidesGrid = swiper.slidesGrid, enabled = swiper.enabled;\n    if (!enabled) return;\n    if (!params.simulateTouch && e.pointerType === \"mouse\") return;\n    if (data.allowTouchCallbacks) swiper.emit(\"touchEnd\", e);\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n        if (data.isMoved && params.grabCursor) swiper.setGrabCursor(false);\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(false);\n    // Time diff\n    var touchEndTime = (0, $d680807689e9ecb0$export$4368d992c4eafac0)();\n    var timeDiff = touchEndTime - data.touchStartTime;\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n        var pathTree = e.path || e.composedPath && e.composedPath();\n        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n        swiper.emit(\"tap click\", e);\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) swiper.emit(\"doubleTap doubleClick\", e);\n    }\n    data.lastClickTime = (0, $d680807689e9ecb0$export$4368d992c4eafac0)();\n    (0, $d680807689e9ecb0$export$7ccc53e8f1e7dfc5)(function() {\n        if (!swiper.destroyed) swiper.allowClick = true;\n    });\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    var currentPos;\n    if (params.followFinger) currentPos = rtl ? swiper.translate : -swiper.translate;\n    else currentPos = -data.currentTranslate;\n    if (params.cssMode) return;\n    if (params.freeMode && params.freeMode.enabled) {\n        swiper.freeMode.onTouchEnd({\n            currentPos: currentPos\n        });\n        return;\n    }\n    // Find current slide\n    var swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for(var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup){\n        var increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n        if (typeof slidesGrid[i + increment] !== \"undefined\") {\n            if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n                stopIndex = i;\n                groupSize = slidesGrid[i + increment] - slidesGrid[i];\n            }\n        } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n            stopIndex = i;\n            groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n    }\n    var rewindFirstIndex = null;\n    var rewindLastIndex = null;\n    if (params.rewind) {\n        if (swiper.isBeginning) rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        else if (swiper.isEnd) rewindFirstIndex = 0;\n    }\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    var increment1 = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (swiper.swipeDirection === \"next\") {\n            if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment1);\n            else swiper.slideTo(stopIndex);\n        }\n        if (swiper.swipeDirection === \"prev\") {\n            if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment1);\n            else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) swiper.slideTo(rewindLastIndex);\n            else swiper.slideTo(stopIndex);\n        }\n    } else {\n        // Short swipes\n        if (!params.shortSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n        if (!isNavButtonTarget) {\n            if (swiper.swipeDirection === \"next\") swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment1);\n            if (swiper.swipeDirection === \"prev\") swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n        } else if (e.target === swiper.navigation.nextEl) swiper.slideTo(stopIndex + increment1);\n        else swiper.slideTo(stopIndex);\n    }\n}\nfunction $12f396601cf1ba7d$var$onResize() {\n    var swiper = this;\n    var params = swiper.params, el = swiper.el;\n    if (el && el.offsetWidth === 0) return;\n    // Breakpoints\n    if (params.breakpoints) swiper.setBreakpoint();\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext, allowSlidePrev = swiper.allowSlidePrev, snapGrid = swiper.snapGrid;\n    var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n    var isVirtualLoop = isVirtual && params.loop;\n    if ((params.slidesPerView === \"auto\" || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    else if (swiper.params.loop && !isVirtual) swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    else swiper.slideTo(swiper.activeIndex, 0, false, true);\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        clearTimeout(swiper.autoplay.resizeTimeout);\n        swiper.autoplay.resizeTimeout = setTimeout(function() {\n            if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) swiper.autoplay.resume();\n        }, 500);\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();\n}\nfunction $12f396601cf1ba7d$var$onClick(e) {\n    var swiper = this;\n    if (!swiper.enabled) return;\n    if (!swiper.allowClick) {\n        if (swiper.params.preventClicks) e.preventDefault();\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n}\nfunction $12f396601cf1ba7d$var$onScroll() {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled;\n    if (!enabled) return;\n    swiper.previousTranslate = swiper.translate;\n    if (swiper.isHorizontal()) swiper.translate = -wrapperEl.scrollLeft;\n    else swiper.translate = -wrapperEl.scrollTop;\n    // eslint-disable-next-line\n    if (swiper.translate === 0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) newProgress = 0;\n    else newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    if (newProgress !== swiper.progress) swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    swiper.emit(\"setTranslate\", swiper.translate, false);\n}\nfunction $12f396601cf1ba7d$var$onLoad(e) {\n    var swiper = this;\n    $12f396601cf1ba7d$var$processLazyPreloader(swiper, e.target);\n    if (swiper.params.cssMode || swiper.params.slidesPerView !== \"auto\" && !swiper.params.autoHeight) return;\n    swiper.update();\n}\nfunction $12f396601cf1ba7d$var$onDocumentTouchStart() {\n    var swiper = this;\n    if (swiper.documentTouchHandlerProceeded) return;\n    swiper.documentTouchHandlerProceeded = true;\n    if (swiper.params.touchReleaseOnEdges) swiper.el.style.touchAction = \"auto\";\n}\nvar $12f396601cf1ba7d$var$events = function(swiper, method) {\n    var document1 = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    var params = swiper.params, el = swiper.el, wrapperEl = swiper.wrapperEl, device = swiper.device;\n    var capture = !!params.nested;\n    var domMethod = method === \"on\" ? \"addEventListener\" : \"removeEventListener\";\n    var swiperMethod = method;\n    // Touch Events\n    document1[domMethod](\"touchstart\", swiper.onDocumentTouchStart, {\n        passive: false,\n        capture: capture\n    });\n    el[domMethod](\"touchstart\", swiper.onTouchStart, {\n        passive: false\n    });\n    el[domMethod](\"pointerdown\", swiper.onTouchStart, {\n        passive: false\n    });\n    document1[domMethod](\"touchmove\", swiper.onTouchMove, {\n        passive: false,\n        capture: capture\n    });\n    document1[domMethod](\"pointermove\", swiper.onTouchMove, {\n        passive: false,\n        capture: capture\n    });\n    document1[domMethod](\"touchend\", swiper.onTouchEnd, {\n        passive: true\n    });\n    document1[domMethod](\"pointerup\", swiper.onTouchEnd, {\n        passive: true\n    });\n    document1[domMethod](\"pointercancel\", swiper.onTouchEnd, {\n        passive: true\n    });\n    document1[domMethod](\"touchcancel\", swiper.onTouchEnd, {\n        passive: true\n    });\n    document1[domMethod](\"pointerout\", swiper.onTouchEnd, {\n        passive: true\n    });\n    document1[domMethod](\"pointerleave\", swiper.onTouchEnd, {\n        passive: true\n    });\n    document1[domMethod](\"contextmenu\", swiper.onTouchEnd, {\n        passive: true\n    });\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) el[domMethod](\"click\", swiper.onClick, true);\n    if (params.cssMode) wrapperEl[domMethod](\"scroll\", swiper.onScroll);\n    // Resize handler\n    if (params.updateOnWindowResize) swiper[swiperMethod](device.ios || device.android ? \"resize orientationchange observerUpdate\" : \"resize observerUpdate\", $12f396601cf1ba7d$var$onResize, true);\n    else swiper[swiperMethod](\"observerUpdate\", $12f396601cf1ba7d$var$onResize, true);\n    // Images loader\n    el[domMethod](\"load\", swiper.onLoad, {\n        capture: true\n    });\n};\nfunction $12f396601cf1ba7d$var$attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    swiper.onTouchStart = $12f396601cf1ba7d$var$onTouchStart.bind(swiper);\n    swiper.onTouchMove = $12f396601cf1ba7d$var$onTouchMove.bind(swiper);\n    swiper.onTouchEnd = $12f396601cf1ba7d$var$onTouchEnd.bind(swiper);\n    swiper.onDocumentTouchStart = $12f396601cf1ba7d$var$onDocumentTouchStart.bind(swiper);\n    if (params.cssMode) swiper.onScroll = $12f396601cf1ba7d$var$onScroll.bind(swiper);\n    swiper.onClick = $12f396601cf1ba7d$var$onClick.bind(swiper);\n    swiper.onLoad = $12f396601cf1ba7d$var$onLoad.bind(swiper);\n    $12f396601cf1ba7d$var$events(swiper, \"on\");\n}\nfunction $12f396601cf1ba7d$var$detachEvents() {\n    var swiper = this;\n    $12f396601cf1ba7d$var$events(swiper, \"off\");\n}\nvar $12f396601cf1ba7d$var$events$1 = {\n    attachEvents: $12f396601cf1ba7d$var$attachEvents,\n    detachEvents: $12f396601cf1ba7d$var$detachEvents\n};\nvar $12f396601cf1ba7d$var$isGridEnabled = function(swiper, params) {\n    return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction $12f396601cf1ba7d$var$setBreakpoint() {\n    var swiper = this;\n    var realIndex = swiper.realIndex, initialized = swiper.initialized, params = swiper.params, el = swiper.el;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n    // Get breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n    var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    var wasMultiRow = $12f396601cf1ba7d$var$isGridEnabled(swiper, params);\n    var isMultiRow = $12f396601cf1ba7d$var$isGridEnabled(swiper, breakpointParams);\n    var wasEnabled = params.enabled;\n    if (wasMultiRow && !isMultiRow) {\n        el.classList.remove(\"\".concat(params.containerModifierClass, \"grid\"), \"\".concat(params.containerModifierClass, \"grid-column\"));\n        swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n        el.classList.add(\"\".concat(params.containerModifierClass, \"grid\"));\n        if (breakpointParams.grid.fill && breakpointParams.grid.fill === \"column\" || !breakpointParams.grid.fill && params.grid.fill === \"column\") el.classList.add(\"\".concat(params.containerModifierClass, \"grid-column\"));\n        swiper.emitContainerClasses();\n    }\n    // Toggle navigation, pagination, scrollbar\n    [\n        \"navigation\",\n        \"pagination\",\n        \"scrollbar\"\n    ].forEach(function(prop) {\n        if (typeof breakpointParams[prop] === \"undefined\") return;\n        var wasModuleEnabled = params[prop] && params[prop].enabled;\n        var isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n        if (wasModuleEnabled && !isModuleEnabled) swiper[prop].disable();\n        if (!wasModuleEnabled && isModuleEnabled) swiper[prop].enable();\n    });\n    var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n    var wasLoop = params.loop;\n    if (directionChanged && initialized) swiper.changeDirection();\n    (0, $d680807689e9ecb0$export$3b14a55fb2447963)(swiper.params, breakpointParams);\n    var isEnabled = swiper.params.enabled;\n    var hasLoop = swiper.params.loop;\n    Object.assign(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    if (wasEnabled && !isEnabled) swiper.disable();\n    else if (!wasEnabled && isEnabled) swiper.enable();\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit(\"_beforeBreakpoint\", breakpointParams);\n    if (initialized) {\n        if (needsReLoop) {\n            swiper.loopDestroy();\n            swiper.loopCreate(realIndex);\n            swiper.updateSlides();\n        } else if (!wasLoop && hasLoop) {\n            swiper.loopCreate(realIndex);\n            swiper.updateSlides();\n        } else if (wasLoop && !hasLoop) swiper.loopDestroy();\n    }\n    swiper.emit(\"breakpoint\", breakpointParams);\n}\nfunction $12f396601cf1ba7d$var$getBreakpoint(breakpoints, base, containerEl) {\n    if (base === void 0) base = \"window\";\n    if (!breakpoints || base === \"container\" && !containerEl) return undefined;\n    var breakpoint = false;\n    var window1 = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    var currentHeight = base === \"window\" ? window1.innerHeight : containerEl.clientHeight;\n    var points = Object.keys(breakpoints).map(function(point) {\n        if (typeof point === \"string\" && point.indexOf(\"@\") === 0) {\n            var minRatio = parseFloat(point.substr(1));\n            var value = currentHeight * minRatio;\n            return {\n                value: value,\n                point: point\n            };\n        }\n        return {\n            value: point,\n            point: point\n        };\n    });\n    points.sort(function(a, b) {\n        return parseInt(a.value, 10) - parseInt(b.value, 10);\n    });\n    for(var i = 0; i < points.length; i += 1){\n        var _points_i = points[i], point = _points_i.point, value = _points_i.value;\n        if (base === \"window\") {\n            if (window1.matchMedia(\"(min-width: \".concat(value, \"px)\")).matches) breakpoint = point;\n        } else if (value <= containerEl.clientWidth) breakpoint = point;\n    }\n    return breakpoint || \"max\";\n}\nvar $12f396601cf1ba7d$var$breakpoints = {\n    setBreakpoint: $12f396601cf1ba7d$var$setBreakpoint,\n    getBreakpoint: $12f396601cf1ba7d$var$getBreakpoint\n};\nfunction $12f396601cf1ba7d$var$prepareClasses(entries, prefix) {\n    var resultClasses = [];\n    entries.forEach(function(item) {\n        if (typeof item === \"object\") Object.keys(item).forEach(function(classNames) {\n            if (item[classNames]) resultClasses.push(prefix + classNames);\n        });\n        else if (typeof item === \"string\") resultClasses.push(prefix + item);\n    });\n    return resultClasses;\n}\nfunction $12f396601cf1ba7d$var$addClasses() {\n    var _classNames, _el_classList;\n    var swiper = this;\n    var classNames = swiper.classNames, params = swiper.params, rtl = swiper.rtl, el = swiper.el, device = swiper.device;\n    // prettier-ignore\n    var suffixes = $12f396601cf1ba7d$var$prepareClasses([\n        \"initialized\",\n        params.direction,\n        {\n            \"free-mode\": swiper.params.freeMode && params.freeMode.enabled\n        },\n        {\n            \"autoheight\": params.autoHeight\n        },\n        {\n            \"rtl\": rtl\n        },\n        {\n            \"grid\": params.grid && params.grid.rows > 1\n        },\n        {\n            \"grid-column\": params.grid && params.grid.rows > 1 && params.grid.fill === \"column\"\n        },\n        {\n            \"android\": device.android\n        },\n        {\n            \"ios\": device.ios\n        },\n        {\n            \"css-mode\": params.cssMode\n        },\n        {\n            \"centered\": params.cssMode && params.centeredSlides\n        },\n        {\n            \"watch-progress\": params.watchSlidesProgress\n        }\n    ], params.containerModifierClass);\n    (_classNames = classNames).push.apply(_classNames, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(suffixes));\n    (_el_classList = el.classList).add.apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(classNames));\n    swiper.emitContainerClasses();\n}\nfunction $12f396601cf1ba7d$var$removeClasses() {\n    var _el_classList;\n    var swiper = this;\n    var el = swiper.el, classNames = swiper.classNames;\n    (_el_classList = el.classList).remove.apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(classNames));\n    swiper.emitContainerClasses();\n}\nvar $12f396601cf1ba7d$var$classes = {\n    addClasses: $12f396601cf1ba7d$var$addClasses,\n    removeClasses: $12f396601cf1ba7d$var$removeClasses\n};\nfunction $12f396601cf1ba7d$var$checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked, params = swiper.params;\n    var slidesOffsetBefore = params.slidesOffsetBefore;\n    if (slidesOffsetBefore) {\n        var lastSlideIndex = swiper.slides.length - 1;\n        var lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n        swiper.isLocked = swiper.size > lastSlideRightEdge;\n    } else swiper.isLocked = swiper.snapGrid.length === 1;\n    if (params.allowSlideNext === true) swiper.allowSlideNext = !swiper.isLocked;\n    if (params.allowSlidePrev === true) swiper.allowSlidePrev = !swiper.isLocked;\n    if (wasLocked && wasLocked !== swiper.isLocked) swiper.isEnd = false;\n    if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? \"lock\" : \"unlock\");\n}\nvar $12f396601cf1ba7d$var$checkOverflow$1 = {\n    checkOverflow: $12f396601cf1ba7d$var$checkOverflow\n};\nvar $12f396601cf1ba7d$export$4368d992c4eafac0 = {\n    init: true,\n    direction: \"horizontal\",\n    oneWayMovement: false,\n    swiperElementNodeName: \"SWIPER-CONTAINER\",\n    touchEventsTarget: \"wrapper\",\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: true,\n    nested: false,\n    createElements: false,\n    eventsPrefix: \"swiper\",\n    enabled: true,\n    focusableElements: \"input, select, option, textarea, button, video, label\",\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: \"slide\",\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: \"window\",\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    slidesPerGroupAuto: false,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: true,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 5,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // loop\n    loop: false,\n    loopAddBlankSlides: true,\n    loopAdditionalSlides: 0,\n    loopPreventsSliding: true,\n    // rewind\n    rewind: false,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: \"swiper-no-swiping\",\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    maxBackfaceHiddenSlides: 10,\n    // NS\n    containerModifierClass: \"swiper-\",\n    // NEW\n    slideClass: \"swiper-slide\",\n    slideBlankClass: \"swiper-slide-blank\",\n    slideActiveClass: \"swiper-slide-active\",\n    slideVisibleClass: \"swiper-slide-visible\",\n    slideFullyVisibleClass: \"swiper-slide-fully-visible\",\n    slideNextClass: \"swiper-slide-next\",\n    slidePrevClass: \"swiper-slide-prev\",\n    wrapperClass: \"swiper-wrapper\",\n    lazyPreloaderClass: \"swiper-lazy-preloader\",\n    lazyPreloadPrevNext: 0,\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n};\nfunction $12f396601cf1ba7d$var$moduleExtendParams(params, allModulesParams) {\n    return function extendParams(obj) {\n        if (obj === void 0) obj = {};\n        var moduleParamName = Object.keys(obj)[0];\n        var moduleParams = obj[moduleParamName];\n        if (typeof moduleParams !== \"object\" || moduleParams === null) {\n            (0, $d680807689e9ecb0$export$3b14a55fb2447963)(allModulesParams, obj);\n            return;\n        }\n        if (params[moduleParamName] === true) params[moduleParamName] = {\n            enabled: true\n        };\n        if (moduleParamName === \"navigation\" && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) params[moduleParamName].auto = true;\n        if ([\n            \"pagination\",\n            \"scrollbar\"\n        ].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) params[moduleParamName].auto = true;\n        if (!(moduleParamName in params && \"enabled\" in moduleParams)) {\n            (0, $d680807689e9ecb0$export$3b14a55fb2447963)(allModulesParams, obj);\n            return;\n        }\n        if (typeof params[moduleParamName] === \"object\" && !(\"enabled\" in params[moduleParamName])) params[moduleParamName].enabled = true;\n        if (!params[moduleParamName]) params[moduleParamName] = {\n            enabled: false\n        };\n        (0, $d680807689e9ecb0$export$3b14a55fb2447963)(allModulesParams, obj);\n    };\n}\n/* eslint no-param-reassign: \"off\" */ var $12f396601cf1ba7d$var$prototypes = {\n    eventsEmitter: $12f396601cf1ba7d$var$eventsEmitter,\n    update: $12f396601cf1ba7d$var$update,\n    translate: $12f396601cf1ba7d$var$translate,\n    transition: $12f396601cf1ba7d$var$transition,\n    slide: $12f396601cf1ba7d$var$slide,\n    loop: $12f396601cf1ba7d$var$loop,\n    grabCursor: $12f396601cf1ba7d$var$grabCursor,\n    events: $12f396601cf1ba7d$var$events$1,\n    breakpoints: $12f396601cf1ba7d$var$breakpoints,\n    checkOverflow: $12f396601cf1ba7d$var$checkOverflow$1,\n    classes: $12f396601cf1ba7d$var$classes\n};\nvar $12f396601cf1ba7d$var$extendedDefaults = {};\nvar $12f396601cf1ba7d$export$25ce5a424b770e84 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Swiper() {\n        var _swiper_modules;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Swiper);\n        var el;\n        var params;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n        var ref;\n        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === \"Object\") params = args[0];\n        else ref = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(args, 2), el = ref[0], params = ref[1], ref;\n        if (!params) params = {};\n        params = (0, $d680807689e9ecb0$export$3b14a55fb2447963)({}, params);\n        if (el && !params.el) params.el = el;\n        var document1 = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n        if (params.el && typeof params.el === \"string\" && document1.querySelectorAll(params.el).length > 1) {\n            var swipers = [];\n            document1.querySelectorAll(params.el).forEach(function(containerEl) {\n                var newParams = (0, $d680807689e9ecb0$export$3b14a55fb2447963)({}, params, {\n                    el: containerEl\n                });\n                swipers.push(new Swiper(newParams));\n            });\n            // eslint-disable-next-line no-constructor-return\n            return swipers;\n        }\n        // Swiper Instance\n        var swiper = this;\n        swiper.__swiper__ = true;\n        swiper.support = $12f396601cf1ba7d$var$getSupport();\n        swiper.device = $12f396601cf1ba7d$var$getDevice({\n            userAgent: params.userAgent\n        });\n        swiper.browser = $12f396601cf1ba7d$var$getBrowser();\n        swiper.eventsListeners = {};\n        swiper.eventsAnyListeners = [];\n        swiper.modules = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.__modules__);\n        if (params.modules && Array.isArray(params.modules)) (_swiper_modules = swiper.modules).push.apply(_swiper_modules, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(params.modules));\n        var allModulesParams = {};\n        swiper.modules.forEach(function(mod) {\n            mod({\n                params: params,\n                swiper: swiper,\n                extendParams: $12f396601cf1ba7d$var$moduleExtendParams(params, allModulesParams),\n                on: swiper.on.bind(swiper),\n                once: swiper.once.bind(swiper),\n                off: swiper.off.bind(swiper),\n                emit: swiper.emit.bind(swiper)\n            });\n        });\n        // Extend defaults with modules params\n        var swiperParams = (0, $d680807689e9ecb0$export$3b14a55fb2447963)({}, $12f396601cf1ba7d$export$4368d992c4eafac0, allModulesParams);\n        // Extend defaults with passed params\n        swiper.params = (0, $d680807689e9ecb0$export$3b14a55fb2447963)({}, swiperParams, $12f396601cf1ba7d$var$extendedDefaults, params);\n        swiper.originalParams = (0, $d680807689e9ecb0$export$3b14a55fb2447963)({}, swiper.params);\n        swiper.passedParams = (0, $d680807689e9ecb0$export$3b14a55fb2447963)({}, params);\n        // add event listeners\n        if (swiper.params && swiper.params.on) Object.keys(swiper.params.on).forEach(function(eventName) {\n            swiper.on(eventName, swiper.params.on[eventName]);\n        });\n        if (swiper.params && swiper.params.onAny) swiper.onAny(swiper.params.onAny);\n        // Extend Swiper\n        Object.assign(swiper, {\n            enabled: swiper.params.enabled,\n            el: el,\n            // Classes\n            classNames: [],\n            // Slides\n            slides: [],\n            slidesGrid: [],\n            snapGrid: [],\n            slidesSizesGrid: [],\n            // isDirection\n            isHorizontal: function() {\n                return swiper.params.direction === \"horizontal\";\n            },\n            isVertical: function() {\n                return swiper.params.direction === \"vertical\";\n            },\n            // Indexes\n            activeIndex: 0,\n            realIndex: 0,\n            //\n            isBeginning: true,\n            isEnd: false,\n            // Props\n            translate: 0,\n            previousTranslate: 0,\n            progress: 0,\n            velocity: 0,\n            animating: false,\n            cssOverflowAdjustment: function() {\n                // Returns 0 unless `translate` is > 2**23\n                // Should be subtracted from css values to prevent overflow\n                return Math.trunc(this.translate / Math.pow(2, 23)) * Math.pow(2, 23);\n            },\n            // Locks\n            allowSlideNext: swiper.params.allowSlideNext,\n            allowSlidePrev: swiper.params.allowSlidePrev,\n            // Touch Events\n            touchEventsData: {\n                isTouched: undefined,\n                isMoved: undefined,\n                allowTouchCallbacks: undefined,\n                touchStartTime: undefined,\n                isScrolling: undefined,\n                currentTranslate: undefined,\n                startTranslate: undefined,\n                allowThresholdMove: undefined,\n                // Form elements to match\n                focusableElements: swiper.params.focusableElements,\n                // Last click time\n                lastClickTime: 0,\n                clickTimeout: undefined,\n                // Velocities\n                velocities: [],\n                allowMomentumBounce: undefined,\n                startMoving: undefined,\n                pointerId: null,\n                touchId: null\n            },\n            // Clicks\n            allowClick: true,\n            // Touches\n            allowTouchMove: swiper.params.allowTouchMove,\n            touches: {\n                startX: 0,\n                startY: 0,\n                currentX: 0,\n                currentY: 0,\n                diff: 0\n            },\n            // Images\n            imagesToLoad: [],\n            imagesLoaded: 0\n        });\n        swiper.emit(\"_swiper\");\n        // Init\n        if (swiper.params.init) swiper.init();\n        // Return app instance\n        // eslint-disable-next-line no-constructor-return\n        return swiper;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Swiper, [\n        {\n            key: \"getDirectionLabel\",\n            value: function getDirectionLabel(property) {\n                if (this.isHorizontal()) return property;\n                // prettier-ignore\n                return ({\n                    \"width\": \"height\",\n                    \"margin-top\": \"margin-left\",\n                    \"margin-bottom \": \"margin-right\",\n                    \"margin-left\": \"margin-top\",\n                    \"margin-right\": \"margin-bottom\",\n                    \"padding-left\": \"padding-top\",\n                    \"padding-right\": \"padding-bottom\",\n                    \"marginRight\": \"marginBottom\"\n                })[property];\n            }\n        },\n        {\n            key: \"getSlideIndex\",\n            value: function getSlideIndex(slideEl) {\n                var _this = this, slidesEl = _this.slidesEl, params = _this.params;\n                var slides = (0, $d680807689e9ecb0$export$f1e1789686576879)(slidesEl, \".\".concat(params.slideClass, \", swiper-slide\"));\n                var firstSlideIndex = (0, $d680807689e9ecb0$export$39b482c5e57630a8)(slides[0]);\n                return (0, $d680807689e9ecb0$export$39b482c5e57630a8)(slideEl) - firstSlideIndex;\n            }\n        },\n        {\n            key: \"getSlideIndexByData\",\n            value: function getSlideIndexByData(index) {\n                return this.getSlideIndex(this.slides.filter(function(slideEl) {\n                    return slideEl.getAttribute(\"data-swiper-slide-index\") * 1 === index;\n                })[0]);\n            }\n        },\n        {\n            key: \"recalcSlides\",\n            value: function recalcSlides() {\n                var swiper = this;\n                var slidesEl = swiper.slidesEl, params = swiper.params;\n                swiper.slides = (0, $d680807689e9ecb0$export$f1e1789686576879)(slidesEl, \".\".concat(params.slideClass, \", swiper-slide\"));\n            }\n        },\n        {\n            key: \"enable\",\n            value: function enable() {\n                var swiper = this;\n                if (swiper.enabled) return;\n                swiper.enabled = true;\n                if (swiper.params.grabCursor) swiper.setGrabCursor();\n                swiper.emit(\"enable\");\n            }\n        },\n        {\n            key: \"disable\",\n            value: function disable() {\n                var swiper = this;\n                if (!swiper.enabled) return;\n                swiper.enabled = false;\n                if (swiper.params.grabCursor) swiper.unsetGrabCursor();\n                swiper.emit(\"disable\");\n            }\n        },\n        {\n            key: \"setProgress\",\n            value: function setProgress(progress, speed) {\n                var swiper = this;\n                progress = Math.min(Math.max(progress, 0), 1);\n                var min = swiper.minTranslate();\n                var max = swiper.maxTranslate();\n                var current = (max - min) * progress + min;\n                swiper.translateTo(current, typeof speed === \"undefined\" ? 0 : speed);\n                swiper.updateActiveIndex();\n                swiper.updateSlidesClasses();\n            }\n        },\n        {\n            key: \"emitContainerClasses\",\n            value: function emitContainerClasses() {\n                var swiper = this;\n                if (!swiper.params._emitClasses || !swiper.el) return;\n                var cls = swiper.el.className.split(\" \").filter(function(className) {\n                    return className.indexOf(\"swiper\") === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n                });\n                swiper.emit(\"_containerClasses\", cls.join(\" \"));\n            }\n        },\n        {\n            key: \"getSlideClasses\",\n            value: function getSlideClasses(slideEl) {\n                var swiper = this;\n                if (swiper.destroyed) return \"\";\n                return slideEl.className.split(\" \").filter(function(className) {\n                    return className.indexOf(\"swiper-slide\") === 0 || className.indexOf(swiper.params.slideClass) === 0;\n                }).join(\" \");\n            }\n        },\n        {\n            key: \"emitSlidesClasses\",\n            value: function emitSlidesClasses() {\n                var swiper = this;\n                if (!swiper.params._emitClasses || !swiper.el) return;\n                var updates = [];\n                swiper.slides.forEach(function(slideEl) {\n                    var classNames = swiper.getSlideClasses(slideEl);\n                    updates.push({\n                        slideEl: slideEl,\n                        classNames: classNames\n                    });\n                    swiper.emit(\"_slideClass\", slideEl, classNames);\n                });\n                swiper.emit(\"_slideClasses\", updates);\n            }\n        },\n        {\n            key: \"slidesPerViewDynamic\",\n            value: function slidesPerViewDynamic(view, exact) {\n                if (view === void 0) view = \"current\";\n                if (exact === void 0) exact = false;\n                var swiper = this;\n                var params = swiper.params, slides = swiper.slides, slidesGrid = swiper.slidesGrid, slidesSizesGrid = swiper.slidesSizesGrid, swiperSize = swiper.size, activeIndex = swiper.activeIndex;\n                var spv = 1;\n                if (typeof params.slidesPerView === \"number\") return params.slidesPerView;\n                if (params.centeredSlides) {\n                    var slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n                    var breakLoop;\n                    for(var i = activeIndex + 1; i < slides.length; i += 1)if (slides[i] && !breakLoop) {\n                        slideSize += Math.ceil(slides[i].swiperSlideSize);\n                        spv += 1;\n                        if (slideSize > swiperSize) breakLoop = true;\n                    }\n                    for(var i1 = activeIndex - 1; i1 >= 0; i1 -= 1)if (slides[i1] && !breakLoop) {\n                        slideSize += slides[i1].swiperSlideSize;\n                        spv += 1;\n                        if (slideSize > swiperSize) breakLoop = true;\n                    }\n                } else {\n                    // eslint-disable-next-line\n                    if (view === \"current\") for(var i2 = activeIndex + 1; i2 < slides.length; i2 += 1){\n                        var slideInView = exact ? slidesGrid[i2] + slidesSizesGrid[i2] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i2] - slidesGrid[activeIndex] < swiperSize;\n                        if (slideInView) spv += 1;\n                    }\n                    else // previous\n                    for(var i3 = activeIndex - 1; i3 >= 0; i3 -= 1){\n                        var slideInView1 = slidesGrid[activeIndex] - slidesGrid[i3] < swiperSize;\n                        if (slideInView1) spv += 1;\n                    }\n                }\n                return spv;\n            }\n        },\n        {\n            key: \"update\",\n            value: function update() {\n                var swiper = this;\n                if (!swiper || swiper.destroyed) return;\n                var snapGrid = swiper.snapGrid, params = swiper.params;\n                // Breakpoints\n                if (params.breakpoints) swiper.setBreakpoint();\n                (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.el.querySelectorAll('[loading=\"lazy\"]')).forEach(function(imageEl) {\n                    if (imageEl.complete) $12f396601cf1ba7d$var$processLazyPreloader(swiper, imageEl);\n                });\n                swiper.updateSize();\n                swiper.updateSlides();\n                swiper.updateProgress();\n                swiper.updateSlidesClasses();\n                function setTranslate() {\n                    var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n                    var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n                    swiper.setTranslate(newTranslate);\n                    swiper.updateActiveIndex();\n                    swiper.updateSlidesClasses();\n                }\n                var translated;\n                if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n                    setTranslate();\n                    if (params.autoHeight) swiper.updateAutoHeight();\n                } else {\n                    if ((params.slidesPerView === \"auto\" || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n                        var slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n                        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n                    } else translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n                    if (!translated) setTranslate();\n                }\n                if (params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();\n                swiper.emit(\"update\");\n            }\n        },\n        {\n            key: \"changeDirection\",\n            value: function changeDirection(newDirection, needUpdate) {\n                if (needUpdate === void 0) needUpdate = true;\n                var swiper = this;\n                var currentDirection = swiper.params.direction;\n                if (!newDirection) // eslint-disable-next-line\n                newDirection = currentDirection === \"horizontal\" ? \"vertical\" : \"horizontal\";\n                if (newDirection === currentDirection || newDirection !== \"horizontal\" && newDirection !== \"vertical\") return swiper;\n                swiper.el.classList.remove(\"\".concat(swiper.params.containerModifierClass).concat(currentDirection));\n                swiper.el.classList.add(\"\".concat(swiper.params.containerModifierClass).concat(newDirection));\n                swiper.emitContainerClasses();\n                swiper.params.direction = newDirection;\n                swiper.slides.forEach(function(slideEl) {\n                    if (newDirection === \"vertical\") slideEl.style.width = \"\";\n                    else slideEl.style.height = \"\";\n                });\n                swiper.emit(\"changeDirection\");\n                if (needUpdate) swiper.update();\n                return swiper;\n            }\n        },\n        {\n            key: \"changeLanguageDirection\",\n            value: function changeLanguageDirection(direction) {\n                var swiper = this;\n                if (swiper.rtl && direction === \"rtl\" || !swiper.rtl && direction === \"ltr\") return;\n                swiper.rtl = direction === \"rtl\";\n                swiper.rtlTranslate = swiper.params.direction === \"horizontal\" && swiper.rtl;\n                if (swiper.rtl) {\n                    swiper.el.classList.add(\"\".concat(swiper.params.containerModifierClass, \"rtl\"));\n                    swiper.el.dir = \"rtl\";\n                } else {\n                    swiper.el.classList.remove(\"\".concat(swiper.params.containerModifierClass, \"rtl\"));\n                    swiper.el.dir = \"ltr\";\n                }\n                swiper.update();\n            }\n        },\n        {\n            key: \"mount\",\n            value: function mount(element) {\n                var swiper = this;\n                if (swiper.mounted) return true;\n                // Find el\n                var el = element || swiper.params.el;\n                if (typeof el === \"string\") el = document.querySelector(el);\n                if (!el) return false;\n                el.swiper = swiper;\n                if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) swiper.isElement = true;\n                var getWrapperSelector = function() {\n                    return \".\".concat((swiper.params.wrapperClass || \"\").trim().split(\" \").join(\".\"));\n                };\n                var getWrapper = function() {\n                    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n                        var res = el.shadowRoot.querySelector(getWrapperSelector());\n                        // Children needs to return slot items\n                        return res;\n                    }\n                    return (0, $d680807689e9ecb0$export$f1e1789686576879)(el, getWrapperSelector())[0];\n                };\n                // Find Wrapper\n                var wrapperEl = getWrapper();\n                if (!wrapperEl && swiper.params.createElements) {\n                    wrapperEl = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", swiper.params.wrapperClass);\n                    el.append(wrapperEl);\n                    (0, $d680807689e9ecb0$export$f1e1789686576879)(el, \".\".concat(swiper.params.slideClass)).forEach(function(slideEl) {\n                        wrapperEl.append(slideEl);\n                    });\n                }\n                Object.assign(swiper, {\n                    el: el,\n                    wrapperEl: wrapperEl,\n                    slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n                    hostEl: swiper.isElement ? el.parentNode.host : el,\n                    mounted: true,\n                    // RTL\n                    rtl: el.dir.toLowerCase() === \"rtl\" || (0, $d680807689e9ecb0$export$ae1af26003f05816)(el, \"direction\") === \"rtl\",\n                    rtlTranslate: swiper.params.direction === \"horizontal\" && (el.dir.toLowerCase() === \"rtl\" || (0, $d680807689e9ecb0$export$ae1af26003f05816)(el, \"direction\") === \"rtl\"),\n                    wrongRTL: (0, $d680807689e9ecb0$export$ae1af26003f05816)(wrapperEl, \"display\") === \"-webkit-box\"\n                });\n                return true;\n            }\n        },\n        {\n            key: \"init\",\n            value: function init(el) {\n                var _lazyElements;\n                var swiper = this;\n                if (swiper.initialized) return swiper;\n                var mounted = swiper.mount(el);\n                if (mounted === false) return swiper;\n                swiper.emit(\"beforeInit\");\n                // Set breakpoint\n                if (swiper.params.breakpoints) swiper.setBreakpoint();\n                // Add Classes\n                swiper.addClasses();\n                // Update size\n                swiper.updateSize();\n                // Update slides\n                swiper.updateSlides();\n                if (swiper.params.watchOverflow) swiper.checkOverflow();\n                // Set Grab Cursor\n                if (swiper.params.grabCursor && swiper.enabled) swiper.setGrabCursor();\n                // Slide To Initial Slide\n                if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n                else swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n                // Create loop\n                if (swiper.params.loop) swiper.loopCreate();\n                // Attach events\n                swiper.attachEvents();\n                var lazyElements = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.el.querySelectorAll('[loading=\"lazy\"]'));\n                if (swiper.isElement) (_lazyElements = lazyElements).push.apply(_lazyElements, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.hostEl.querySelectorAll('[loading=\"lazy\"]')));\n                lazyElements.forEach(function(imageEl) {\n                    if (imageEl.complete) $12f396601cf1ba7d$var$processLazyPreloader(swiper, imageEl);\n                    else imageEl.addEventListener(\"load\", function(e) {\n                        $12f396601cf1ba7d$var$processLazyPreloader(swiper, e.target);\n                    });\n                });\n                $12f396601cf1ba7d$var$preload(swiper);\n                // Init Flag\n                swiper.initialized = true;\n                $12f396601cf1ba7d$var$preload(swiper);\n                // Emit\n                swiper.emit(\"init\");\n                swiper.emit(\"afterInit\");\n                return swiper;\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy(deleteInstance, cleanStyles) {\n                if (deleteInstance === void 0) deleteInstance = true;\n                if (cleanStyles === void 0) cleanStyles = true;\n                var swiper = this;\n                var params = swiper.params, el = swiper.el, wrapperEl = swiper.wrapperEl, slides = swiper.slides;\n                if (typeof swiper.params === \"undefined\" || swiper.destroyed) return null;\n                swiper.emit(\"beforeDestroy\");\n                // Init Flag\n                swiper.initialized = false;\n                // Detach events\n                swiper.detachEvents();\n                // Destroy loop\n                if (params.loop) swiper.loopDestroy();\n                // Cleanup styles\n                if (cleanStyles) {\n                    swiper.removeClasses();\n                    el.removeAttribute(\"style\");\n                    wrapperEl.removeAttribute(\"style\");\n                    if (slides && slides.length) slides.forEach(function(slideEl) {\n                        slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n                        slideEl.removeAttribute(\"style\");\n                        slideEl.removeAttribute(\"data-swiper-slide-index\");\n                    });\n                }\n                swiper.emit(\"destroy\");\n                // Detach emitter events\n                Object.keys(swiper.eventsListeners).forEach(function(eventName) {\n                    swiper.off(eventName);\n                });\n                if (deleteInstance !== false) {\n                    swiper.el.swiper = null;\n                    (0, $d680807689e9ecb0$export$90a7f3efeed30595)(swiper);\n                }\n                swiper.destroyed = true;\n                return null;\n            }\n        }\n    ], [\n        {\n            key: \"extendDefaults\",\n            value: function extendDefaults(newDefaults) {\n                (0, $d680807689e9ecb0$export$3b14a55fb2447963)($12f396601cf1ba7d$var$extendedDefaults, newDefaults);\n            }\n        },\n        {\n            key: \"extendedDefaults\",\n            get: function get() {\n                return $12f396601cf1ba7d$var$extendedDefaults;\n            }\n        },\n        {\n            key: \"defaults\",\n            get: function get() {\n                return $12f396601cf1ba7d$export$4368d992c4eafac0;\n            }\n        },\n        {\n            key: \"installModule\",\n            value: function installModule(mod) {\n                if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n                var modules = Swiper.prototype.__modules__;\n                if (typeof mod === \"function\" && modules.indexOf(mod) < 0) modules.push(mod);\n            }\n        },\n        {\n            key: \"use\",\n            value: function use(module) {\n                if (Array.isArray(module)) {\n                    module.forEach(function(m) {\n                        return Swiper.installModule(m);\n                    });\n                    return Swiper;\n                }\n                Swiper.installModule(module);\n                return Swiper;\n            }\n        }\n    ]);\n    return Swiper;\n}();\nObject.keys($12f396601cf1ba7d$var$prototypes).forEach(function(prototypeGroup) {\n    Object.keys($12f396601cf1ba7d$var$prototypes[prototypeGroup]).forEach(function(protoMethod) {\n        $12f396601cf1ba7d$export$25ce5a424b770e84.prototype[protoMethod] = $12f396601cf1ba7d$var$prototypes[prototypeGroup][protoMethod];\n    });\n});\n$12f396601cf1ba7d$export$25ce5a424b770e84.use([\n    $12f396601cf1ba7d$var$Resize,\n    $12f396601cf1ba7d$var$Observer\n]);\n\n\n\n\n\n\n\n\nfunction $0bb88233eafac962$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    extendParams({\n        virtual: {\n            enabled: false,\n            slides: [],\n            cache: true,\n            renderSlide: null,\n            renderExternal: null,\n            renderExternalUpdate: true,\n            addSlidesBefore: 0,\n            addSlidesAfter: 0\n        }\n    });\n    var cssModeTimeout;\n    var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    swiper.virtual = {\n        cache: {},\n        from: undefined,\n        to: undefined,\n        slides: [],\n        offset: 0,\n        slidesGrid: []\n    };\n    var tempDOM = document.createElement(\"div\");\n    function renderSlide(slide, index) {\n        var params = swiper.params.virtual;\n        if (params.cache && swiper.virtual.cache[index]) return swiper.virtual.cache[index];\n        // eslint-disable-next-line\n        var slideEl;\n        if (params.renderSlide) {\n            slideEl = params.renderSlide.call(swiper, slide, index);\n            if (typeof slideEl === \"string\") {\n                tempDOM.innerHTML = slideEl;\n                slideEl = tempDOM.children[0];\n            }\n        } else if (swiper.isElement) slideEl = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"swiper-slide\");\n        else slideEl = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", swiper.params.slideClass);\n        slideEl.setAttribute(\"data-swiper-slide-index\", index);\n        if (!params.renderSlide) slideEl.innerHTML = slide;\n        if (params.cache) swiper.virtual.cache[index] = slideEl;\n        return slideEl;\n    }\n    function update(force) {\n        var _swiper_params = swiper.params, slidesPerView = _swiper_params.slidesPerView, slidesPerGroup = _swiper_params.slidesPerGroup, centeredSlides = _swiper_params.centeredSlides, isLoop = _swiper_params.loop;\n        var _swiper_params_virtual = swiper.params.virtual, addSlidesBefore = _swiper_params_virtual.addSlidesBefore, addSlidesAfter = _swiper_params_virtual.addSlidesAfter;\n        var _swiper_virtual = swiper.virtual, previousFrom = _swiper_virtual.from, previousTo = _swiper_virtual.to, slides = _swiper_virtual.slides, previousSlidesGrid = _swiper_virtual.slidesGrid, previousOffset = _swiper_virtual.offset;\n        if (!swiper.params.cssMode) swiper.updateActiveIndex();\n        var activeIndex = swiper.activeIndex || 0;\n        var offsetProp;\n        if (swiper.rtlTranslate) offsetProp = \"right\";\n        else offsetProp = swiper.isHorizontal() ? \"left\" : \"top\";\n        var slidesAfter;\n        var slidesBefore;\n        if (centeredSlides) {\n            slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n            slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        } else {\n            slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n            slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n        }\n        var from = activeIndex - slidesBefore;\n        var to = activeIndex + slidesAfter;\n        if (!isLoop) {\n            from = Math.max(from, 0);\n            to = Math.min(to, slides.length - 1);\n        }\n        var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n        if (isLoop && activeIndex >= slidesBefore) {\n            from -= slidesBefore;\n            if (!centeredSlides) offset += swiper.slidesGrid[0];\n        } else if (isLoop && activeIndex < slidesBefore) {\n            from = -slidesBefore;\n            if (centeredSlides) offset += swiper.slidesGrid[0];\n        }\n        Object.assign(swiper.virtual, {\n            from: from,\n            to: to,\n            offset: offset,\n            slidesGrid: swiper.slidesGrid,\n            slidesBefore: slidesBefore,\n            slidesAfter: slidesAfter\n        });\n        function onRendered() {\n            swiper.updateSlides();\n            swiper.updateProgress();\n            swiper.updateSlidesClasses();\n            emit(\"virtualUpdate\");\n        }\n        if (previousFrom === from && previousTo === to && !force) {\n            if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) swiper.slides.forEach(function(slideEl) {\n                slideEl.style[offsetProp] = \"\".concat(offset - Math.abs(swiper.cssOverflowAdjustment()), \"px\");\n            });\n            swiper.updateProgress();\n            emit(\"virtualUpdate\");\n            return;\n        }\n        if (swiper.params.virtual.renderExternal) {\n            swiper.params.virtual.renderExternal.call(swiper, {\n                offset: offset,\n                from: from,\n                to: to,\n                slides: function getSlides() {\n                    var slidesToRender = [];\n                    for(var i = from; i <= to; i += 1)slidesToRender.push(slides[i]);\n                    return slidesToRender;\n                }()\n            });\n            if (swiper.params.virtual.renderExternalUpdate) onRendered();\n            else emit(\"virtualUpdate\");\n            return;\n        }\n        var prependIndexes = [];\n        var appendIndexes = [];\n        var getSlideIndex = function(index) {\n            var slideIndex = index;\n            if (index < 0) slideIndex = slides.length + index;\n            else if (slideIndex >= slides.length) // eslint-disable-next-line\n            slideIndex = slideIndex - slides.length;\n            return slideIndex;\n        };\n        if (force) swiper.slides.filter(function(el) {\n            return el.matches(\".\".concat(swiper.params.slideClass, \", swiper-slide\"));\n        }).forEach(function(slideEl) {\n            slideEl.remove();\n        });\n        else {\n            var _loop = function(i) {\n                if (i < from || i > to) {\n                    var slideIndex = getSlideIndex(i);\n                    swiper.slides.filter(function(el) {\n                        return el.matches(\".\".concat(swiper.params.slideClass, '[data-swiper-slide-index=\"').concat(slideIndex, '\"], swiper-slide[data-swiper-slide-index=\"').concat(slideIndex, '\"]'));\n                    }).forEach(function(slideEl) {\n                        slideEl.remove();\n                    });\n                }\n            };\n            for(var i = previousFrom; i <= previousTo; i += 1)_loop(i);\n        }\n        var loopFrom = isLoop ? -slides.length : 0;\n        var loopTo = isLoop ? slides.length * 2 : slides.length;\n        for(var i1 = loopFrom; i1 < loopTo; i1 += 1)if (i1 >= from && i1 <= to) {\n            var slideIndex = getSlideIndex(i1);\n            if (typeof previousTo === \"undefined\" || force) appendIndexes.push(slideIndex);\n            else {\n                if (i1 > previousTo) appendIndexes.push(slideIndex);\n                if (i1 < previousFrom) prependIndexes.push(slideIndex);\n            }\n        }\n        appendIndexes.forEach(function(index) {\n            swiper.slidesEl.append(renderSlide(slides[index], index));\n        });\n        if (isLoop) for(var i2 = prependIndexes.length - 1; i2 >= 0; i2 -= 1){\n            var index = prependIndexes[i2];\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\n        }\n        else {\n            prependIndexes.sort(function(a, b) {\n                return b - a;\n            });\n            prependIndexes.forEach(function(index) {\n                swiper.slidesEl.prepend(renderSlide(slides[index], index));\n            });\n        }\n        (0, $d680807689e9ecb0$export$f1e1789686576879)(swiper.slidesEl, \".swiper-slide, swiper-slide\").forEach(function(slideEl) {\n            slideEl.style[offsetProp] = \"\".concat(offset - Math.abs(swiper.cssOverflowAdjustment()), \"px\");\n        });\n        onRendered();\n    }\n    function appendSlide(slides) {\n        if (typeof slides === \"object\" && \"length\" in slides) {\n            for(var i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.push(slides[i]);\n        } else swiper.virtual.slides.push(slides);\n        update(true);\n    }\n    function prependSlide(slides) {\n        var activeIndex = swiper.activeIndex;\n        var newActiveIndex = activeIndex + 1;\n        var numberOfNewSlides = 1;\n        if (Array.isArray(slides)) {\n            for(var i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n            newActiveIndex = activeIndex + slides.length;\n            numberOfNewSlides = slides.length;\n        } else swiper.virtual.slides.unshift(slides);\n        if (swiper.params.virtual.cache) {\n            var cache = swiper.virtual.cache;\n            var newCache = {};\n            Object.keys(cache).forEach(function(cachedIndex) {\n                var cachedEl = cache[cachedIndex];\n                var cachedElIndex = cachedEl.getAttribute(\"data-swiper-slide-index\");\n                if (cachedElIndex) cachedEl.setAttribute(\"data-swiper-slide-index\", parseInt(cachedElIndex, 10) + numberOfNewSlides);\n                newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n            });\n            swiper.virtual.cache = newCache;\n        }\n        update(true);\n        swiper.slideTo(newActiveIndex, 0);\n    }\n    function removeSlide(slidesIndexes) {\n        if (typeof slidesIndexes === \"undefined\" || slidesIndexes === null) return;\n        var activeIndex = swiper.activeIndex;\n        if (Array.isArray(slidesIndexes)) for(var i = slidesIndexes.length - 1; i >= 0; i -= 1){\n            if (swiper.params.virtual.cache) {\n                delete swiper.virtual.cache[slidesIndexes[i]];\n                // shift cache indexes\n                Object.keys(swiper.virtual.cache).forEach(function(key) {\n                    if (key > slidesIndexes) {\n                        swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n                        swiper.virtual.cache[key - 1].setAttribute(\"data-swiper-slide-index\", key - 1);\n                        delete swiper.virtual.cache[key];\n                    }\n                });\n            }\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\n            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n            activeIndex = Math.max(activeIndex, 0);\n        }\n        else {\n            if (swiper.params.virtual.cache) {\n                delete swiper.virtual.cache[slidesIndexes];\n                // shift cache indexes\n                Object.keys(swiper.virtual.cache).forEach(function(key) {\n                    if (key > slidesIndexes) {\n                        swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n                        swiper.virtual.cache[key - 1].setAttribute(\"data-swiper-slide-index\", key - 1);\n                        delete swiper.virtual.cache[key];\n                    }\n                });\n            }\n            swiper.virtual.slides.splice(slidesIndexes, 1);\n            if (slidesIndexes < activeIndex) activeIndex -= 1;\n            activeIndex = Math.max(activeIndex, 0);\n        }\n        update(true);\n        swiper.slideTo(activeIndex, 0);\n    }\n    function removeAllSlides() {\n        swiper.virtual.slides = [];\n        if (swiper.params.virtual.cache) swiper.virtual.cache = {};\n        update(true);\n        swiper.slideTo(0, 0);\n    }\n    on(\"beforeInit\", function() {\n        if (!swiper.params.virtual.enabled) return;\n        var domSlidesAssigned;\n        if (typeof swiper.passedParams.virtual.slides === \"undefined\") {\n            var slides = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.slidesEl.children).filter(function(el) {\n                return el.matches(\".\".concat(swiper.params.slideClass, \", swiper-slide\"));\n            });\n            if (slides && slides.length) {\n                swiper.virtual.slides = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(slides);\n                domSlidesAssigned = true;\n                slides.forEach(function(slideEl, slideIndex) {\n                    slideEl.setAttribute(\"data-swiper-slide-index\", slideIndex);\n                    swiper.virtual.cache[slideIndex] = slideEl;\n                    slideEl.remove();\n                });\n            }\n        }\n        if (!domSlidesAssigned) swiper.virtual.slides = swiper.params.virtual.slides;\n        swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"virtual\"));\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n        update();\n    });\n    on(\"setTranslate\", function() {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode && !swiper._immediateVirtual) {\n            clearTimeout(cssModeTimeout);\n            cssModeTimeout = setTimeout(function() {\n                update();\n            }, 100);\n        } else update();\n    });\n    on(\"init update resize\", function() {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode) (0, $d680807689e9ecb0$export$2408f22a0fab9ae5)(swiper.wrapperEl, \"--swiper-virtual-size\", \"\".concat(swiper.virtualSize, \"px\"));\n    });\n    Object.assign(swiper.virtual, {\n        appendSlide: appendSlide,\n        prependSlide: prependSlide,\n        removeSlide: removeSlide,\n        removeAllSlides: removeAllSlides,\n        update: update\n    });\n}\n\n\n\n\n/* eslint-disable consistent-return */ function $7beed7a221f520a9$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    swiper.keyboard = {\n        enabled: false\n    };\n    extendParams({\n        keyboard: {\n            enabled: false,\n            onlyInViewport: true,\n            pageUpDown: true\n        }\n    });\n    function handle(event) {\n        if (!swiper.enabled) return;\n        var rtl = swiper.rtlTranslate;\n        var e = event;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        var kc = e.keyCode || e.charCode;\n        var pageUpDown = swiper.params.keyboard.pageUpDown;\n        var isPageUp = pageUpDown && kc === 33;\n        var isPageDown = pageUpDown && kc === 34;\n        var isArrowLeft = kc === 37;\n        var isArrowRight = kc === 39;\n        var isArrowUp = kc === 38;\n        var isArrowDown = kc === 40;\n        // Directions locks\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) return false;\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) return false;\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) return undefined;\n        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === \"input\" || document.activeElement.nodeName.toLowerCase() === \"textarea\")) return undefined;\n        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n            var inView = false;\n            // Check that swiper should be inside of visible area of window\n            if ((0, $d680807689e9ecb0$export$407448d2b89b1813)(swiper.el, \".\".concat(swiper.params.slideClass, \", swiper-slide\")).length > 0 && (0, $d680807689e9ecb0$export$407448d2b89b1813)(swiper.el, \".\".concat(swiper.params.slideActiveClass)).length === 0) return undefined;\n            var el = swiper.el;\n            var swiperWidth = el.clientWidth;\n            var swiperHeight = el.clientHeight;\n            var windowWidth = window.innerWidth;\n            var windowHeight = window.innerHeight;\n            var swiperOffset = (0, $d680807689e9ecb0$export$8b22cf2602fb60ce)(el);\n            if (rtl) swiperOffset.left -= el.scrollLeft;\n            var swiperCoord = [\n                [\n                    swiperOffset.left,\n                    swiperOffset.top\n                ],\n                [\n                    swiperOffset.left + swiperWidth,\n                    swiperOffset.top\n                ],\n                [\n                    swiperOffset.left,\n                    swiperOffset.top + swiperHeight\n                ],\n                [\n                    swiperOffset.left + swiperWidth,\n                    swiperOffset.top + swiperHeight\n                ]\n            ];\n            for(var i = 0; i < swiperCoord.length; i += 1){\n                var point = swiperCoord[i];\n                if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n                    if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n                    inView = true;\n                }\n            }\n            if (!inView) return undefined;\n        }\n        if (swiper.isHorizontal()) {\n            if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n            }\n            if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n            if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n        } else {\n            if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n            }\n            if (isPageDown || isArrowDown) swiper.slideNext();\n            if (isPageUp || isArrowUp) swiper.slidePrev();\n        }\n        emit(\"keyPress\", kc);\n        return undefined;\n    }\n    function enable() {\n        if (swiper.keyboard.enabled) return;\n        document.addEventListener(\"keydown\", handle);\n        swiper.keyboard.enabled = true;\n    }\n    function disable() {\n        if (!swiper.keyboard.enabled) return;\n        document.removeEventListener(\"keydown\", handle);\n        swiper.keyboard.enabled = false;\n    }\n    on(\"init\", function() {\n        if (swiper.params.keyboard.enabled) enable();\n    });\n    on(\"destroy\", function() {\n        if (swiper.keyboard.enabled) disable();\n    });\n    Object.assign(swiper.keyboard, {\n        enable: enable,\n        disable: disable\n    });\n}\n\n\n\n\n/* eslint-disable consistent-return */ function $e2d467f1d0b9e9ab$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    extendParams({\n        mousewheel: {\n            enabled: false,\n            releaseOnEdges: false,\n            invert: false,\n            forceToAxis: false,\n            sensitivity: 1,\n            eventsTarget: \"container\",\n            thresholdDelta: null,\n            thresholdTime: null,\n            noMousewheelClass: \"swiper-no-mousewheel\"\n        }\n    });\n    swiper.mousewheel = {\n        enabled: false\n    };\n    var timeout;\n    var lastScrollTime = (0, $d680807689e9ecb0$export$4368d992c4eafac0)();\n    var lastEventBeforeSnap;\n    var recentWheelEvents = [];\n    function normalize(e) {\n        // Reasonable defaults\n        var PIXEL_STEP = 10;\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        var sX = 0;\n        var sY = 0; // spinX, spinY\n        var pX = 0;\n        var pY = 0; // pixelX, pixelY\n        // Legacy\n        if (\"detail\" in e) sY = e.detail;\n        if (\"wheelDelta\" in e) sY = -e.wheelDelta / 120;\n        if (\"wheelDeltaY\" in e) sY = -e.wheelDeltaY / 120;\n        if (\"wheelDeltaX\" in e) sX = -e.wheelDeltaX / 120;\n        // side scrolling on FF with DOMMouseScroll\n        if (\"axis\" in e && e.axis === e.HORIZONTAL_AXIS) {\n            sX = sY;\n            sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if (\"deltaY\" in e) pY = e.deltaY;\n        if (\"deltaX\" in e) pX = e.deltaX;\n        if (e.shiftKey && !pX) {\n            // if user scrolls with shift he wants horizontal scroll\n            pX = pY;\n            pY = 0;\n        }\n        if ((pX || pY) && e.deltaMode) {\n            if (e.deltaMode === 1) {\n                // delta in LINE units\n                pX *= LINE_HEIGHT;\n                pY *= LINE_HEIGHT;\n            } else {\n                // delta in PAGE units\n                pX *= PAGE_HEIGHT;\n                pY *= PAGE_HEIGHT;\n            }\n        }\n        // Fall-back if spin cannot be determined\n        if (pX && !sX) sX = pX < 1 ? -1 : 1;\n        if (pY && !sY) sY = pY < 1 ? -1 : 1;\n        return {\n            spinX: sX,\n            spinY: sY,\n            pixelX: pX,\n            pixelY: pY\n        };\n    }\n    function handleMouseEnter() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = true;\n    }\n    function handleMouseLeave() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = false;\n    }\n    function animateSlider(newEvent) {\n        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) // Prevent if delta of wheel scroll delta is below configured threshold\n        return false;\n        if (swiper.params.mousewheel.thresholdTime && (0, $d680807689e9ecb0$export$4368d992c4eafac0)() - lastScrollTime < swiper.params.mousewheel.thresholdTime) // Prevent if time between scrolls is below configured threshold\n        return false;\n        // If the movement is NOT big enough and\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n        //   Don't go any further (avoid insignificant scroll movement).\n        if (newEvent.delta >= 6 && (0, $d680807689e9ecb0$export$4368d992c4eafac0)() - lastScrollTime < 60) // Return false as a default\n        return true;\n        // If user is scrolling towards the end:\n        //   If the slider hasn't hit the latest slide or\n        //   if the slider is a loop and\n        //   if the slider isn't moving right now:\n        //     Go to next slide and\n        //     emit a scroll event.\n        // Else (the user is scrolling towards the beginning) and\n        // if the slider hasn't hit the first slide or\n        // if the slider is a loop and\n        // if the slider isn't moving right now:\n        //   Go to prev slide and\n        //   emit a scroll event.\n        if (newEvent.direction < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n                swiper.slideNext();\n                emit(\"scroll\", newEvent.raw);\n            }\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            emit(\"scroll\", newEvent.raw);\n        }\n        // If you got here is because an animation has been triggered so store the current time\n        lastScrollTime = new window.Date().getTime();\n        // Return false as a default\n        return false;\n    }\n    function releaseScroll(newEvent) {\n        var params = swiper.params.mousewheel;\n        if (newEvent.direction < 0) {\n            if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges\n            return true;\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges\n        return true;\n        return false;\n    }\n    function handle(event1) {\n        var e = event1;\n        var disableParentSwiper = true;\n        if (!swiper.enabled) return;\n        // Ignore event if the target or its parents have the swiper-no-mousewheel class\n        if (event1.target.closest(\".\".concat(swiper.params.mousewheel.noMousewheelClass))) return;\n        var params = swiper.params.mousewheel;\n        if (swiper.params.cssMode) e.preventDefault();\n        var targetEl = swiper.el;\n        if (swiper.params.mousewheel.eventsTarget !== \"container\") targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n        var targetElContainsTarget = targetEl && targetEl.contains(e.target);\n        if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        var delta = 0;\n        var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        var data = normalize(e);\n        if (params.forceToAxis) {\n            if (swiper.isHorizontal()) {\n                if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;\n                else return true;\n            } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;\n            else return true;\n        } else delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n        if (delta === 0) return true;\n        if (params.invert) delta = -delta;\n        // Get the scroll positions\n        var positions = swiper.getTranslate() + delta * params.sensitivity;\n        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n        // When loop is true:\n        //     the disableParentSwiper will be true.\n        // When loop is false:\n        //     if the scroll positions is not on edge,\n        //     then the disableParentSwiper will be true.\n        //     if the scroll on edge positions,\n        //     then the disableParentSwiper will be false.\n        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n            // Register the new event in a variable which stores the relevant data\n            var newEvent = {\n                time: (0, $d680807689e9ecb0$export$4368d992c4eafac0)(),\n                delta: Math.abs(delta),\n                direction: Math.sign(delta),\n                raw: event1\n            };\n            // Keep the most recent events\n            if (recentWheelEvents.length >= 2) recentWheelEvents.shift(); // only store the last N events\n            var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n            recentWheelEvents.push(newEvent);\n            // If there is at least one previous recorded event:\n            //   If direction has changed or\n            //   if the scroll is quicker than the previous one:\n            //     Animate the slider.\n            // Else (this is the first time the wheel is moved):\n            //     Animate the slider.\n            if (prevEvent) {\n                if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) animateSlider(newEvent);\n            } else animateSlider(newEvent);\n            // If it's time to release the scroll:\n            //   Return now so you don't hit the preventDefault.\n            if (releaseScroll(newEvent)) return true;\n        } else {\n            // Freemode or scrollContainer:\n            // If we recently snapped after a momentum scroll, then ignore wheel events\n            // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n            // or if it's a new scroll (larger delta or inverse sign as last event before\n            // an end-of-momentum snap).\n            var newEvent1 = {\n                time: (0, $d680807689e9ecb0$export$4368d992c4eafac0)(),\n                delta: Math.abs(delta),\n                direction: Math.sign(delta)\n            };\n            var ignoreWheelEvents = lastEventBeforeSnap && newEvent1.time < lastEventBeforeSnap.time + 500 && newEvent1.delta <= lastEventBeforeSnap.delta && newEvent1.direction === lastEventBeforeSnap.direction;\n            if (!ignoreWheelEvents) {\n                lastEventBeforeSnap = undefined;\n                var position = swiper.getTranslate() + delta * params.sensitivity;\n                var wasBeginning = swiper.isBeginning;\n                var wasEnd = swiper.isEnd;\n                if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n                if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n                swiper.setTransition(0);\n                swiper.setTranslate(position);\n                swiper.updateProgress();\n                swiper.updateActiveIndex();\n                swiper.updateSlidesClasses();\n                if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) swiper.updateSlidesClasses();\n                if (swiper.params.loop) swiper.loopFix({\n                    direction: newEvent1.direction < 0 ? \"next\" : \"prev\",\n                    byMousewheel: true\n                });\n                if (swiper.params.freeMode.sticky) {\n                    // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n                    // the end of a momentum scroll by storing recent (N=15?) wheel events.\n                    // 1. do all N events have decreasing or same (absolute value) delta?\n                    // 2. did all N events arrive in the last M (M=500?) msecs?\n                    // 3. does the earliest event have an (absolute value) delta that's\n                    //    at least P (P=1?) larger than the most recent event's delta?\n                    // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n                    // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n                    // Snap immediately and ignore remaining wheel events in this scroll.\n                    // See comment above for \"remaining wheel events in this scroll\" determination.\n                    // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n                    clearTimeout(timeout);\n                    timeout = undefined;\n                    if (recentWheelEvents.length >= 15) recentWheelEvents.shift(); // only store the last N events\n                    var prevEvent1 = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n                    var firstEvent = recentWheelEvents[0];\n                    recentWheelEvents.push(newEvent1);\n                    if (prevEvent1 && (newEvent1.delta > prevEvent1.delta || newEvent1.direction !== prevEvent1.direction)) // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                    recentWheelEvents.splice(0);\n                    else if (recentWheelEvents.length >= 15 && newEvent1.time - firstEvent.time < 500 && firstEvent.delta - newEvent1.delta >= 1 && newEvent1.delta <= 6) {\n                        // We're at the end of the deceleration of a momentum scroll, so there's no need\n                        // to wait for more events. Snap ASAP on the next tick.\n                        // Also, because there's some remaining momentum we'll bias the snap in the\n                        // direction of the ongoing scroll because it's better UX for the scroll to snap\n                        // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                        // if it's already scrolled more than 20% in the current direction, keep going.\n                        var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                        lastEventBeforeSnap = newEvent1;\n                        recentWheelEvents.splice(0);\n                        timeout = (0, $d680807689e9ecb0$export$7ccc53e8f1e7dfc5)(function() {\n                            swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                        }, 0); // no delay; move on next tick\n                    }\n                    if (!timeout) // if we get here, then we haven't detected the end of a momentum scroll, so\n                    // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                    // for 500ms.\n                    timeout = (0, $d680807689e9ecb0$export$7ccc53e8f1e7dfc5)(function() {\n                        var snapToThreshold = 0.5;\n                        lastEventBeforeSnap = newEvent1;\n                        recentWheelEvents.splice(0);\n                        swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                    }, 500);\n                }\n                // Emit event\n                if (!ignoreWheelEvents) emit(\"scroll\", e);\n                // Stop autoplay\n                if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n                // Return page scroll on edge positions\n                if (params.releaseOnEdges && (position === swiper.minTranslate() || position === swiper.maxTranslate())) return true;\n            }\n        }\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n        return false;\n    }\n    function events(method) {\n        var targetEl = swiper.el;\n        if (swiper.params.mousewheel.eventsTarget !== \"container\") targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n        targetEl[method](\"mouseenter\", handleMouseEnter);\n        targetEl[method](\"mouseleave\", handleMouseLeave);\n        targetEl[method](\"wheel\", handle);\n    }\n    function enable() {\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.removeEventListener(\"wheel\", handle);\n            return true;\n        }\n        if (swiper.mousewheel.enabled) return false;\n        events(\"addEventListener\");\n        swiper.mousewheel.enabled = true;\n        return true;\n    }\n    function disable() {\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.addEventListener(event, handle);\n            return true;\n        }\n        if (!swiper.mousewheel.enabled) return false;\n        events(\"removeEventListener\");\n        swiper.mousewheel.enabled = false;\n        return true;\n    }\n    on(\"init\", function() {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) disable();\n        if (swiper.params.mousewheel.enabled) enable();\n    });\n    on(\"destroy\", function() {\n        if (swiper.params.cssMode) enable();\n        if (swiper.mousewheel.enabled) disable();\n    });\n    Object.assign(swiper.mousewheel, {\n        enable: enable,\n        disable: disable\n    });\n}\n\n\n\n\nfunction $1cb2273d5ef93ded$export$db3b6bfb95261072(swiper, originalParams, params, checkProps) {\n    if (swiper.params.createElements) Object.keys(checkProps).forEach(function(key) {\n        if (!params[key] && params.auto === true) {\n            var element = (0, $d680807689e9ecb0$export$f1e1789686576879)(swiper.el, \".\".concat(checkProps[key]))[0];\n            if (!element) {\n                element = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", checkProps[key]);\n                element.className = checkProps[key];\n                swiper.el.append(element);\n            }\n            params[key] = element;\n            originalParams[key] = element;\n        }\n    });\n    return params;\n}\n\n\n\nfunction $912565fc09f243af$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    extendParams({\n        navigation: {\n            nextEl: null,\n            prevEl: null,\n            hideOnClick: false,\n            disabledClass: \"swiper-button-disabled\",\n            hiddenClass: \"swiper-button-hidden\",\n            lockClass: \"swiper-button-lock\",\n            navigationDisabledClass: \"swiper-navigation-disabled\"\n        }\n    });\n    swiper.navigation = {\n        nextEl: null,\n        prevEl: null\n    };\n    function getEl(el) {\n        var res;\n        if (el && typeof el === \"string\" && swiper.isElement) {\n            res = swiper.el.querySelector(el);\n            if (res) return res;\n        }\n        if (el) {\n            if (typeof el === \"string\") res = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(document.querySelectorAll(el));\n            if (swiper.params.uniqueNavElements && typeof el === \"string\" && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) res = swiper.el.querySelector(el);\n        }\n        if (el && !res) return el;\n        // if (Array.isArray(res) && res.length === 1) res = res[0];\n        return res;\n    }\n    function toggleEl(el, disabled) {\n        var params = swiper.params.navigation;\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            if (subEl) {\n                var _subEl_classList;\n                (_subEl_classList = subEl.classList)[disabled ? \"add\" : \"remove\"].apply(_subEl_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(params.disabledClass.split(\" \")));\n                if (subEl.tagName === \"BUTTON\") subEl.disabled = disabled;\n                if (swiper.params.watchOverflow && swiper.enabled) subEl.classList[swiper.isLocked ? \"add\" : \"remove\"](params.lockClass);\n            }\n        });\n    }\n    function update() {\n        // Update Navigation Buttons\n        var _swiper_navigation = swiper.navigation, nextEl = _swiper_navigation.nextEl, prevEl = _swiper_navigation.prevEl;\n        if (swiper.params.loop) {\n            toggleEl(prevEl, false);\n            toggleEl(nextEl, false);\n            return;\n        }\n        toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n        toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n    }\n    function onPrevClick(e) {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slidePrev();\n        emit(\"navigationPrev\");\n    }\n    function onNextClick(e) {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slideNext();\n        emit(\"navigationNext\");\n    }\n    function init() {\n        var params = swiper.params.navigation;\n        swiper.params.navigation = (0, $1cb2273d5ef93ded$export$db3b6bfb95261072)(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n            nextEl: \"swiper-button-next\",\n            prevEl: \"swiper-button-prev\"\n        });\n        if (!(params.nextEl || params.prevEl)) return;\n        var nextEl = getEl(params.nextEl);\n        var prevEl = getEl(params.prevEl);\n        Object.assign(swiper.navigation, {\n            nextEl: nextEl,\n            prevEl: prevEl\n        });\n        nextEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(nextEl);\n        prevEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(prevEl);\n        var initButton = function(el, dir) {\n            var _el_classList;\n            if (el) el.addEventListener(\"click\", dir === \"next\" ? onNextClick : onPrevClick);\n            if (!swiper.enabled && el) (_el_classList = el.classList).add.apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(params.lockClass.split(\" \")));\n        };\n        nextEl.forEach(function(el) {\n            return initButton(el, \"next\");\n        });\n        prevEl.forEach(function(el) {\n            return initButton(el, \"prev\");\n        });\n    }\n    function destroy() {\n        var _swiper_navigation = swiper.navigation, nextEl = _swiper_navigation.nextEl, prevEl = _swiper_navigation.prevEl;\n        nextEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(nextEl);\n        prevEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(prevEl);\n        var destroyButton = function(el, dir) {\n            var _el_classList;\n            el.removeEventListener(\"click\", dir === \"next\" ? onNextClick : onPrevClick);\n            (_el_classList = el.classList).remove.apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.params.navigation.disabledClass.split(\" \")));\n        };\n        nextEl.forEach(function(el) {\n            return destroyButton(el, \"next\");\n        });\n        prevEl.forEach(function(el) {\n            return destroyButton(el, \"prev\");\n        });\n    }\n    on(\"init\", function() {\n        if (swiper.params.navigation.enabled === false) // eslint-disable-next-line\n        disable();\n        else {\n            init();\n            update();\n        }\n    });\n    on(\"toEdge fromEdge lock unlock\", function() {\n        update();\n    });\n    on(\"destroy\", function() {\n        destroy();\n    });\n    on(\"enable disable\", function() {\n        var _swiper_navigation = swiper.navigation, nextEl = _swiper_navigation.nextEl, prevEl = _swiper_navigation.prevEl;\n        nextEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(nextEl);\n        prevEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(prevEl);\n        if (swiper.enabled) {\n            update();\n            return;\n        }\n        (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(nextEl).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(prevEl)).filter(function(el) {\n            return !!el;\n        }).forEach(function(el) {\n            return el.classList.add(swiper.params.navigation.lockClass);\n        });\n    });\n    on(\"click\", function(_s, e) {\n        var _swiper_navigation = swiper.navigation, nextEl = _swiper_navigation.nextEl, prevEl = _swiper_navigation.prevEl;\n        nextEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(nextEl);\n        prevEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(prevEl);\n        var targetEl = e.target;\n        if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n            if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n            var isHidden;\n            if (nextEl.length) isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n            else if (prevEl.length) isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n            if (isHidden === true) emit(\"navigationShow\");\n            else emit(\"navigationHide\");\n            (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(nextEl).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(prevEl)).filter(function(el) {\n                return !!el;\n            }).forEach(function(el) {\n                return el.classList.toggle(swiper.params.navigation.hiddenClass);\n            });\n        }\n    });\n    var enable = function() {\n        var _swiper_el_classList;\n        (_swiper_el_classList = swiper.el.classList).remove.apply(_swiper_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.params.navigation.navigationDisabledClass.split(\" \")));\n        init();\n        update();\n    };\n    var disable = function() {\n        var _swiper_el_classList;\n        (_swiper_el_classList = swiper.el.classList).add.apply(_swiper_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.params.navigation.navigationDisabledClass.split(\" \")));\n        destroy();\n    };\n    Object.assign(swiper.navigation, {\n        enable: enable,\n        disable: disable,\n        update: update,\n        init: init,\n        destroy: destroy\n    });\n}\n\n\n\nfunction $cd860e38c4fd3577$export$db3b6bfb95261072(classes) {\n    if (classes === void 0) classes = \"\";\n    return \".\".concat(classes.trim().replace(/([\\.:!+\\/])/g, \"\\\\$1\") // eslint-disable-line\n    .replace(/ /g, \".\"));\n}\n\n\n\n\nfunction $392c62a1bf8e97d1$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    var pfx = \"swiper-pagination\";\n    extendParams({\n        pagination: {\n            el: null,\n            bulletElement: \"span\",\n            clickable: false,\n            hideOnClick: false,\n            renderBullet: null,\n            renderProgressbar: null,\n            renderFraction: null,\n            renderCustom: null,\n            progressbarOpposite: false,\n            type: \"bullets\",\n            // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n            dynamicBullets: false,\n            dynamicMainBullets: 1,\n            formatFractionCurrent: function(number) {\n                return number;\n            },\n            formatFractionTotal: function(number) {\n                return number;\n            },\n            bulletClass: \"\".concat(pfx, \"-bullet\"),\n            bulletActiveClass: \"\".concat(pfx, \"-bullet-active\"),\n            modifierClass: \"\".concat(pfx, \"-\"),\n            currentClass: \"\".concat(pfx, \"-current\"),\n            totalClass: \"\".concat(pfx, \"-total\"),\n            hiddenClass: \"\".concat(pfx, \"-hidden\"),\n            progressbarFillClass: \"\".concat(pfx, \"-progressbar-fill\"),\n            progressbarOppositeClass: \"\".concat(pfx, \"-progressbar-opposite\"),\n            clickableClass: \"\".concat(pfx, \"-clickable\"),\n            lockClass: \"\".concat(pfx, \"-lock\"),\n            horizontalClass: \"\".concat(pfx, \"-horizontal\"),\n            verticalClass: \"\".concat(pfx, \"-vertical\"),\n            paginationDisabledClass: \"\".concat(pfx, \"-disabled\")\n        }\n    });\n    swiper.pagination = {\n        el: null,\n        bullets: []\n    };\n    var bulletSize;\n    var dynamicBulletIndex = 0;\n    function isPaginationDisabled() {\n        return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n    }\n    function setSideBullets(bulletEl, position) {\n        var bulletActiveClass = swiper.params.pagination.bulletActiveClass;\n        if (!bulletEl) return;\n        bulletEl = bulletEl[\"\".concat(position === \"prev\" ? \"previous\" : \"next\", \"ElementSibling\")];\n        if (bulletEl) {\n            bulletEl.classList.add(\"\".concat(bulletActiveClass, \"-\").concat(position));\n            bulletEl = bulletEl[\"\".concat(position === \"prev\" ? \"previous\" : \"next\", \"ElementSibling\")];\n            if (bulletEl) bulletEl.classList.add(\"\".concat(bulletActiveClass, \"-\").concat(position, \"-\").concat(position));\n        }\n    }\n    function onBulletClick(e) {\n        var bulletEl = e.target.closest((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(swiper.params.pagination.bulletClass));\n        if (!bulletEl) return;\n        e.preventDefault();\n        var index = (0, $d680807689e9ecb0$export$39b482c5e57630a8)(bulletEl) * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) {\n            if (swiper.realIndex === index) return;\n            swiper.slideToLoop(index);\n        } else swiper.slideTo(index);\n    }\n    function update() {\n        // Render || Update Pagination bullets/items\n        var rtl = swiper.rtl;\n        var params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        var el = swiper.pagination.el;\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        // Current/Total\n        var current;\n        var previousIndex;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        if (swiper.params.loop) {\n            previousIndex = swiper.previousRealIndex || 0;\n            current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n        } else if (typeof swiper.snapIndex !== \"undefined\") {\n            current = swiper.snapIndex;\n            previousIndex = swiper.previousSnapIndex;\n        } else {\n            previousIndex = swiper.previousIndex || 0;\n            current = swiper.activeIndex || 0;\n        }\n        // Types\n        if (params.type === \"bullets\" && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n            var bullets = swiper.pagination.bullets;\n            var firstIndex;\n            var lastIndex;\n            var midIndex;\n            if (params.dynamicBullets) {\n                bulletSize = (0, $d680807689e9ecb0$export$2d1720544b23b823)(bullets[0], swiper.isHorizontal() ? \"width\" : \"height\", true);\n                el.forEach(function(subEl) {\n                    subEl.style[swiper.isHorizontal() ? \"width\" : \"height\"] = \"\".concat(bulletSize * (params.dynamicMainBullets + 4), \"px\");\n                });\n                if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n                    dynamicBulletIndex += current - (previousIndex || 0);\n                    if (dynamicBulletIndex > params.dynamicMainBullets - 1) dynamicBulletIndex = params.dynamicMainBullets - 1;\n                    else if (dynamicBulletIndex < 0) dynamicBulletIndex = 0;\n                }\n                firstIndex = Math.max(current - dynamicBulletIndex, 0);\n                lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n                midIndex = (lastIndex + firstIndex) / 2;\n            }\n            bullets.forEach(function(bulletEl) {\n                var _bulletEl_classList;\n                var classesToRemove = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)([\n                    \"\",\n                    \"-next\",\n                    \"-next-next\",\n                    \"-prev\",\n                    \"-prev-prev\",\n                    \"-main\"\n                ].map(function(suffix) {\n                    return \"\".concat(params.bulletActiveClass).concat(suffix);\n                })).map(function(s) {\n                    return typeof s === \"string\" && s.includes(\" \") ? s.split(\" \") : s;\n                }).flat();\n                (_bulletEl_classList = bulletEl.classList).remove.apply(_bulletEl_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(classesToRemove));\n            });\n            if (el.length > 1) bullets.forEach(function(bullet) {\n                var _bullet_classList;\n                var bulletIndex = (0, $d680807689e9ecb0$export$39b482c5e57630a8)(bullet);\n                if (bulletIndex === current) (_bullet_classList = bullet.classList).add.apply(_bullet_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(params.bulletActiveClass.split(\" \")));\n                else if (swiper.isElement) bullet.setAttribute(\"part\", \"bullet\");\n                if (params.dynamicBullets) {\n                    var _bullet_classList1;\n                    if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) (_bullet_classList1 = bullet.classList).add.apply(_bullet_classList1, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(\"\".concat(params.bulletActiveClass, \"-main\").split(\" \")));\n                    if (bulletIndex === firstIndex) setSideBullets(bullet, \"prev\");\n                    if (bulletIndex === lastIndex) setSideBullets(bullet, \"next\");\n                }\n            });\n            else {\n                var _bullet_classList;\n                var bullet = bullets[current];\n                if (bullet) (_bullet_classList = bullet.classList).add.apply(_bullet_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(params.bulletActiveClass.split(\" \")));\n                if (swiper.isElement) bullets.forEach(function(bulletEl, bulletIndex) {\n                    bulletEl.setAttribute(\"part\", bulletIndex === current ? \"bullet-active\" : \"bullet\");\n                });\n                if (params.dynamicBullets) {\n                    var _bullets_i_classList;\n                    var firstDisplayedBullet = bullets[firstIndex];\n                    var lastDisplayedBullet = bullets[lastIndex];\n                    for(var i = firstIndex; i <= lastIndex; i += 1)if (bullets[i]) (_bullets_i_classList = bullets[i].classList).add.apply(_bullets_i_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(\"\".concat(params.bulletActiveClass, \"-main\").split(\" \")));\n                    setSideBullets(firstDisplayedBullet, \"prev\");\n                    setSideBullets(lastDisplayedBullet, \"next\");\n                }\n            }\n            if (params.dynamicBullets) {\n                var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n                var bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n                var offsetProp = rtl ? \"right\" : \"left\";\n                bullets.forEach(function(bullet) {\n                    bullet.style[swiper.isHorizontal() ? offsetProp : \"top\"] = \"\".concat(bulletsOffset, \"px\");\n                });\n            }\n        }\n        el.forEach(function(subEl, subElIndex) {\n            if (params.type === \"fraction\") {\n                subEl.querySelectorAll((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(params.currentClass)).forEach(function(fractionEl) {\n                    fractionEl.textContent = params.formatFractionCurrent(current + 1);\n                });\n                subEl.querySelectorAll((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(params.totalClass)).forEach(function(totalEl) {\n                    totalEl.textContent = params.formatFractionTotal(total);\n                });\n            }\n            if (params.type === \"progressbar\") {\n                var progressbarDirection;\n                if (params.progressbarOpposite) progressbarDirection = swiper.isHorizontal() ? \"vertical\" : \"horizontal\";\n                else progressbarDirection = swiper.isHorizontal() ? \"horizontal\" : \"vertical\";\n                var scale = (current + 1) / total;\n                var scaleX = 1;\n                var scaleY = 1;\n                if (progressbarDirection === \"horizontal\") scaleX = scale;\n                else scaleY = scale;\n                subEl.querySelectorAll((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(params.progressbarFillClass)).forEach(function(progressEl) {\n                    progressEl.style.transform = \"translate3d(0,0,0) scaleX(\".concat(scaleX, \") scaleY(\").concat(scaleY, \")\");\n                    progressEl.style.transitionDuration = \"\".concat(swiper.params.speed, \"ms\");\n                });\n            }\n            if (params.type === \"custom\" && params.renderCustom) {\n                subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n                if (subElIndex === 0) emit(\"paginationRender\", subEl);\n            } else {\n                if (subElIndex === 0) emit(\"paginationRender\", subEl);\n                emit(\"paginationUpdate\", subEl);\n            }\n            if (swiper.params.watchOverflow && swiper.enabled) subEl.classList[swiper.isLocked ? \"add\" : \"remove\"](params.lockClass);\n        });\n    }\n    function render() {\n        // Render Container\n        var params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.grid && swiper.params.grid.rows > 1 ? swiper.slides.length / Math.ceil(swiper.params.grid.rows) : swiper.slides.length;\n        var el = swiper.pagination.el;\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        var paginationHTML = \"\";\n        if (params.type === \"bullets\") {\n            var numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n            if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) numberOfBullets = slidesLength;\n            for(var i = 0; i < numberOfBullets; i += 1)if (params.renderBullet) paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n            else // prettier-ignore\n            paginationHTML += \"<\".concat(params.bulletElement, \" \").concat(swiper.isElement ? 'part=\"bullet\"' : \"\", ' class=\"').concat(params.bulletClass, '\"></').concat(params.bulletElement, \">\");\n        }\n        if (params.type === \"fraction\") {\n            if (params.renderFraction) paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n            else paginationHTML = '<span class=\"'.concat(params.currentClass, '\"></span>') + \" / \" + '<span class=\"'.concat(params.totalClass, '\"></span>');\n        }\n        if (params.type === \"progressbar\") {\n            if (params.renderProgressbar) paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n            else paginationHTML = '<span class=\"'.concat(params.progressbarFillClass, '\"></span>');\n        }\n        swiper.pagination.bullets = [];\n        el.forEach(function(subEl) {\n            var _swiper_pagination_bullets;\n            if (params.type !== \"custom\") subEl.innerHTML = paginationHTML || \"\";\n            if (params.type === \"bullets\") (_swiper_pagination_bullets = swiper.pagination.bullets).push.apply(_swiper_pagination_bullets, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(subEl.querySelectorAll((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(params.bulletClass))));\n        });\n        if (params.type !== \"custom\") emit(\"paginationRender\", el[0]);\n    }\n    function init() {\n        swiper.params.pagination = (0, $1cb2273d5ef93ded$export$db3b6bfb95261072)(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n            el: \"swiper-pagination\"\n        });\n        var params = swiper.params.pagination;\n        if (!params.el) return;\n        var el;\n        if (typeof params.el === \"string\" && swiper.isElement) el = swiper.el.querySelector(params.el);\n        if (!el && typeof params.el === \"string\") el = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(document.querySelectorAll(params.el));\n        if (!el) el = params.el;\n        if (!el || el.length === 0) return;\n        if (swiper.params.uniqueNavElements && typeof params.el === \"string\" && Array.isArray(el) && el.length > 1) {\n            el = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.el.querySelectorAll(params.el));\n            // check if it belongs to another nested Swiper\n            if (el.length > 1) el = el.filter(function(subEl) {\n                if ((0, $d680807689e9ecb0$export$407448d2b89b1813)(subEl, \".swiper\")[0] !== swiper.el) return false;\n                return true;\n            })[0];\n        }\n        if (Array.isArray(el) && el.length === 1) el = el[0];\n        Object.assign(swiper.pagination, {\n            el: el\n        });\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            var _subEl_classList;\n            if (params.type === \"bullets\" && params.clickable) (_subEl_classList = subEl.classList).add.apply(_subEl_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((params.clickableClass || \"\").split(\" \")));\n            subEl.classList.add(params.modifierClass + params.type);\n            subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n            if (params.type === \"bullets\" && params.dynamicBullets) {\n                subEl.classList.add(\"\".concat(params.modifierClass).concat(params.type, \"-dynamic\"));\n                dynamicBulletIndex = 0;\n                if (params.dynamicMainBullets < 1) params.dynamicMainBullets = 1;\n            }\n            if (params.type === \"progressbar\" && params.progressbarOpposite) subEl.classList.add(params.progressbarOppositeClass);\n            if (params.clickable) subEl.addEventListener(\"click\", onBulletClick);\n            if (!swiper.enabled) subEl.classList.add(params.lockClass);\n        });\n    }\n    function destroy() {\n        var _subEl_classList;\n        var params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        var el = swiper.pagination.el;\n        if (el) {\n            el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n            el.forEach(function(subEl) {\n                subEl.classList.remove(params.hiddenClass);\n                subEl.classList.remove(params.modifierClass + params.type);\n                subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n                if (params.clickable) {\n                    var _subEl_classList;\n                    (_subEl_classList = subEl.classList).remove.apply(_subEl_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((params.clickableClass || \"\").split(\" \")));\n                    subEl.removeEventListener(\"click\", onBulletClick);\n                }\n            });\n        }\n        if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(function(subEl) {\n            return (_subEl_classList = subEl.classList).remove.apply(_subEl_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(params.bulletActiveClass.split(\" \")));\n        });\n    }\n    on(\"changeDirection\", function() {\n        if (!swiper.pagination || !swiper.pagination.el) return;\n        var params = swiper.params.pagination;\n        var el = swiper.pagination.el;\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.classList.remove(params.horizontalClass, params.verticalClass);\n            subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        });\n    });\n    on(\"init\", function() {\n        if (swiper.params.pagination.enabled === false) // eslint-disable-next-line\n        disable();\n        else {\n            init();\n            render();\n            update();\n        }\n    });\n    on(\"activeIndexChange\", function() {\n        if (typeof swiper.snapIndex === \"undefined\") update();\n    });\n    on(\"snapIndexChange\", function() {\n        update();\n    });\n    on(\"snapGridLengthChange\", function() {\n        render();\n        update();\n    });\n    on(\"destroy\", function() {\n        destroy();\n    });\n    on(\"enable disable\", function() {\n        var el = swiper.pagination.el;\n        if (el) {\n            el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n            el.forEach(function(subEl) {\n                return subEl.classList[swiper.enabled ? \"remove\" : \"add\"](swiper.params.pagination.lockClass);\n            });\n        }\n    });\n    on(\"lock unlock\", function() {\n        update();\n    });\n    on(\"click\", function(_s, e) {\n        var targetEl = e.target;\n        var el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(swiper.pagination.el);\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n            if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n            var isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n            if (isHidden === true) emit(\"paginationShow\");\n            else emit(\"paginationHide\");\n            el.forEach(function(subEl) {\n                return subEl.classList.toggle(swiper.params.pagination.hiddenClass);\n            });\n        }\n    });\n    var enable = function() {\n        swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n        var el = swiper.pagination.el;\n        if (el) {\n            el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n            el.forEach(function(subEl) {\n                return subEl.classList.remove(swiper.params.pagination.paginationDisabledClass);\n            });\n        }\n        init();\n        render();\n        update();\n    };\n    var disable = function() {\n        swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n        var el = swiper.pagination.el;\n        if (el) {\n            el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n            el.forEach(function(subEl) {\n                return subEl.classList.add(swiper.params.pagination.paginationDisabledClass);\n            });\n        }\n        destroy();\n    };\n    Object.assign(swiper.pagination, {\n        enable: enable,\n        disable: disable,\n        render: render,\n        update: update,\n        init: init,\n        destroy: destroy\n    });\n}\n\n\n\n\n\n\n\nfunction $8ba93b7cac365f8e$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    var isTouched = false;\n    var timeout = null;\n    var dragTimeout = null;\n    var dragStartPos;\n    var dragSize;\n    var trackSize;\n    var divider;\n    extendParams({\n        scrollbar: {\n            el: null,\n            dragSize: \"auto\",\n            hide: false,\n            draggable: false,\n            snapOnRelease: true,\n            lockClass: \"swiper-scrollbar-lock\",\n            dragClass: \"swiper-scrollbar-drag\",\n            scrollbarDisabledClass: \"swiper-scrollbar-disabled\",\n            horizontalClass: \"swiper-scrollbar-horizontal\",\n            verticalClass: \"swiper-scrollbar-vertical\"\n        }\n    });\n    swiper.scrollbar = {\n        el: null,\n        dragEl: null\n    };\n    function setTranslate() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate;\n        var dragEl = scrollbar.dragEl, el = scrollbar.el;\n        var params = swiper.params.scrollbar;\n        var progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n        var newSize = dragSize;\n        var newPos = (trackSize - dragSize) * progress;\n        if (rtl) {\n            newPos = -newPos;\n            if (newPos > 0) {\n                newSize = dragSize - newPos;\n                newPos = 0;\n            } else if (-newPos + dragSize > trackSize) newSize = trackSize + newPos;\n        } else if (newPos < 0) {\n            newSize = dragSize + newPos;\n            newPos = 0;\n        } else if (newPos + dragSize > trackSize) newSize = trackSize - newPos;\n        if (swiper.isHorizontal()) {\n            dragEl.style.transform = \"translate3d(\".concat(newPos, \"px, 0, 0)\");\n            dragEl.style.width = \"\".concat(newSize, \"px\");\n        } else {\n            dragEl.style.transform = \"translate3d(0px, \".concat(newPos, \"px, 0)\");\n            dragEl.style.height = \"\".concat(newSize, \"px\");\n        }\n        if (params.hide) {\n            clearTimeout(timeout);\n            el.style.opacity = 1;\n            timeout = setTimeout(function() {\n                el.style.opacity = 0;\n                el.style.transitionDuration = \"400ms\";\n            }, 1000);\n        }\n    }\n    function setTransition(duration) {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        swiper.scrollbar.dragEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n    }\n    function updateSize() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        var scrollbar = swiper.scrollbar;\n        var dragEl = scrollbar.dragEl, el = scrollbar.el;\n        dragEl.style.width = \"\";\n        dragEl.style.height = \"\";\n        trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n        if (swiper.params.scrollbar.dragSize === \"auto\") dragSize = trackSize * divider;\n        else dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        if (swiper.isHorizontal()) dragEl.style.width = \"\".concat(dragSize, \"px\");\n        else dragEl.style.height = \"\".concat(dragSize, \"px\");\n        if (divider >= 1) el.style.display = \"none\";\n        else el.style.display = \"\";\n        if (swiper.params.scrollbar.hide) el.style.opacity = 0;\n        if (swiper.params.watchOverflow && swiper.enabled) scrollbar.el.classList[swiper.isLocked ? \"add\" : \"remove\"](swiper.params.scrollbar.lockClass);\n    }\n    function getPointerPosition(e) {\n        return swiper.isHorizontal() ? e.clientX : e.clientY;\n    }\n    function setDragPosition(e) {\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate;\n        var el = scrollbar.el;\n        var positionRatio;\n        positionRatio = (getPointerPosition(e) - (0, $d680807689e9ecb0$export$8b22cf2602fb60ce)(el)[swiper.isHorizontal() ? \"left\" : \"top\"] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n        if (rtl) positionRatio = 1 - positionRatio;\n        var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    }\n    function onDragStart(e) {\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar, wrapperEl = swiper.wrapperEl;\n        var el = scrollbar.el, dragEl = scrollbar.dragEl;\n        isTouched = true;\n        dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? \"left\" : \"top\"] : null;\n        e.preventDefault();\n        e.stopPropagation();\n        wrapperEl.style.transitionDuration = \"100ms\";\n        dragEl.style.transitionDuration = \"100ms\";\n        setDragPosition(e);\n        clearTimeout(dragTimeout);\n        el.style.transitionDuration = \"0ms\";\n        if (params.hide) el.style.opacity = 1;\n        if (swiper.params.cssMode) swiper.wrapperEl.style[\"scroll-snap-type\"] = \"none\";\n        emit(\"scrollbarDragStart\", e);\n    }\n    function onDragMove(e) {\n        var scrollbar = swiper.scrollbar, wrapperEl = swiper.wrapperEl;\n        var el = scrollbar.el, dragEl = scrollbar.dragEl;\n        if (!isTouched) return;\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n        setDragPosition(e);\n        wrapperEl.style.transitionDuration = \"0ms\";\n        el.style.transitionDuration = \"0ms\";\n        dragEl.style.transitionDuration = \"0ms\";\n        emit(\"scrollbarDragMove\", e);\n    }\n    function onDragEnd(e) {\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar, wrapperEl = swiper.wrapperEl;\n        var el = scrollbar.el;\n        if (!isTouched) return;\n        isTouched = false;\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.style[\"scroll-snap-type\"] = \"\";\n            wrapperEl.style.transitionDuration = \"\";\n        }\n        if (params.hide) {\n            clearTimeout(dragTimeout);\n            dragTimeout = (0, $d680807689e9ecb0$export$7ccc53e8f1e7dfc5)(function() {\n                el.style.opacity = 0;\n                el.style.transitionDuration = \"400ms\";\n            }, 1000);\n        }\n        emit(\"scrollbarDragEnd\", e);\n        if (params.snapOnRelease) swiper.slideToClosest();\n    }\n    function events(method) {\n        var scrollbar = swiper.scrollbar, params = swiper.params;\n        var el = scrollbar.el;\n        if (!el) return;\n        var target = el;\n        var activeListener = params.passiveListeners ? {\n            passive: false,\n            capture: false\n        } : false;\n        var passiveListener = params.passiveListeners ? {\n            passive: true,\n            capture: false\n        } : false;\n        if (!target) return;\n        var eventMethod = method === \"on\" ? \"addEventListener\" : \"removeEventListener\";\n        target[eventMethod](\"pointerdown\", onDragStart, activeListener);\n        document[eventMethod](\"pointermove\", onDragMove, activeListener);\n        document[eventMethod](\"pointerup\", onDragEnd, passiveListener);\n    }\n    function enableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events(\"on\");\n    }\n    function disableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events(\"off\");\n    }\n    function init() {\n        var _el_classList;\n        var scrollbar = swiper.scrollbar, swiperEl = swiper.el;\n        swiper.params.scrollbar = (0, $1cb2273d5ef93ded$export$db3b6bfb95261072)(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n            el: \"swiper-scrollbar\"\n        });\n        var params = swiper.params.scrollbar;\n        if (!params.el) return;\n        var el;\n        if (typeof params.el === \"string\" && swiper.isElement) el = swiper.el.querySelector(params.el);\n        if (!el && typeof params.el === \"string\") {\n            el = document.querySelectorAll(params.el);\n            if (!el.length) return;\n        } else if (!el) el = params.el;\n        if (swiper.params.uniqueNavElements && typeof params.el === \"string\" && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) el = swiperEl.querySelector(params.el);\n        if (el.length > 0) el = el[0];\n        el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        var dragEl;\n        if (el) {\n            dragEl = el.querySelector((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(swiper.params.scrollbar.dragClass));\n            if (!dragEl) {\n                dragEl = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", swiper.params.scrollbar.dragClass);\n                el.append(dragEl);\n            }\n        }\n        Object.assign(scrollbar, {\n            el: el,\n            dragEl: dragEl\n        });\n        if (params.draggable) enableDraggable();\n        if (el) (_el_classList = el.classList)[swiper.enabled ? \"remove\" : \"add\"].apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$dda1d9f60106f0e9)(swiper.params.scrollbar.lockClass)));\n    }\n    function destroy() {\n        var _el_classList;\n        var params = swiper.params.scrollbar;\n        var el = swiper.scrollbar.el;\n        if (el) (_el_classList = el.classList).remove.apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$dda1d9f60106f0e9)(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass)));\n        disableDraggable();\n    }\n    on(\"changeDirection\", function() {\n        if (!swiper.scrollbar || !swiper.scrollbar.el) return;\n        var params = swiper.params.scrollbar;\n        var el = swiper.scrollbar.el;\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.classList.remove(params.horizontalClass, params.verticalClass);\n            subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        });\n    });\n    on(\"init\", function() {\n        if (swiper.params.scrollbar.enabled === false) // eslint-disable-next-line\n        disable();\n        else {\n            init();\n            updateSize();\n            setTranslate();\n        }\n    });\n    on(\"update resize observerUpdate lock unlock changeDirection\", function() {\n        updateSize();\n    });\n    on(\"setTranslate\", function() {\n        setTranslate();\n    });\n    on(\"setTransition\", function(_s, duration) {\n        setTransition(duration);\n    });\n    on(\"enable disable\", function() {\n        var _el_classList;\n        var el = swiper.scrollbar.el;\n        if (el) (_el_classList = el.classList)[swiper.enabled ? \"remove\" : \"add\"].apply(_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$dda1d9f60106f0e9)(swiper.params.scrollbar.lockClass)));\n    });\n    on(\"destroy\", function() {\n        destroy();\n    });\n    var enable = function() {\n        var _swiper_el_classList, _swiper_scrollbar_el_classList;\n        (_swiper_el_classList = swiper.el.classList).remove.apply(_swiper_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$dda1d9f60106f0e9)(swiper.params.scrollbar.scrollbarDisabledClass)));\n        if (swiper.scrollbar.el) (_swiper_scrollbar_el_classList = swiper.scrollbar.el.classList).remove.apply(_swiper_scrollbar_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$dda1d9f60106f0e9)(swiper.params.scrollbar.scrollbarDisabledClass)));\n        init();\n        updateSize();\n        setTranslate();\n    };\n    var disable = function() {\n        var _swiper_el_classList, _swiper_scrollbar_el_classList;\n        (_swiper_el_classList = swiper.el.classList).add.apply(_swiper_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$dda1d9f60106f0e9)(swiper.params.scrollbar.scrollbarDisabledClass)));\n        if (swiper.scrollbar.el) (_swiper_scrollbar_el_classList = swiper.scrollbar.el.classList).add.apply(_swiper_scrollbar_el_classList, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$dda1d9f60106f0e9)(swiper.params.scrollbar.scrollbarDisabledClass)));\n        destroy();\n    };\n    Object.assign(swiper.scrollbar, {\n        enable: enable,\n        disable: disable,\n        updateSize: updateSize,\n        setTranslate: setTranslate,\n        init: init,\n        destroy: destroy\n    });\n}\n\n\n\n\nfunction $165e7e81b7bc2046$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        parallax: {\n            enabled: false\n        }\n    });\n    var elementsSelector = \"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\";\n    var setTransform = function(el, progress) {\n        var rtl = swiper.rtl;\n        var rtlFactor = rtl ? -1 : 1;\n        var p = el.getAttribute(\"data-swiper-parallax\") || \"0\";\n        var x = el.getAttribute(\"data-swiper-parallax-x\");\n        var y = el.getAttribute(\"data-swiper-parallax-y\");\n        var scale = el.getAttribute(\"data-swiper-parallax-scale\");\n        var opacity = el.getAttribute(\"data-swiper-parallax-opacity\");\n        var rotate = el.getAttribute(\"data-swiper-parallax-rotate\");\n        if (x || y) {\n            x = x || \"0\";\n            y = y || \"0\";\n        } else if (swiper.isHorizontal()) {\n            x = p;\n            y = \"0\";\n        } else {\n            y = p;\n            x = \"0\";\n        }\n        if (x.indexOf(\"%\") >= 0) x = \"\".concat(parseInt(x, 10) * progress * rtlFactor, \"%\");\n        else x = \"\".concat(x * progress * rtlFactor, \"px\");\n        if (y.indexOf(\"%\") >= 0) y = \"\".concat(parseInt(y, 10) * progress, \"%\");\n        else y = \"\".concat(y * progress, \"px\");\n        if (typeof opacity !== \"undefined\" && opacity !== null) {\n            var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n            el.style.opacity = currentOpacity;\n        }\n        var transform = \"translate3d(\".concat(x, \", \").concat(y, \", 0px)\");\n        if (typeof scale !== \"undefined\" && scale !== null) {\n            var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n            transform += \" scale(\".concat(currentScale, \")\");\n        }\n        if (rotate && typeof rotate !== \"undefined\" && rotate !== null) {\n            var currentRotate = rotate * progress * -1;\n            transform += \" rotate(\".concat(currentRotate, \"deg)\");\n        }\n        el.style.transform = transform;\n    };\n    var setTranslate = function() {\n        var _elements;\n        var el = swiper.el, slides = swiper.slides, progress = swiper.progress, snapGrid = swiper.snapGrid, isElement = swiper.isElement;\n        var elements = (0, $d680807689e9ecb0$export$f1e1789686576879)(el, elementsSelector);\n        if (swiper.isElement) (_elements = elements).push.apply(_elements, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $d680807689e9ecb0$export$f1e1789686576879)(swiper.hostEl, elementsSelector)));\n        elements.forEach(function(subEl) {\n            setTransform(subEl, progress);\n        });\n        slides.forEach(function(slideEl, slideIndex) {\n            var slideProgress = slideEl.progress;\n            if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== \"auto\") slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n            slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n            slideEl.querySelectorAll(\"\".concat(elementsSelector, \", [data-swiper-parallax-rotate]\")).forEach(function(subEl) {\n                setTransform(subEl, slideProgress);\n            });\n        });\n    };\n    var setTransition = function setTransition(duration) {\n        var _elements;\n        if (duration === void 0) duration = swiper.params.speed;\n        var el = swiper.el, hostEl = swiper.hostEl;\n        var elements = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(el.querySelectorAll(elementsSelector));\n        if (swiper.isElement) (_elements = elements).push.apply(_elements, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(hostEl.querySelectorAll(elementsSelector)));\n        elements.forEach(function(parallaxEl) {\n            var parallaxDuration = parseInt(parallaxEl.getAttribute(\"data-swiper-parallax-duration\"), 10) || duration;\n            if (duration === 0) parallaxDuration = 0;\n            parallaxEl.style.transitionDuration = \"\".concat(parallaxDuration, \"ms\");\n        });\n    };\n    on(\"beforeInit\", function() {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n    });\n    on(\"init\", function() {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n    });\n    on(\"setTranslate\", function() {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n    });\n    on(\"setTransition\", function(_swiper, duration) {\n        if (!swiper.params.parallax.enabled) return;\n        setTransition(duration);\n    });\n}\n\n\n\n\n\n\nfunction $c74359a63d475fc9$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit;\n    var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    extendParams({\n        zoom: {\n            enabled: false,\n            maxRatio: 3,\n            minRatio: 1,\n            toggle: true,\n            containerClass: \"swiper-zoom-container\",\n            zoomedSlideClass: \"swiper-slide-zoomed\"\n        }\n    });\n    swiper.zoom = {\n        enabled: false\n    };\n    var currentScale = 1;\n    var isScaling = false;\n    var fakeGestureTouched;\n    var fakeGestureMoved;\n    var evCache = [];\n    var gesture = {\n        originX: 0,\n        originY: 0,\n        slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        imageEl: undefined,\n        imageWrapEl: undefined,\n        maxRatio: 3\n    };\n    var image = {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {}\n    };\n    var velocity = {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined\n    };\n    var scale = 1;\n    Object.defineProperty(swiper.zoom, \"scale\", {\n        get: function() {\n            return scale;\n        },\n        set: function(value) {\n            if (scale !== value) {\n                var imageEl = gesture.imageEl;\n                var slideEl = gesture.slideEl;\n                emit(\"zoomChange\", value, imageEl, slideEl);\n            }\n            scale = value;\n        }\n    });\n    function getDistanceBetweenTouches() {\n        if (evCache.length < 2) return 1;\n        var x1 = evCache[0].pageX;\n        var y1 = evCache[0].pageY;\n        var x2 = evCache[1].pageX;\n        var y2 = evCache[1].pageY;\n        var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        return distance;\n    }\n    function getScaleOrigin() {\n        if (evCache.length < 2) return {\n            x: null,\n            y: null\n        };\n        var box = gesture.imageEl.getBoundingClientRect();\n        return [\n            (evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x - window.scrollX) / currentScale,\n            (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y - window.scrollY) / currentScale\n        ];\n    }\n    function getSlideSelector() {\n        return swiper.isElement ? \"swiper-slide\" : \".\".concat(swiper.params.slideClass);\n    }\n    function eventWithinSlide(e) {\n        var slideSelector = getSlideSelector();\n        if (e.target.matches(slideSelector)) return true;\n        if (swiper.slides.filter(function(slideEl) {\n            return slideEl.contains(e.target);\n        }).length > 0) return true;\n        return false;\n    }\n    function eventWithinZoomContainer(e) {\n        var selector = \".\".concat(swiper.params.zoom.containerClass);\n        if (e.target.matches(selector)) return true;\n        if ((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(swiper.hostEl.querySelectorAll(selector)).filter(function(containerEl) {\n            return containerEl.contains(e.target);\n        }).length > 0) return true;\n        return false;\n    }\n    // Events\n    function onGestureStart(e) {\n        if (e.pointerType === \"mouse\") evCache.splice(0, evCache.length);\n        if (!eventWithinSlide(e)) return;\n        var params = swiper.params.zoom;\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n        evCache.push(e);\n        if (evCache.length < 2) return;\n        fakeGestureTouched = true;\n        gesture.scaleStart = getDistanceBetweenTouches();\n        if (!gesture.slideEl) {\n            gesture.slideEl = e.target.closest(\".\".concat(swiper.params.slideClass, \", swiper-slide\"));\n            if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n            var imageEl = gesture.slideEl.querySelector(\".\".concat(params.containerClass));\n            if (imageEl) imageEl = imageEl.querySelectorAll(\"picture, img, svg, canvas, .swiper-zoom-target\")[0];\n            gesture.imageEl = imageEl;\n            if (imageEl) gesture.imageWrapEl = (0, $d680807689e9ecb0$export$407448d2b89b1813)(gesture.imageEl, \".\".concat(params.containerClass))[0];\n            else gesture.imageWrapEl = undefined;\n            if (!gesture.imageWrapEl) {\n                gesture.imageEl = undefined;\n                return;\n            }\n            gesture.maxRatio = gesture.imageWrapEl.getAttribute(\"data-swiper-zoom\") || params.maxRatio;\n        }\n        if (gesture.imageEl) {\n            var _getScaleOrigin = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(getScaleOrigin(), 2), originX = _getScaleOrigin[0], originY = _getScaleOrigin[1];\n            gesture.originX = originX;\n            gesture.originY = originY;\n            gesture.imageEl.style.transitionDuration = \"0ms\";\n        }\n        isScaling = true;\n    }\n    function onGestureChange(e) {\n        if (!eventWithinSlide(e)) return;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var pointerIndex = evCache.findIndex(function(cachedEv) {\n            return cachedEv.pointerId === e.pointerId;\n        });\n        if (pointerIndex >= 0) evCache[pointerIndex] = e;\n        if (evCache.length < 2) return;\n        fakeGestureMoved = true;\n        gesture.scaleMove = getDistanceBetweenTouches();\n        if (!gesture.imageEl) return;\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n        if (zoom.scale > gesture.maxRatio) zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n        if (zoom.scale < params.minRatio) zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n        gesture.imageEl.style.transform = \"translate3d(0,0,0) scale(\".concat(zoom.scale, \")\");\n    }\n    function onGestureEnd(e) {\n        if (!eventWithinSlide(e)) return;\n        if (e.pointerType === \"mouse\" && e.type === \"pointerout\") return;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var pointerIndex = evCache.findIndex(function(cachedEv) {\n            return cachedEv.pointerId === e.pointerId;\n        });\n        if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n        if (!fakeGestureTouched || !fakeGestureMoved) return;\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n        if (!gesture.imageEl) return;\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.imageEl.style.transitionDuration = \"\".concat(swiper.params.speed, \"ms\");\n        gesture.imageEl.style.transform = \"translate3d(0,0,0) scale(\".concat(zoom.scale, \")\");\n        currentScale = zoom.scale;\n        isScaling = false;\n        if (zoom.scale > 1 && gesture.slideEl) gesture.slideEl.classList.add(\"\".concat(params.zoomedSlideClass));\n        else if (zoom.scale <= 1 && gesture.slideEl) gesture.slideEl.classList.remove(\"\".concat(params.zoomedSlideClass));\n        if (zoom.scale === 1) {\n            gesture.originX = 0;\n            gesture.originY = 0;\n            gesture.slideEl = undefined;\n        }\n    }\n    function onTouchStart(e) {\n        var device = swiper.device;\n        if (!gesture.imageEl) return;\n        if (image.isTouched) return;\n        if (device.android && e.cancelable) e.preventDefault();\n        image.isTouched = true;\n        var event = evCache.length > 0 ? evCache[0] : e;\n        image.touchesStart.x = event.pageX;\n        image.touchesStart.y = event.pageY;\n    }\n    function onTouchMove(e) {\n        if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n        var zoom = swiper.zoom;\n        if (!gesture.imageEl) return;\n        if (!image.isTouched || !gesture.slideEl) return;\n        if (!image.isMoved) {\n            image.width = gesture.imageEl.offsetWidth;\n            image.height = gesture.imageEl.offsetHeight;\n            image.startX = (0, $d680807689e9ecb0$export$23f2a1d2818174ef)(gesture.imageWrapEl, \"x\") || 0;\n            image.startY = (0, $d680807689e9ecb0$export$23f2a1d2818174ef)(gesture.imageWrapEl, \"y\") || 0;\n            gesture.slideWidth = gesture.slideEl.offsetWidth;\n            gesture.slideHeight = gesture.slideEl.offsetHeight;\n            gesture.imageWrapEl.style.transitionDuration = \"0ms\";\n        }\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n        image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n        var touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n        if (touchesDiff > 5) swiper.allowClick = false;\n        if (!image.isMoved && !isScaling) {\n            if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n                image.isTouched = false;\n                return;\n            }\n            if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n                image.isTouched = false;\n                return;\n            }\n        }\n        if (e.cancelable) e.preventDefault();\n        e.stopPropagation();\n        image.isMoved = true;\n        var scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n        var originX = gesture.originX, originY = gesture.originY;\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n        if (image.currentX < image.minX) image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n        if (image.currentX > image.maxX) image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n        if (image.currentY < image.minY) image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n        if (image.currentY > image.maxY) image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n        // Velocity\n        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n        if (!velocity.prevTime) velocity.prevTime = Date.now();\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.imageWrapEl.style.transform = \"translate3d(\".concat(image.currentX, \"px, \").concat(image.currentY, \"px,0)\");\n    }\n    function onTouchEnd() {\n        var zoom = swiper.zoom;\n        if (!gesture.imageEl) return;\n        if (!image.isTouched || !image.isMoved) {\n            image.isTouched = false;\n            image.isMoved = false;\n            return;\n        }\n        image.isTouched = false;\n        image.isMoved = false;\n        var momentumDurationX = 300;\n        var momentumDurationY = 300;\n        var momentumDistanceX = velocity.x * momentumDurationX;\n        var newPositionX = image.currentX + momentumDistanceX;\n        var momentumDistanceY = velocity.y * momentumDurationY;\n        var newPositionY = image.currentY + momentumDistanceY;\n        // Fix duration\n        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY;\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.imageWrapEl.style.transitionDuration = \"\".concat(momentumDuration, \"ms\");\n        gesture.imageWrapEl.style.transform = \"translate3d(\".concat(image.currentX, \"px, \").concat(image.currentY, \"px,0)\");\n    }\n    function onTransitionEnd() {\n        var zoom = swiper.zoom;\n        if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n            if (gesture.imageEl) gesture.imageEl.style.transform = \"translate3d(0,0,0) scale(1)\";\n            if (gesture.imageWrapEl) gesture.imageWrapEl.style.transform = \"translate3d(0,0,0)\";\n            gesture.slideEl.classList.remove(\"\".concat(swiper.params.zoom.zoomedSlideClass));\n            zoom.scale = 1;\n            currentScale = 1;\n            gesture.slideEl = undefined;\n            gesture.imageEl = undefined;\n            gesture.imageWrapEl = undefined;\n            gesture.originX = 0;\n            gesture.originY = 0;\n        }\n    }\n    function zoomIn(e) {\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        if (!gesture.slideEl) {\n            if (e && e.target) gesture.slideEl = e.target.closest(\".\".concat(swiper.params.slideClass, \", swiper-slide\"));\n            if (!gesture.slideEl) {\n                if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.slideEl = (0, $d680807689e9ecb0$export$f1e1789686576879)(swiper.slidesEl, \".\".concat(swiper.params.slideActiveClass))[0];\n                else gesture.slideEl = swiper.slides[swiper.activeIndex];\n            }\n            var imageEl = gesture.slideEl.querySelector(\".\".concat(params.containerClass));\n            if (imageEl) imageEl = imageEl.querySelectorAll(\"picture, img, svg, canvas, .swiper-zoom-target\")[0];\n            gesture.imageEl = imageEl;\n            if (imageEl) gesture.imageWrapEl = (0, $d680807689e9ecb0$export$407448d2b89b1813)(gesture.imageEl, \".\".concat(params.containerClass))[0];\n            else gesture.imageWrapEl = undefined;\n        }\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.style.overflow = \"hidden\";\n            swiper.wrapperEl.style.touchAction = \"none\";\n        }\n        gesture.slideEl.classList.add(\"\".concat(params.zoomedSlideClass));\n        var touchX;\n        var touchY;\n        var offsetX;\n        var offsetY;\n        var diffX;\n        var diffY;\n        var translateX;\n        var translateY;\n        var imageWidth;\n        var imageHeight;\n        var scaledWidth;\n        var scaledHeight;\n        var translateMinX;\n        var translateMinY;\n        var translateMaxX;\n        var translateMaxY;\n        var slideWidth;\n        var slideHeight;\n        if (typeof image.touchesStart.x === \"undefined\" && e) {\n            touchX = e.pageX;\n            touchY = e.pageY;\n        } else {\n            touchX = image.touchesStart.x;\n            touchY = image.touchesStart.y;\n        }\n        var forceZoomRatio = typeof e === \"number\" ? e : null;\n        if (currentScale === 1 && forceZoomRatio) {\n            touchX = undefined;\n            touchY = undefined;\n        }\n        zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute(\"data-swiper-zoom\") || params.maxRatio;\n        currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute(\"data-swiper-zoom\") || params.maxRatio;\n        if (e && !(currentScale === 1 && forceZoomRatio)) {\n            slideWidth = gesture.slideEl.offsetWidth;\n            slideHeight = gesture.slideEl.offsetHeight;\n            offsetX = (0, $d680807689e9ecb0$export$8b22cf2602fb60ce)(gesture.slideEl).left + window.scrollX;\n            offsetY = (0, $d680807689e9ecb0$export$8b22cf2602fb60ce)(gesture.slideEl).top + window.scrollY;\n            diffX = offsetX + slideWidth / 2 - touchX;\n            diffY = offsetY + slideHeight / 2 - touchY;\n            imageWidth = gesture.imageEl.offsetWidth;\n            imageHeight = gesture.imageEl.offsetHeight;\n            scaledWidth = imageWidth * zoom.scale;\n            scaledHeight = imageHeight * zoom.scale;\n            translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n            translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n            translateMaxX = -translateMinX;\n            translateMaxY = -translateMinY;\n            translateX = diffX * zoom.scale;\n            translateY = diffY * zoom.scale;\n            if (translateX < translateMinX) translateX = translateMinX;\n            if (translateX > translateMaxX) translateX = translateMaxX;\n            if (translateY < translateMinY) translateY = translateMinY;\n            if (translateY > translateMaxY) translateY = translateMaxY;\n        } else {\n            translateX = 0;\n            translateY = 0;\n        }\n        if (forceZoomRatio && zoom.scale === 1) {\n            gesture.originX = 0;\n            gesture.originY = 0;\n        }\n        gesture.imageWrapEl.style.transitionDuration = \"300ms\";\n        gesture.imageWrapEl.style.transform = \"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px,0)\");\n        gesture.imageEl.style.transitionDuration = \"300ms\";\n        gesture.imageEl.style.transform = \"translate3d(0,0,0) scale(\".concat(zoom.scale, \")\");\n    }\n    function zoomOut() {\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        if (!gesture.slideEl) {\n            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.slideEl = (0, $d680807689e9ecb0$export$f1e1789686576879)(swiper.slidesEl, \".\".concat(swiper.params.slideActiveClass))[0];\n            else gesture.slideEl = swiper.slides[swiper.activeIndex];\n            var imageEl = gesture.slideEl.querySelector(\".\".concat(params.containerClass));\n            if (imageEl) imageEl = imageEl.querySelectorAll(\"picture, img, svg, canvas, .swiper-zoom-target\")[0];\n            gesture.imageEl = imageEl;\n            if (imageEl) gesture.imageWrapEl = (0, $d680807689e9ecb0$export$407448d2b89b1813)(gesture.imageEl, \".\".concat(params.containerClass))[0];\n            else gesture.imageWrapEl = undefined;\n        }\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.style.overflow = \"\";\n            swiper.wrapperEl.style.touchAction = \"\";\n        }\n        zoom.scale = 1;\n        currentScale = 1;\n        gesture.imageWrapEl.style.transitionDuration = \"300ms\";\n        gesture.imageWrapEl.style.transform = \"translate3d(0,0,0)\";\n        gesture.imageEl.style.transitionDuration = \"300ms\";\n        gesture.imageEl.style.transform = \"translate3d(0,0,0) scale(1)\";\n        gesture.slideEl.classList.remove(\"\".concat(params.zoomedSlideClass));\n        gesture.slideEl = undefined;\n        gesture.originX = 0;\n        gesture.originY = 0;\n    }\n    // Toggle Zoom\n    function zoomToggle(e) {\n        var zoom = swiper.zoom;\n        if (zoom.scale && zoom.scale !== 1) // Zoom Out\n        zoomOut();\n        else // Zoom In\n        zoomIn(e);\n    }\n    function getListeners() {\n        var passiveListener = swiper.params.passiveListeners ? {\n            passive: true,\n            capture: false\n        } : false;\n        var activeListenerWithCapture = swiper.params.passiveListeners ? {\n            passive: false,\n            capture: true\n        } : true;\n        return {\n            passiveListener: passiveListener,\n            activeListenerWithCapture: activeListenerWithCapture\n        };\n    }\n    // Attach/Detach Events\n    function enable() {\n        var zoom = swiper.zoom;\n        if (zoom.enabled) return;\n        zoom.enabled = true;\n        var _getListeners = getListeners(), passiveListener = _getListeners.passiveListener, activeListenerWithCapture = _getListeners.activeListenerWithCapture;\n        // Scale image\n        swiper.wrapperEl.addEventListener(\"pointerdown\", onGestureStart, passiveListener);\n        swiper.wrapperEl.addEventListener(\"pointermove\", onGestureChange, activeListenerWithCapture);\n        [\n            \"pointerup\",\n            \"pointercancel\",\n            \"pointerout\"\n        ].forEach(function(eventName) {\n            swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n        });\n        // Move image\n        swiper.wrapperEl.addEventListener(\"pointermove\", onTouchMove, activeListenerWithCapture);\n    }\n    function disable() {\n        var zoom = swiper.zoom;\n        if (!zoom.enabled) return;\n        zoom.enabled = false;\n        var _getListeners = getListeners(), passiveListener = _getListeners.passiveListener, activeListenerWithCapture = _getListeners.activeListenerWithCapture;\n        // Scale image\n        swiper.wrapperEl.removeEventListener(\"pointerdown\", onGestureStart, passiveListener);\n        swiper.wrapperEl.removeEventListener(\"pointermove\", onGestureChange, activeListenerWithCapture);\n        [\n            \"pointerup\",\n            \"pointercancel\",\n            \"pointerout\"\n        ].forEach(function(eventName) {\n            swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n        });\n        // Move image\n        swiper.wrapperEl.removeEventListener(\"pointermove\", onTouchMove, activeListenerWithCapture);\n    }\n    on(\"init\", function() {\n        if (swiper.params.zoom.enabled) enable();\n    });\n    on(\"destroy\", function() {\n        disable();\n    });\n    on(\"touchStart\", function(_s, e) {\n        if (!swiper.zoom.enabled) return;\n        onTouchStart(e);\n    });\n    on(\"touchEnd\", function(_s, e) {\n        if (!swiper.zoom.enabled) return;\n        onTouchEnd();\n    });\n    on(\"doubleTap\", function(_s, e) {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) zoomToggle(e);\n    });\n    on(\"transitionEnd\", function() {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) onTransitionEnd();\n    });\n    on(\"slideChange\", function() {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) onTransitionEnd();\n    });\n    Object.assign(swiper.zoom, {\n        enable: enable,\n        disable: disable,\n        in: zoomIn,\n        out: zoomOut,\n        toggle: zoomToggle\n    });\n}\n\n\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */ function $e7c3dc25393dbeaa$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        controller: {\n            control: undefined,\n            inverse: false,\n            by: \"slide\" // or 'container'\n        }\n    });\n    swiper.controller = {\n        control: undefined\n    };\n    function LinearSpline(x, y) {\n        var binarySearch = function search() {\n            var maxIndex;\n            var minIndex;\n            var guess;\n            return function(array, val) {\n                minIndex = -1;\n                maxIndex = array.length;\n                while(maxIndex - minIndex > 1){\n                    guess = maxIndex + minIndex >> 1;\n                    if (array[guess] <= val) minIndex = guess;\n                    else maxIndex = guess;\n                }\n                return maxIndex;\n            };\n        }();\n        this.x = x;\n        this.y = y;\n        this.lastIndex = x.length - 1;\n        // Given an x value (x2), return the expected y2 value:\n        // (x1,y1) is the known point before given value,\n        // (x3,y3) is the known point after given value.\n        var i1;\n        var i3;\n        this.interpolate = function interpolate(x2) {\n            if (!x2) return 0;\n            // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n            i3 = binarySearch(this.x, x2);\n            i1 = i3 - 1;\n            // We have our indexes i1 & i3, so we can calculate already:\n            // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n            return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n        };\n        return this;\n    }\n    function getInterpolateFunction(c) {\n        swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n    function setTranslate(_t, byController) {\n        var controlled = swiper.controller.control;\n        var multiplier;\n        var controlledTranslate;\n        var Swiper = swiper.constructor;\n        function setControlledTranslate(c) {\n            if (c.destroyed) return;\n            // this will create an Interpolate function based on the snapGrids\n            // x is the Grid of the scrolled scroller and y will be the controlled scroller\n            // it makes sense to create this only once and recall it for the interpolation\n            // the function does a lot of value caching for performance\n            var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n            if (swiper.params.controller.by === \"slide\") {\n                getInterpolateFunction(c);\n                // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n                // but it did not work out\n                controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n            }\n            if (!controlledTranslate || swiper.params.controller.by === \"container\") {\n                multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n                if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) multiplier = 1;\n                controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n            }\n            if (swiper.params.controller.inverse) controlledTranslate = c.maxTranslate() - controlledTranslate;\n            c.updateProgress(controlledTranslate);\n            c.setTranslate(controlledTranslate, swiper);\n            c.updateActiveIndex();\n            c.updateSlidesClasses();\n        }\n        if (Array.isArray(controlled)) {\n            for(var i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTranslate(controlled[i]);\n        } else if (controlled instanceof Swiper && byController !== controlled) setControlledTranslate(controlled);\n    }\n    function setTransition(duration, byController) {\n        var Swiper = swiper.constructor;\n        var controlled = swiper.controller.control;\n        var i;\n        function setControlledTransition(c) {\n            if (c.destroyed) return;\n            c.setTransition(duration, swiper);\n            if (duration !== 0) {\n                c.transitionStart();\n                if (c.params.autoHeight) (0, $d680807689e9ecb0$export$7ccc53e8f1e7dfc5)(function() {\n                    c.updateAutoHeight();\n                });\n                (0, $d680807689e9ecb0$export$35e795649ee09318)(c.wrapperEl, function() {\n                    if (!controlled) return;\n                    c.transitionEnd();\n                });\n            }\n        }\n        if (Array.isArray(controlled)) {\n            for(i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTransition(controlled[i]);\n        } else if (controlled instanceof Swiper && byController !== controlled) setControlledTransition(controlled);\n    }\n    function removeSpline() {\n        if (!swiper.controller.control) return;\n        if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n        }\n    }\n    on(\"beforeInit\", function() {\n        if (typeof window !== \"undefined\" && // eslint-disable-line\n        (typeof swiper.params.controller.control === \"string\" || swiper.params.controller.control instanceof HTMLElement)) {\n            var controlElement = document.querySelector(swiper.params.controller.control);\n            if (controlElement && controlElement.swiper) swiper.controller.control = controlElement.swiper;\n            else if (controlElement) {\n                var onControllerSwiper = function(e) {\n                    swiper.controller.control = e.detail[0];\n                    swiper.update();\n                    controlElement.removeEventListener(\"init\", onControllerSwiper);\n                };\n                controlElement.addEventListener(\"init\", onControllerSwiper);\n            }\n            return;\n        }\n        swiper.controller.control = swiper.params.controller.control;\n    });\n    on(\"update\", function() {\n        removeSpline();\n    });\n    on(\"resize\", function() {\n        removeSpline();\n    });\n    on(\"observerUpdate\", function() {\n        removeSpline();\n    });\n    on(\"setTranslate\", function(_s, translate, byController) {\n        if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n        swiper.controller.setTranslate(translate, byController);\n    });\n    on(\"setTransition\", function(_s, duration, byController) {\n        if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n        swiper.controller.setTransition(duration, byController);\n    });\n    Object.assign(swiper.controller, {\n        setTranslate: setTranslate,\n        setTransition: setTransition\n    });\n}\n\n\n\n\nfunction $5dd0702223046915$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        a11y: {\n            enabled: true,\n            notificationClass: \"swiper-notification\",\n            prevSlideMessage: \"Previous slide\",\n            nextSlideMessage: \"Next slide\",\n            firstSlideMessage: \"This is the first slide\",\n            lastSlideMessage: \"This is the last slide\",\n            paginationBulletMessage: \"Go to slide {{index}}\",\n            slideLabelMessage: \"{{index}} / {{slidesLength}}\",\n            containerMessage: null,\n            containerRoleDescriptionMessage: null,\n            itemRoleDescriptionMessage: null,\n            slideRole: \"group\",\n            id: null\n        }\n    });\n    swiper.a11y = {\n        clicked: false\n    };\n    var liveRegion = null;\n    function notify(message) {\n        var notification = liveRegion;\n        if (notification.length === 0) return;\n        notification.innerHTML = \"\";\n        notification.innerHTML = message;\n    }\n    function getRandomNumber(size) {\n        if (size === void 0) size = 16;\n        var randomChar = function() {\n            return Math.round(16 * Math.random()).toString(16);\n        };\n        return \"x\".repeat(size).replace(/x/g, randomChar);\n    }\n    function makeElFocusable(el) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"tabIndex\", \"0\");\n        });\n    }\n    function makeElNotFocusable(el) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"tabIndex\", \"-1\");\n        });\n    }\n    function addElRole(el, role) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"role\", role);\n        });\n    }\n    function addElRoleDescription(el, description) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"aria-roledescription\", description);\n        });\n    }\n    function addElControls(el, controls) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"aria-controls\", controls);\n        });\n    }\n    function addElLabel(el, label) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"aria-label\", label);\n        });\n    }\n    function addElId(el, id) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"id\", id);\n        });\n    }\n    function addElLive(el, live) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"aria-live\", live);\n        });\n    }\n    function disableEl(el) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"aria-disabled\", true);\n        });\n    }\n    function enableEl(el) {\n        el = (0, $d680807689e9ecb0$export$953cecd6e717a553)(el);\n        el.forEach(function(subEl) {\n            subEl.setAttribute(\"aria-disabled\", false);\n        });\n    }\n    function onEnterOrSpaceKey(e) {\n        if (e.keyCode !== 13 && e.keyCode !== 32) return;\n        var params = swiper.params.a11y;\n        var targetEl = e.target;\n        if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n            if (!e.target.matches((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(swiper.params.pagination.bulletClass))) return;\n        }\n        if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n            if (!(swiper.isEnd && !swiper.params.loop)) swiper.slideNext();\n            if (swiper.isEnd) notify(params.lastSlideMessage);\n            else notify(params.nextSlideMessage);\n        }\n        if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n            if (!(swiper.isBeginning && !swiper.params.loop)) swiper.slidePrev();\n            if (swiper.isBeginning) notify(params.firstSlideMessage);\n            else notify(params.prevSlideMessage);\n        }\n        if (swiper.pagination && targetEl.matches((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(swiper.params.pagination.bulletClass))) targetEl.click();\n    }\n    function updateNavigation() {\n        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n        var _swiper_navigation = swiper.navigation, nextEl = _swiper_navigation.nextEl, prevEl = _swiper_navigation.prevEl;\n        if (prevEl) {\n            if (swiper.isBeginning) {\n                disableEl(prevEl);\n                makeElNotFocusable(prevEl);\n            } else {\n                enableEl(prevEl);\n                makeElFocusable(prevEl);\n            }\n        }\n        if (nextEl) {\n            if (swiper.isEnd) {\n                disableEl(nextEl);\n                makeElNotFocusable(nextEl);\n            } else {\n                enableEl(nextEl);\n                makeElFocusable(nextEl);\n            }\n        }\n    }\n    function hasPagination() {\n        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n    }\n    function hasClickablePagination() {\n        return hasPagination() && swiper.params.pagination.clickable;\n    }\n    function updatePagination() {\n        var params = swiper.params.a11y;\n        if (!hasPagination()) return;\n        swiper.pagination.bullets.forEach(function(bulletEl) {\n            if (swiper.params.pagination.clickable) {\n                makeElFocusable(bulletEl);\n                if (!swiper.params.pagination.renderBullet) {\n                    addElRole(bulletEl, \"button\");\n                    addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, (0, $d680807689e9ecb0$export$39b482c5e57630a8)(bulletEl) + 1));\n                }\n            }\n            if (bulletEl.matches((0, $cd860e38c4fd3577$export$db3b6bfb95261072)(swiper.params.pagination.bulletActiveClass))) bulletEl.setAttribute(\"aria-current\", \"true\");\n            else bulletEl.removeAttribute(\"aria-current\");\n        });\n    }\n    var initNavEl = function(el, wrapperId, message) {\n        makeElFocusable(el);\n        if (el.tagName !== \"BUTTON\") {\n            addElRole(el, \"button\");\n            el.addEventListener(\"keydown\", onEnterOrSpaceKey);\n        }\n        addElLabel(el, message);\n        addElControls(el, wrapperId);\n    };\n    var handlePointerDown = function() {\n        swiper.a11y.clicked = true;\n    };\n    var handlePointerUp = function() {\n        requestAnimationFrame(function() {\n            requestAnimationFrame(function() {\n                if (!swiper.destroyed) swiper.a11y.clicked = false;\n            });\n        });\n    };\n    var handleFocus = function(e) {\n        if (swiper.a11y.clicked) return;\n        var slideEl = e.target.closest(\".\".concat(swiper.params.slideClass, \", swiper-slide\"));\n        if (!slideEl || !swiper.slides.includes(slideEl)) return;\n        var isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n        var isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n        if (isActive || isVisible) return;\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n        if (swiper.isHorizontal()) swiper.el.scrollLeft = 0;\n        else swiper.el.scrollTop = 0;\n        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n    };\n    var initSlides = function() {\n        var params = swiper.params.a11y;\n        if (params.itemRoleDescriptionMessage) addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n        if (params.slideRole) addElRole(swiper.slides, params.slideRole);\n        var slidesLength = swiper.slides.length;\n        if (params.slideLabelMessage) swiper.slides.forEach(function(slideEl, index) {\n            var slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute(\"data-swiper-slide-index\"), 10) : index;\n            var ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n            addElLabel(slideEl, ariaLabelMessage);\n        });\n    };\n    var init = function() {\n        var params = swiper.params.a11y;\n        swiper.el.append(liveRegion);\n        // Container\n        var containerEl = swiper.el;\n        if (params.containerRoleDescriptionMessage) addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n        if (params.containerMessage) addElLabel(containerEl, params.containerMessage);\n        // Wrapper\n        var wrapperEl = swiper.wrapperEl;\n        var wrapperId = params.id || wrapperEl.getAttribute(\"id\") || \"swiper-wrapper-\".concat(getRandomNumber(16));\n        var live = swiper.params.autoplay && swiper.params.autoplay.enabled ? \"off\" : \"polite\";\n        addElId(wrapperEl, wrapperId);\n        addElLive(wrapperEl, live);\n        // Slide\n        initSlides();\n        // Navigation\n        var _$_ref = swiper.navigation ? swiper.navigation : {}, nextEl = _$_ref.nextEl, prevEl = _$_ref.prevEl;\n        nextEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(nextEl);\n        prevEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(prevEl);\n        if (nextEl) nextEl.forEach(function(el) {\n            return initNavEl(el, wrapperId, params.nextSlideMessage);\n        });\n        if (prevEl) prevEl.forEach(function(el) {\n            return initNavEl(el, wrapperId, params.prevSlideMessage);\n        });\n        // Pagination\n        if (hasClickablePagination()) {\n            var paginationEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(swiper.pagination.el);\n            paginationEl.forEach(function(el) {\n                el.addEventListener(\"keydown\", onEnterOrSpaceKey);\n            });\n        }\n        // Tab focus\n        swiper.el.addEventListener(\"focus\", handleFocus, true);\n        swiper.el.addEventListener(\"pointerdown\", handlePointerDown, true);\n        swiper.el.addEventListener(\"pointerup\", handlePointerUp, true);\n    };\n    function destroy() {\n        if (liveRegion) liveRegion.remove();\n        var _$_ref = swiper.navigation ? swiper.navigation : {}, nextEl = _$_ref.nextEl, prevEl = _$_ref.prevEl;\n        nextEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(nextEl);\n        prevEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(prevEl);\n        if (nextEl) nextEl.forEach(function(el) {\n            return el.removeEventListener(\"keydown\", onEnterOrSpaceKey);\n        });\n        if (prevEl) prevEl.forEach(function(el) {\n            return el.removeEventListener(\"keydown\", onEnterOrSpaceKey);\n        });\n        // Pagination\n        if (hasClickablePagination()) {\n            var paginationEl = (0, $d680807689e9ecb0$export$953cecd6e717a553)(swiper.pagination.el);\n            paginationEl.forEach(function(el) {\n                el.removeEventListener(\"keydown\", onEnterOrSpaceKey);\n            });\n        }\n        // Tab focus\n        swiper.el.removeEventListener(\"focus\", handleFocus, true);\n        swiper.el.removeEventListener(\"pointerdown\", handlePointerDown, true);\n        swiper.el.removeEventListener(\"pointerup\", handlePointerUp, true);\n    }\n    on(\"beforeInit\", function() {\n        liveRegion = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"span\", swiper.params.a11y.notificationClass);\n        liveRegion.setAttribute(\"aria-live\", \"assertive\");\n        liveRegion.setAttribute(\"aria-atomic\", \"true\");\n    });\n    on(\"afterInit\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        init();\n    });\n    on(\"slidesLengthChange snapGridLengthChange slidesGridLengthChange\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        initSlides();\n    });\n    on(\"fromEdge toEdge afterInit lock unlock\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        updateNavigation();\n    });\n    on(\"paginationUpdate\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        updatePagination();\n    });\n    on(\"destroy\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        destroy();\n    });\n}\n\n\n\nfunction $d156550bacc5941a$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        history: {\n            enabled: false,\n            root: \"\",\n            replaceState: false,\n            key: \"slides\",\n            keepQuery: false\n        }\n    });\n    var initialized = false;\n    var paths = {};\n    var slugify = function(text) {\n        return text.toString().replace(/\\s+/g, \"-\").replace(/[^\\w-]+/g, \"\").replace(/--+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n    };\n    var getPathValues = function(urlOverride) {\n        var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n        var location;\n        if (urlOverride) location = new URL(urlOverride);\n        else location = window.location;\n        var pathArray = location.pathname.slice(1).split(\"/\").filter(function(part) {\n            return part !== \"\";\n        });\n        var total = pathArray.length;\n        var key = pathArray[total - 2];\n        var value = pathArray[total - 1];\n        return {\n            key: key,\n            value: value\n        };\n    };\n    var setHistory = function(key, index) {\n        var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n        if (!initialized || !swiper.params.history.enabled) return;\n        var location;\n        if (swiper.params.url) location = new URL(swiper.params.url);\n        else location = window.location;\n        var slide = swiper.slides[index];\n        var value = slugify(slide.getAttribute(\"data-history\"));\n        if (swiper.params.history.root.length > 0) {\n            var root = swiper.params.history.root;\n            if (root[root.length - 1] === \"/\") root = root.slice(0, root.length - 1);\n            value = \"\".concat(root, \"/\").concat(key ? \"\".concat(key, \"/\") : \"\").concat(value);\n        } else if (!location.pathname.includes(key)) value = \"\".concat(key ? \"\".concat(key, \"/\") : \"\").concat(value);\n        if (swiper.params.history.keepQuery) value += location.search;\n        var currentState = window.history.state;\n        if (currentState && currentState.value === value) return;\n        if (swiper.params.history.replaceState) window.history.replaceState({\n            value: value\n        }, null, value);\n        else window.history.pushState({\n            value: value\n        }, null, value);\n    };\n    var scrollToSlide = function(speed, value, runCallbacks) {\n        if (value) for(var i = 0, length = swiper.slides.length; i < length; i += 1){\n            var slide = swiper.slides[i];\n            var slideHistory = slugify(slide.getAttribute(\"data-history\"));\n            if (slideHistory === value) {\n                var index = swiper.getSlideIndex(slide);\n                swiper.slideTo(index, speed, runCallbacks);\n            }\n        }\n        else swiper.slideTo(0, speed, runCallbacks);\n    };\n    var setHistoryPopState = function() {\n        paths = getPathValues(swiper.params.url);\n        scrollToSlide(swiper.params.speed, paths.value, false);\n    };\n    var init = function() {\n        var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n        if (!swiper.params.history) return;\n        if (!window.history || !window.history.pushState) {\n            swiper.params.history.enabled = false;\n            swiper.params.hashNavigation.enabled = true;\n            return;\n        }\n        initialized = true;\n        paths = getPathValues(swiper.params.url);\n        if (!paths.key && !paths.value) {\n            if (!swiper.params.history.replaceState) window.addEventListener(\"popstate\", setHistoryPopState);\n            return;\n        }\n        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n        if (!swiper.params.history.replaceState) window.addEventListener(\"popstate\", setHistoryPopState);\n    };\n    var destroy = function() {\n        var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n        if (!swiper.params.history.replaceState) window.removeEventListener(\"popstate\", setHistoryPopState);\n    };\n    on(\"init\", function() {\n        if (swiper.params.history.enabled) init();\n    });\n    on(\"destroy\", function() {\n        if (swiper.params.history.enabled) destroy();\n    });\n    on(\"transitionEnd _freeModeNoMomentumRelease\", function() {\n        if (initialized) setHistory(swiper.params.history.key, swiper.activeIndex);\n    });\n    on(\"slideChange\", function() {\n        if (initialized && swiper.params.cssMode) setHistory(swiper.params.history.key, swiper.activeIndex);\n    });\n}\n\n\n\n\nfunction $5e80150a8572b296$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, emit = _ref.emit, on = _ref.on;\n    var initialized = false;\n    var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n    var window = (0, $0c3479cf5570869b$export$407448d2b89b1813)();\n    extendParams({\n        hashNavigation: {\n            enabled: false,\n            replaceState: false,\n            watchState: false,\n            getSlideIndex: function(_s, hash) {\n                if (swiper.virtual && swiper.params.virtual.enabled) {\n                    var slideWithHash = swiper.slides.filter(function(slideEl) {\n                        return slideEl.getAttribute(\"data-hash\") === hash;\n                    })[0];\n                    if (!slideWithHash) return 0;\n                    var index = parseInt(slideWithHash.getAttribute(\"data-swiper-slide-index\"), 10);\n                    return index;\n                }\n                return swiper.getSlideIndex((0, $d680807689e9ecb0$export$f1e1789686576879)(swiper.slidesEl, \".\".concat(swiper.params.slideClass, '[data-hash=\"').concat(hash, '\"], swiper-slide[data-hash=\"').concat(hash, '\"]'))[0]);\n            }\n        }\n    });\n    var onHashChange = function() {\n        emit(\"hashChange\");\n        var newHash = document.location.hash.replace(\"#\", \"\");\n        var activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector('[data-swiper-slide-index=\"'.concat(swiper.activeIndex, '\"]')) : swiper.slides[swiper.activeIndex];\n        var activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute(\"data-hash\") : \"\";\n        if (newHash !== activeSlideHash) {\n            var newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n            if (typeof newIndex === \"undefined\" || Number.isNaN(newIndex)) return;\n            swiper.slideTo(newIndex);\n        }\n    };\n    var setHash = function() {\n        if (!initialized || !swiper.params.hashNavigation.enabled) return;\n        var activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector('[data-swiper-slide-index=\"'.concat(swiper.activeIndex, '\"]')) : swiper.slides[swiper.activeIndex];\n        var activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute(\"data-hash\") || activeSlideEl.getAttribute(\"data-history\") : \"\";\n        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n            window.history.replaceState(null, null, \"#\".concat(activeSlideHash) || \"\");\n            emit(\"hashSet\");\n        } else {\n            document.location.hash = activeSlideHash || \"\";\n            emit(\"hashSet\");\n        }\n    };\n    var init = function() {\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n        initialized = true;\n        var hash = document.location.hash.replace(\"#\", \"\");\n        if (hash) {\n            var speed = 0;\n            var index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n            swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n        }\n        if (swiper.params.hashNavigation.watchState) window.addEventListener(\"hashchange\", onHashChange);\n    };\n    var destroy = function() {\n        if (swiper.params.hashNavigation.watchState) window.removeEventListener(\"hashchange\", onHashChange);\n    };\n    on(\"init\", function() {\n        if (swiper.params.hashNavigation.enabled) init();\n    });\n    on(\"destroy\", function() {\n        if (swiper.params.hashNavigation.enabled) destroy();\n    });\n    on(\"transitionEnd _freeModeNoMomentumRelease\", function() {\n        if (initialized) setHash();\n    });\n    on(\"slideChange\", function() {\n        if (initialized && swiper.params.cssMode) setHash();\n    });\n}\n\n\n\n/* eslint no-underscore-dangle: \"off\" */ /* eslint no-use-before-define: \"off\" */ function $85231964b95bb7ea$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on, emit = _ref.emit, params = _ref.params;\n    swiper.autoplay = {\n        running: false,\n        paused: false,\n        timeLeft: 0\n    };\n    extendParams({\n        autoplay: {\n            enabled: false,\n            delay: 3000,\n            waitForTransition: true,\n            disableOnInteraction: false,\n            stopOnLastSlide: false,\n            reverseDirection: false,\n            pauseOnMouseEnter: false\n        }\n    });\n    var timeout;\n    var raf;\n    var autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n    var autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n    var autoplayTimeLeft;\n    var autoplayStartTime = new Date().getTime();\n    var wasPaused;\n    var isTouched;\n    var pausedByTouch;\n    var touchStartTimeout;\n    var slideChanged;\n    var pausedByInteraction;\n    var pausedByPointerEnter;\n    function onTransitionEnd(e) {\n        if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n        if (e.target !== swiper.wrapperEl) return;\n        swiper.wrapperEl.removeEventListener(\"transitionend\", onTransitionEnd);\n        if (pausedByPointerEnter) return;\n        resume();\n    }\n    var calcTimeLeft = function() {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (swiper.autoplay.paused) wasPaused = true;\n        else if (wasPaused) {\n            autoplayDelayCurrent = autoplayTimeLeft;\n            wasPaused = false;\n        }\n        var timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n        swiper.autoplay.timeLeft = timeLeft;\n        emit(\"autoplayTimeLeft\", timeLeft, timeLeft / autoplayDelayTotal);\n        raf = requestAnimationFrame(function() {\n            calcTimeLeft();\n        });\n    };\n    var getSlideDelay = function() {\n        var activeSlideEl;\n        if (swiper.virtual && swiper.params.virtual.enabled) activeSlideEl = swiper.slides.filter(function(slideEl) {\n            return slideEl.classList.contains(\"swiper-slide-active\");\n        })[0];\n        else activeSlideEl = swiper.slides[swiper.activeIndex];\n        if (!activeSlideEl) return undefined;\n        var currentSlideDelay = parseInt(activeSlideEl.getAttribute(\"data-swiper-autoplay\"), 10);\n        return currentSlideDelay;\n    };\n    var run = function(delayForce) {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        cancelAnimationFrame(raf);\n        calcTimeLeft();\n        var delay = typeof delayForce === \"undefined\" ? swiper.params.autoplay.delay : delayForce;\n        autoplayDelayTotal = swiper.params.autoplay.delay;\n        autoplayDelayCurrent = swiper.params.autoplay.delay;\n        var currentSlideDelay = getSlideDelay();\n        if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === \"undefined\") {\n            delay = currentSlideDelay;\n            autoplayDelayTotal = currentSlideDelay;\n            autoplayDelayCurrent = currentSlideDelay;\n        }\n        autoplayTimeLeft = delay;\n        var speed = swiper.params.speed;\n        var proceed = function() {\n            if (!swiper || swiper.destroyed) return;\n            if (swiper.params.autoplay.reverseDirection) {\n                if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n                    swiper.slidePrev(speed, true, true);\n                    emit(\"autoplay\");\n                } else if (!swiper.params.autoplay.stopOnLastSlide) {\n                    swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n                    emit(\"autoplay\");\n                }\n            } else {\n                if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n                    swiper.slideNext(speed, true, true);\n                    emit(\"autoplay\");\n                } else if (!swiper.params.autoplay.stopOnLastSlide) {\n                    swiper.slideTo(0, speed, true, true);\n                    emit(\"autoplay\");\n                }\n            }\n            if (swiper.params.cssMode) {\n                autoplayStartTime = new Date().getTime();\n                requestAnimationFrame(function() {\n                    run();\n                });\n            }\n        };\n        if (delay > 0) {\n            clearTimeout(timeout);\n            timeout = setTimeout(function() {\n                proceed();\n            }, delay);\n        } else requestAnimationFrame(function() {\n            proceed();\n        });\n        // eslint-disable-next-line\n        return delay;\n    };\n    var start = function() {\n        autoplayStartTime = new Date().getTime();\n        swiper.autoplay.running = true;\n        run();\n        emit(\"autoplayStart\");\n    };\n    var stop = function() {\n        swiper.autoplay.running = false;\n        clearTimeout(timeout);\n        cancelAnimationFrame(raf);\n        emit(\"autoplayStop\");\n    };\n    var pause = function(internal, reset) {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        clearTimeout(timeout);\n        if (!internal) pausedByInteraction = true;\n        var proceed = function() {\n            emit(\"autoplayPause\");\n            if (swiper.params.autoplay.waitForTransition) swiper.wrapperEl.addEventListener(\"transitionend\", onTransitionEnd);\n            else resume();\n        };\n        swiper.autoplay.paused = true;\n        if (reset) {\n            if (slideChanged) autoplayTimeLeft = swiper.params.autoplay.delay;\n            slideChanged = false;\n            proceed();\n            return;\n        }\n        var delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n        autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n        if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n        proceed();\n    };\n    var resume = function() {\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n        autoplayStartTime = new Date().getTime();\n        if (pausedByInteraction) {\n            pausedByInteraction = false;\n            run(autoplayTimeLeft);\n        } else run();\n        swiper.autoplay.paused = false;\n        emit(\"autoplayResume\");\n    };\n    var onVisibilityChange = function() {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n        if (document.visibilityState === \"hidden\") {\n            pausedByInteraction = true;\n            pause(true);\n        }\n        if (document.visibilityState === \"visible\") resume();\n    };\n    var onPointerEnter = function(e) {\n        if (e.pointerType !== \"mouse\") return;\n        pausedByInteraction = true;\n        pausedByPointerEnter = true;\n        if (swiper.animating || swiper.autoplay.paused) return;\n        pause(true);\n    };\n    var onPointerLeave = function(e) {\n        if (e.pointerType !== \"mouse\") return;\n        pausedByPointerEnter = false;\n        if (swiper.autoplay.paused) resume();\n    };\n    var attachMouseEvents = function() {\n        if (swiper.params.autoplay.pauseOnMouseEnter) {\n            swiper.el.addEventListener(\"pointerenter\", onPointerEnter);\n            swiper.el.addEventListener(\"pointerleave\", onPointerLeave);\n        }\n    };\n    var detachMouseEvents = function() {\n        swiper.el.removeEventListener(\"pointerenter\", onPointerEnter);\n        swiper.el.removeEventListener(\"pointerleave\", onPointerLeave);\n    };\n    var attachDocumentEvents = function() {\n        var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n        document.addEventListener(\"visibilitychange\", onVisibilityChange);\n    };\n    var detachDocumentEvents = function() {\n        var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n        document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n    };\n    on(\"init\", function() {\n        if (swiper.params.autoplay.enabled) {\n            attachMouseEvents();\n            attachDocumentEvents();\n            start();\n        }\n    });\n    on(\"destroy\", function() {\n        detachMouseEvents();\n        detachDocumentEvents();\n        if (swiper.autoplay.running) stop();\n    });\n    on(\"_freeModeStaticRelease\", function() {\n        if (pausedByTouch || pausedByInteraction) resume();\n    });\n    on(\"_freeModeNoMomentumRelease\", function() {\n        if (!swiper.params.autoplay.disableOnInteraction) pause(true, true);\n        else stop();\n    });\n    on(\"beforeTransitionStart\", function(_s, speed, internal) {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (internal || !swiper.params.autoplay.disableOnInteraction) pause(true, true);\n        else stop();\n    });\n    on(\"sliderFirstMove\", function() {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (swiper.params.autoplay.disableOnInteraction) {\n            stop();\n            return;\n        }\n        isTouched = true;\n        pausedByTouch = false;\n        pausedByInteraction = false;\n        touchStartTimeout = setTimeout(function() {\n            pausedByInteraction = true;\n            pausedByTouch = true;\n            pause(true);\n        }, 200);\n    });\n    on(\"touchEnd\", function() {\n        if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n        clearTimeout(touchStartTimeout);\n        clearTimeout(timeout);\n        if (swiper.params.autoplay.disableOnInteraction) {\n            pausedByTouch = false;\n            isTouched = false;\n            return;\n        }\n        if (pausedByTouch && swiper.params.cssMode) resume();\n        pausedByTouch = false;\n        isTouched = false;\n    });\n    on(\"slideChange\", function() {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        slideChanged = true;\n    });\n    Object.assign(swiper.autoplay, {\n        start: start,\n        stop: stop,\n        pause: pause,\n        resume: resume\n    });\n}\n\n\n\n\nfunction $cec0484f4e25b1cc$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        thumbs: {\n            swiper: null,\n            multipleActiveThumbs: true,\n            autoScrollOffset: 0,\n            slideThumbActiveClass: \"swiper-slide-thumb-active\",\n            thumbsContainerClass: \"swiper-thumbs\"\n        }\n    });\n    var initialized = false;\n    var swiperCreated = false;\n    swiper.thumbs = {\n        swiper: null\n    };\n    function onThumbClick() {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        var clickedIndex = thumbsSwiper.clickedIndex;\n        var clickedSlide = thumbsSwiper.clickedSlide;\n        if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n        if (typeof clickedIndex === \"undefined\" || clickedIndex === null) return;\n        var slideToIndex;\n        if (thumbsSwiper.params.loop) slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute(\"data-swiper-slide-index\"), 10);\n        else slideToIndex = clickedIndex;\n        if (swiper.params.loop) swiper.slideToLoop(slideToIndex);\n        else swiper.slideTo(slideToIndex);\n    }\n    function init() {\n        var _swiper_params = swiper.params, thumbsParams = _swiper_params.thumbs;\n        if (initialized) return false;\n        initialized = true;\n        var SwiperClass = swiper.constructor;\n        if (thumbsParams.swiper instanceof SwiperClass) {\n            swiper.thumbs.swiper = thumbsParams.swiper;\n            Object.assign(swiper.thumbs.swiper.originalParams, {\n                watchSlidesProgress: true,\n                slideToClickedSlide: false\n            });\n            Object.assign(swiper.thumbs.swiper.params, {\n                watchSlidesProgress: true,\n                slideToClickedSlide: false\n            });\n            swiper.thumbs.swiper.update();\n        } else if ((0, $d680807689e9ecb0$export$342063e11d6c3cad)(thumbsParams.swiper)) {\n            var thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n            Object.assign(thumbsSwiperParams, {\n                watchSlidesProgress: true,\n                slideToClickedSlide: false\n            });\n            swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n            swiperCreated = true;\n        }\n        swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n        swiper.thumbs.swiper.on(\"tap\", onThumbClick);\n        return true;\n    }\n    function update(initial) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        var slidesPerView = thumbsSwiper.params.slidesPerView === \"auto\" ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n        // Activate thumbs\n        var thumbsToActivate = 1;\n        var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) thumbsToActivate = swiper.params.slidesPerView;\n        if (!swiper.params.thumbs.multipleActiveThumbs) thumbsToActivate = 1;\n        thumbsToActivate = Math.floor(thumbsToActivate);\n        thumbsSwiper.slides.forEach(function(slideEl) {\n            return slideEl.classList.remove(thumbActiveClass);\n        });\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) for(var i = 0; i < thumbsToActivate; i += 1)(0, $d680807689e9ecb0$export$f1e1789686576879)(thumbsSwiper.slidesEl, '[data-swiper-slide-index=\"'.concat(swiper.realIndex + i, '\"]')).forEach(function(slideEl) {\n            slideEl.classList.add(thumbActiveClass);\n        });\n        else {\n            for(var i1 = 0; i1 < thumbsToActivate; i1 += 1)if (thumbsSwiper.slides[swiper.realIndex + i1]) thumbsSwiper.slides[swiper.realIndex + i1].classList.add(thumbActiveClass);\n        }\n        var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n        var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n            var currentThumbsIndex = thumbsSwiper.activeIndex;\n            var newThumbsIndex;\n            var direction;\n            if (thumbsSwiper.params.loop) {\n                var newThumbsSlide = thumbsSwiper.slides.filter(function(slideEl) {\n                    return slideEl.getAttribute(\"data-swiper-slide-index\") === \"\".concat(swiper.realIndex);\n                })[0];\n                newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n                direction = swiper.activeIndex > swiper.previousIndex ? \"next\" : \"prev\";\n            } else {\n                newThumbsIndex = swiper.realIndex;\n                direction = newThumbsIndex > swiper.previousIndex ? \"next\" : \"prev\";\n            }\n            if (useOffset) newThumbsIndex += direction === \"next\" ? autoScrollOffset : -1 * autoScrollOffset;\n            if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n                if (thumbsSwiper.params.centeredSlides) {\n                    if (newThumbsIndex > currentThumbsIndex) newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n                    else newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n                } else newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup;\n                thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n            }\n        }\n    }\n    on(\"beforeInit\", function() {\n        var thumbs = swiper.params.thumbs;\n        if (!thumbs || !thumbs.swiper) return;\n        if (typeof thumbs.swiper === \"string\" || thumbs.swiper instanceof HTMLElement) {\n            var document = (0, $0c3479cf5570869b$export$39b482c5e57630a8)();\n            var getThumbsElementAndInit = function() {\n                var thumbsElement = typeof thumbs.swiper === \"string\" ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n                if (thumbsElement && thumbsElement.swiper) {\n                    thumbs.swiper = thumbsElement.swiper;\n                    init();\n                    update(true);\n                } else if (thumbsElement) {\n                    var onThumbsSwiper = function(e) {\n                        thumbs.swiper = e.detail[0];\n                        thumbsElement.removeEventListener(\"init\", onThumbsSwiper);\n                        init();\n                        update(true);\n                        thumbs.swiper.update();\n                        swiper.update();\n                    };\n                    thumbsElement.addEventListener(\"init\", onThumbsSwiper);\n                }\n                return thumbsElement;\n            };\n            var watchForThumbsToAppear = function() {\n                if (swiper.destroyed) return;\n                var thumbsElement = getThumbsElementAndInit();\n                if (!thumbsElement) requestAnimationFrame(watchForThumbsToAppear);\n            };\n            requestAnimationFrame(watchForThumbsToAppear);\n        } else {\n            init();\n            update(true);\n        }\n    });\n    on(\"slideChange update resize observerUpdate\", function() {\n        update();\n    });\n    on(\"setTransition\", function(_s, duration) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        thumbsSwiper.setTransition(duration);\n    });\n    on(\"beforeDestroy\", function() {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        if (swiperCreated) thumbsSwiper.destroy();\n    });\n    Object.assign(swiper.thumbs, {\n        init: init,\n        update: update\n    });\n}\n\n\n\nfunction $5ce70d10bba259cf$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, emit = _ref.emit, once = _ref.once;\n    extendParams({\n        freeMode: {\n            enabled: false,\n            momentum: true,\n            momentumRatio: 1,\n            momentumBounce: true,\n            momentumBounceRatio: 1,\n            momentumVelocityRatio: 1,\n            sticky: false,\n            minimumVelocity: 0.02\n        }\n    });\n    function onTouchStart() {\n        if (swiper.params.cssMode) return;\n        var translate = swiper.getTranslate();\n        swiper.setTranslate(translate);\n        swiper.setTransition(0);\n        swiper.touchEventsData.velocities.length = 0;\n        swiper.freeMode.onTouchEnd({\n            currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n        });\n    }\n    function onTouchMove() {\n        if (swiper.params.cssMode) return;\n        var data = swiper.touchEventsData, touches = swiper.touches;\n        // Velocity\n        if (data.velocities.length === 0) data.velocities.push({\n            position: touches[swiper.isHorizontal() ? \"startX\" : \"startY\"],\n            time: data.touchStartTime\n        });\n        data.velocities.push({\n            position: touches[swiper.isHorizontal() ? \"currentX\" : \"currentY\"],\n            time: (0, $d680807689e9ecb0$export$4368d992c4eafac0)()\n        });\n    }\n    function onTouchEnd(_ref2) {\n        var currentPos = _ref2.currentPos;\n        if (swiper.params.cssMode) return;\n        var params = swiper.params, wrapperEl = swiper.wrapperEl, rtl = swiper.rtlTranslate, snapGrid = swiper.snapGrid, data = swiper.touchEventsData;\n        // Time diff\n        var touchEndTime = (0, $d680807689e9ecb0$export$4368d992c4eafac0)();\n        var timeDiff = touchEndTime - data.touchStartTime;\n        if (currentPos < -swiper.minTranslate()) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (currentPos > -swiper.maxTranslate()) {\n            if (swiper.slides.length < snapGrid.length) swiper.slideTo(snapGrid.length - 1);\n            else swiper.slideTo(swiper.slides.length - 1);\n            return;\n        }\n        if (params.freeMode.momentum) {\n            if (data.velocities.length > 1) {\n                var lastMoveEvent = data.velocities.pop();\n                var velocityEvent = data.velocities.pop();\n                var distance = lastMoveEvent.position - velocityEvent.position;\n                var time = lastMoveEvent.time - velocityEvent.time;\n                swiper.velocity = distance / time;\n                swiper.velocity /= 2;\n                if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) swiper.velocity = 0;\n                // this implies that the user stopped moving a finger then released.\n                // There would be no events with distance zero, so the last event is stale.\n                if (time > 150 || (0, $d680807689e9ecb0$export$4368d992c4eafac0)() - lastMoveEvent.time > 300) swiper.velocity = 0;\n            } else swiper.velocity = 0;\n            swiper.velocity *= params.freeMode.momentumVelocityRatio;\n            data.velocities.length = 0;\n            var momentumDuration = 1000 * params.freeMode.momentumRatio;\n            var momentumDistance = swiper.velocity * momentumDuration;\n            var newPosition = swiper.translate + momentumDistance;\n            if (rtl) newPosition = -newPosition;\n            var doBounce = false;\n            var afterBouncePosition;\n            var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n            var needsLoopFix;\n            if (newPosition < swiper.maxTranslate()) {\n                if (params.freeMode.momentumBounce) {\n                    if (newPosition + swiper.maxTranslate() < -bounceAmount) newPosition = swiper.maxTranslate() - bounceAmount;\n                    afterBouncePosition = swiper.maxTranslate();\n                    doBounce = true;\n                    data.allowMomentumBounce = true;\n                } else newPosition = swiper.maxTranslate();\n                if (params.loop && params.centeredSlides) needsLoopFix = true;\n            } else if (newPosition > swiper.minTranslate()) {\n                if (params.freeMode.momentumBounce) {\n                    if (newPosition - swiper.minTranslate() > bounceAmount) newPosition = swiper.minTranslate() + bounceAmount;\n                    afterBouncePosition = swiper.minTranslate();\n                    doBounce = true;\n                    data.allowMomentumBounce = true;\n                } else newPosition = swiper.minTranslate();\n                if (params.loop && params.centeredSlides) needsLoopFix = true;\n            } else if (params.freeMode.sticky) {\n                var nextSlide;\n                for(var j = 0; j < snapGrid.length; j += 1)if (snapGrid[j] > -newPosition) {\n                    nextSlide = j;\n                    break;\n                }\n                if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === \"next\") newPosition = snapGrid[nextSlide];\n                else newPosition = snapGrid[nextSlide - 1];\n                newPosition = -newPosition;\n            }\n            if (needsLoopFix) once(\"transitionEnd\", function() {\n                swiper.loopFix();\n            });\n            // Fix duration\n            if (swiper.velocity !== 0) {\n                if (rtl) momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n                else momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n                if (params.freeMode.sticky) {\n                    // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n                    // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n                    // It's easy to see this when simulating touch with mouse events. To fix this,\n                    // limit single-slide swipes to the default slide duration. This also has the\n                    // nice side effect of matching slide speed if the user stopped moving before\n                    // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n                    // For faster swipes, also apply limits (albeit higher ones).\n                    var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n                    var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n                    if (moveDistance < currentSlideSize) momentumDuration = params.speed;\n                    else if (moveDistance < 2 * currentSlideSize) momentumDuration = params.speed * 1.5;\n                    else momentumDuration = params.speed * 2.5;\n                }\n            } else if (params.freeMode.sticky) {\n                swiper.slideToClosest();\n                return;\n            }\n            if (params.freeMode.momentumBounce && doBounce) {\n                swiper.updateProgress(afterBouncePosition);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                swiper.animating = true;\n                (0, $d680807689e9ecb0$export$35e795649ee09318)(wrapperEl, function() {\n                    if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n                    emit(\"momentumBounce\");\n                    swiper.setTransition(params.speed);\n                    setTimeout(function() {\n                        swiper.setTranslate(afterBouncePosition);\n                        (0, $d680807689e9ecb0$export$35e795649ee09318)(wrapperEl, function() {\n                            if (!swiper || swiper.destroyed) return;\n                            swiper.transitionEnd();\n                        });\n                    }, 0);\n                });\n            } else if (swiper.velocity) {\n                emit(\"_freeModeNoMomentumRelease\");\n                swiper.updateProgress(newPosition);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                if (!swiper.animating) {\n                    swiper.animating = true;\n                    (0, $d680807689e9ecb0$export$35e795649ee09318)(wrapperEl, function() {\n                        if (!swiper || swiper.destroyed) return;\n                        swiper.transitionEnd();\n                    });\n                }\n            } else swiper.updateProgress(newPosition);\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        } else if (params.freeMode.sticky) {\n            swiper.slideToClosest();\n            return;\n        } else if (params.freeMode) emit(\"_freeModeNoMomentumRelease\");\n        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n            emit(\"_freeModeStaticRelease\");\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n    }\n    Object.assign(swiper, {\n        freeMode: {\n            onTouchStart: onTouchStart,\n            onTouchMove: onTouchMove,\n            onTouchEnd: onTouchEnd\n        }\n    });\n}\n\n\n\nfunction $263012e427d0b130$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        grid: {\n            rows: 1,\n            fill: \"column\"\n        }\n    });\n    var slidesNumberEvenToRows;\n    var slidesPerRow;\n    var numFullColumns;\n    var wasMultiRow;\n    var getSpaceBetween = function() {\n        var spaceBetween = swiper.params.spaceBetween;\n        if (typeof spaceBetween === \"string\" && spaceBetween.indexOf(\"%\") >= 0) spaceBetween = parseFloat(spaceBetween.replace(\"%\", \"\")) / 100 * swiper.size;\n        else if (typeof spaceBetween === \"string\") spaceBetween = parseFloat(spaceBetween);\n        return spaceBetween;\n    };\n    var initSlides = function(slides) {\n        var slidesPerView = swiper.params.slidesPerView;\n        var _swiper_params_grid = swiper.params.grid, rows = _swiper_params_grid.rows, fill = _swiper_params_grid.fill;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : slides.length;\n        numFullColumns = Math.floor(slidesLength / rows);\n        if (Math.floor(slidesLength / rows) === slidesLength / rows) slidesNumberEvenToRows = slidesLength;\n        else slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n        if (slidesPerView !== \"auto\" && fill === \"row\") slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n        slidesPerRow = slidesNumberEvenToRows / rows;\n    };\n    var unsetSlides = function() {\n        if (swiper.slides) swiper.slides.forEach(function(slide) {\n            if (slide.swiperSlideGridSet) {\n                slide.style.height = \"\";\n                slide.style[swiper.getDirectionLabel(\"margin-top\")] = \"\";\n            }\n        });\n    };\n    var updateSlide = function(i, slide, slides) {\n        var slidesPerGroup = swiper.params.slidesPerGroup;\n        var spaceBetween = getSpaceBetween();\n        var _swiper_params_grid = swiper.params.grid, rows = _swiper_params_grid.rows, fill = _swiper_params_grid.fill;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : slides.length;\n        // Set slides order\n        var newSlideOrderIndex;\n        var column;\n        var row;\n        if (fill === \"row\" && slidesPerGroup > 1) {\n            var groupIndex = Math.floor(i / (slidesPerGroup * rows));\n            var slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n            var columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n            row = Math.floor(slideIndexInGroup / columnsInGroup);\n            column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n            newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n            slide.style.order = newSlideOrderIndex;\n        } else if (fill === \"column\") {\n            column = Math.floor(i / rows);\n            row = i - column * rows;\n            if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n                row += 1;\n                if (row >= rows) {\n                    row = 0;\n                    column += 1;\n                }\n            }\n        } else {\n            row = Math.floor(i / slidesPerRow);\n            column = i - row * slidesPerRow;\n        }\n        slide.row = row;\n        slide.column = column;\n        slide.style.height = \"calc((100% - \".concat((rows - 1) * spaceBetween, \"px) / \").concat(rows, \")\");\n        slide.style[swiper.getDirectionLabel(\"margin-top\")] = row !== 0 ? spaceBetween && \"\".concat(spaceBetween, \"px\") : \"\";\n        slide.swiperSlideGridSet = true;\n    };\n    var updateWrapperSize = function(slideSize, snapGrid) {\n        var _swiper_params = swiper.params, centeredSlides = _swiper_params.centeredSlides, roundLengths = _swiper_params.roundLengths;\n        var spaceBetween = getSpaceBetween();\n        var rows = swiper.params.grid.rows;\n        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n        if (!swiper.params.cssMode) swiper.wrapperEl.style[swiper.getDirectionLabel(\"width\")] = \"\".concat(swiper.virtualSize + spaceBetween, \"px\");\n        if (centeredSlides) {\n            var _snapGrid;\n            var newSlidesGrid = [];\n            for(var i = 0; i < snapGrid.length; i += 1){\n                var slidesGridItem = snapGrid[i];\n                if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n                if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n            }\n            snapGrid.splice(0, snapGrid.length);\n            (_snapGrid = snapGrid).push.apply(_snapGrid, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newSlidesGrid));\n        }\n    };\n    var onInit = function() {\n        wasMultiRow = swiper.params.grid && swiper.params.grid.rows > 1;\n    };\n    var onUpdate = function() {\n        var params = swiper.params, el = swiper.el;\n        var isMultiRow = params.grid && params.grid.rows > 1;\n        if (wasMultiRow && !isMultiRow) {\n            el.classList.remove(\"\".concat(params.containerModifierClass, \"grid\"), \"\".concat(params.containerModifierClass, \"grid-column\"));\n            numFullColumns = 1;\n            swiper.emitContainerClasses();\n        } else if (!wasMultiRow && isMultiRow) {\n            el.classList.add(\"\".concat(params.containerModifierClass, \"grid\"));\n            if (params.grid.fill === \"column\") el.classList.add(\"\".concat(params.containerModifierClass, \"grid-column\"));\n            swiper.emitContainerClasses();\n        }\n        wasMultiRow = isMultiRow;\n    };\n    on(\"init\", onInit);\n    on(\"update\", onUpdate);\n    swiper.grid = {\n        initSlides: initSlides,\n        unsetSlides: unsetSlides,\n        updateSlide: updateSlide,\n        updateWrapperSize: updateWrapperSize\n    };\n}\n\n\nfunction $8c3f2bf7fd786b77$var$appendSlide(slides) {\n    var swiper = this;\n    var params = swiper.params, slidesEl = swiper.slidesEl;\n    if (params.loop) swiper.loopDestroy();\n    var appendElement = function(slideEl) {\n        if (typeof slideEl === \"string\") {\n            var tempDOM = document.createElement(\"div\");\n            tempDOM.innerHTML = slideEl;\n            slidesEl.append(tempDOM.children[0]);\n            tempDOM.innerHTML = \"\";\n        } else slidesEl.append(slideEl);\n    };\n    if (typeof slides === \"object\" && \"length\" in slides) {\n        for(var i = 0; i < slides.length; i += 1)if (slides[i]) appendElement(slides[i]);\n    } else appendElement(slides);\n    swiper.recalcSlides();\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer || swiper.isElement) swiper.update();\n}\nfunction $8c3f2bf7fd786b77$var$prependSlide(slides) {\n    var swiper = this;\n    var params = swiper.params, activeIndex = swiper.activeIndex, slidesEl = swiper.slidesEl;\n    if (params.loop) swiper.loopDestroy();\n    var newActiveIndex = activeIndex + 1;\n    var prependElement = function(slideEl) {\n        if (typeof slideEl === \"string\") {\n            var tempDOM = document.createElement(\"div\");\n            tempDOM.innerHTML = slideEl;\n            slidesEl.prepend(tempDOM.children[0]);\n            tempDOM.innerHTML = \"\";\n        } else slidesEl.prepend(slideEl);\n    };\n    if (typeof slides === \"object\" && \"length\" in slides) {\n        for(var i = 0; i < slides.length; i += 1)if (slides[i]) prependElement(slides[i]);\n        newActiveIndex = activeIndex + slides.length;\n    } else prependElement(slides);\n    swiper.recalcSlides();\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer || swiper.isElement) swiper.update();\n    swiper.slideTo(newActiveIndex, 0, false);\n}\nfunction $8c3f2bf7fd786b77$var$addSlide(index, slides) {\n    var swiper = this;\n    var params = swiper.params, activeIndex = swiper.activeIndex, slidesEl = swiper.slidesEl;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.recalcSlides();\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n        swiper.prependSlide(slides);\n        return;\n    }\n    if (index >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n    for(var i = baseLength - 1; i >= index; i -= 1){\n        var currentSlide = swiper.slides[i];\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n    }\n    if (typeof slides === \"object\" && \"length\" in slides) {\n        for(var i1 = 0; i1 < slides.length; i1 += 1)if (slides[i1]) slidesEl.append(slides[i1]);\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else slidesEl.append(slides);\n    for(var i2 = 0; i2 < slidesBuffer.length; i2 += 1)slidesEl.append(slidesBuffer[i2]);\n    swiper.recalcSlides();\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer || swiper.isElement) swiper.update();\n    if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    else swiper.slideTo(newActiveIndex, 0, false);\n}\nfunction $8c3f2bf7fd786b77$var$removeSlide(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params, activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n    if (typeof slidesIndexes === \"object\" && \"length\" in slidesIndexes) {\n        for(var i = 0; i < slidesIndexes.length; i += 1){\n            indexToRemove = slidesIndexes[i];\n            if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n            if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n    swiper.recalcSlides();\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer || swiper.isElement) swiper.update();\n    if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    else swiper.slideTo(newActiveIndex, 0, false);\n}\nfunction $8c3f2bf7fd786b77$var$removeAllSlides() {\n    var swiper = this;\n    var slidesIndexes = [];\n    for(var i = 0; i < swiper.slides.length; i += 1)slidesIndexes.push(i);\n    swiper.removeSlide(slidesIndexes);\n}\nfunction $8c3f2bf7fd786b77$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper;\n    Object.assign(swiper, {\n        appendSlide: $8c3f2bf7fd786b77$var$appendSlide.bind(swiper),\n        prependSlide: $8c3f2bf7fd786b77$var$prependSlide.bind(swiper),\n        addSlide: $8c3f2bf7fd786b77$var$addSlide.bind(swiper),\n        removeSlide: $8c3f2bf7fd786b77$var$removeSlide.bind(swiper),\n        removeAllSlides: $8c3f2bf7fd786b77$var$removeAllSlides.bind(swiper)\n    });\n}\n\n\nfunction $69fd945573202cb4$export$f1e1789686576879(params) {\n    var effect = params.effect, swiper = params.swiper, on = params.on, setTranslate = params.setTranslate, setTransition = params.setTransition, overwriteParams = params.overwriteParams, perspective = params.perspective, recreateShadows = params.recreateShadows, getEffectParams = params.getEffectParams;\n    on(\"beforeInit\", function() {\n        if (swiper.params.effect !== effect) return;\n        swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass).concat(effect));\n        if (perspective && perspective()) swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"3d\"));\n        var overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n        Object.assign(swiper.params, overwriteParamsResult);\n        Object.assign(swiper.originalParams, overwriteParamsResult);\n    });\n    on(\"setTranslate\", function() {\n        if (swiper.params.effect !== effect) return;\n        setTranslate();\n    });\n    on(\"setTransition\", function(_s, duration) {\n        if (swiper.params.effect !== effect) return;\n        setTransition(duration);\n    });\n    on(\"transitionEnd\", function() {\n        if (swiper.params.effect !== effect) return;\n        if (recreateShadows) {\n            if (!getEffectParams || !getEffectParams().slideShadows) return;\n            // remove shadows\n            swiper.slides.forEach(function(slideEl) {\n                slideEl.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function(shadowEl) {\n                    return shadowEl.remove();\n                });\n            });\n            // create new one\n            recreateShadows();\n        }\n    });\n    var requireUpdateOnVirtual;\n    on(\"virtualUpdate\", function() {\n        if (swiper.params.effect !== effect) return;\n        if (!swiper.slides.length) requireUpdateOnVirtual = true;\n        requestAnimationFrame(function() {\n            if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n                setTranslate();\n                requireUpdateOnVirtual = false;\n            }\n        });\n    });\n}\n\n\n\nfunction $6b67d07c5e1b4e03$export$f1e1789686576879(effectParams, slideEl) {\n    var transformEl = (0, $d680807689e9ecb0$export$882b5998b3b9117c)(slideEl);\n    if (transformEl !== slideEl) {\n        transformEl.style.backfaceVisibility = \"hidden\";\n        transformEl.style[\"-webkit-backface-visibility\"] = \"hidden\";\n    }\n    return transformEl;\n}\n\n\n\nfunction $2481c5286f0f0da4$export$f1e1789686576879(_ref) {\n    var swiper = _ref.swiper, duration = _ref.duration, transformElements = _ref.transformElements, allSlides = _ref.allSlides;\n    var activeIndex = swiper.activeIndex;\n    var getSlide = function(el) {\n        if (!el.parentElement) {\n            // assume shadow root\n            var slide = swiper.slides.filter(function(slideEl) {\n                return slideEl.shadowRoot && slideEl.shadowRoot === el.parentNode;\n            })[0];\n            return slide;\n        }\n        return el.parentElement;\n    };\n    if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        var transitionEndTarget;\n        if (allSlides) transitionEndTarget = transformElements;\n        else transitionEndTarget = transformElements.filter(function(transformEl) {\n            var el = transformEl.classList.contains(\"swiper-slide-transform\") ? getSlide(transformEl) : transformEl;\n            return swiper.getSlideIndex(el) === activeIndex;\n        });\n        transitionEndTarget.forEach(function(el) {\n            (0, $d680807689e9ecb0$export$35e795649ee09318)(el, function() {\n                if (eventTriggered) return;\n                if (!swiper || swiper.destroyed) return;\n                eventTriggered = true;\n                swiper.animating = false;\n                var evt = new window.CustomEvent(\"transitionend\", {\n                    bubbles: true,\n                    cancelable: true\n                });\n                swiper.wrapperEl.dispatchEvent(evt);\n            });\n        });\n    }\n}\n\n\n\nfunction $9277748a1569f950$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        fadeEffect: {\n            crossFade: false\n        }\n    });\n    var setTranslate = function() {\n        var slides = swiper.slides;\n        var params = swiper.params.fadeEffect;\n        for(var i = 0; i < slides.length; i += 1){\n            var slideEl = swiper.slides[i];\n            var offset = slideEl.swiperSlideOffset;\n            var tx = -offset;\n            if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n            var ty = 0;\n            if (!swiper.isHorizontal()) {\n                ty = tx;\n                tx = 0;\n            }\n            var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n            var targetEl = (0, $6b67d07c5e1b4e03$export$f1e1789686576879)(params, slideEl);\n            targetEl.style.opacity = slideOpacity;\n            targetEl.style.transform = \"translate3d(\".concat(tx, \"px, \").concat(ty, \"px, 0px)\");\n        }\n    };\n    var setTransition = function(duration) {\n        var transformElements = swiper.slides.map(function(slideEl) {\n            return (0, $d680807689e9ecb0$export$882b5998b3b9117c)(slideEl);\n        });\n        transformElements.forEach(function(el) {\n            el.style.transitionDuration = \"\".concat(duration, \"ms\");\n        });\n        (0, $2481c5286f0f0da4$export$f1e1789686576879)({\n            swiper: swiper,\n            duration: duration,\n            transformElements: transformElements,\n            allSlides: true\n        });\n    };\n    (0, $69fd945573202cb4$export$f1e1789686576879)({\n        effect: \"fade\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        overwriteParams: function() {\n            return {\n                slidesPerView: 1,\n                slidesPerGroup: 1,\n                watchSlidesProgress: true,\n                spaceBetween: 0,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\nfunction $daecb3f6ecaecae4$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        cubeEffect: {\n            slideShadows: true,\n            shadow: true,\n            shadowOffset: 20,\n            shadowScale: 0.94\n        }\n    });\n    var createSlideShadows = function(slideEl, progress, isHorizontal) {\n        var shadowBefore = isHorizontal ? slideEl.querySelector(\".swiper-slide-shadow-left\") : slideEl.querySelector(\".swiper-slide-shadow-top\");\n        var shadowAfter = isHorizontal ? slideEl.querySelector(\".swiper-slide-shadow-right\") : slideEl.querySelector(\".swiper-slide-shadow-bottom\");\n        if (!shadowBefore) {\n            shadowBefore = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", \"swiper-slide-shadow-cube swiper-slide-shadow-\".concat(isHorizontal ? \"left\" : \"top\").split(\" \"));\n            slideEl.append(shadowBefore);\n        }\n        if (!shadowAfter) {\n            shadowAfter = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", \"swiper-slide-shadow-cube swiper-slide-shadow-\".concat(isHorizontal ? \"right\" : \"bottom\").split(\" \"));\n            slideEl.append(shadowAfter);\n        }\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n    };\n    var recreateShadows = function() {\n        // create new ones\n        var isHorizontal = swiper.isHorizontal();\n        swiper.slides.forEach(function(slideEl) {\n            var progress = Math.max(Math.min(slideEl.progress, 1), -1);\n            createSlideShadows(slideEl, progress, isHorizontal);\n        });\n    };\n    var setTranslate = function() {\n        var el = swiper.el, wrapperEl = swiper.wrapperEl, slides = swiper.slides, swiperWidth = swiper.width, swiperHeight = swiper.height, rtl = swiper.rtlTranslate, swiperSize = swiper.size, browser = swiper.browser;\n        var params = swiper.params.cubeEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var wrapperRotate = 0;\n        var cubeShadowEl;\n        if (params.shadow) {\n            if (isHorizontal) {\n                cubeShadowEl = swiper.wrapperEl.querySelector(\".swiper-cube-shadow\");\n                if (!cubeShadowEl) {\n                    cubeShadowEl = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", \"swiper-cube-shadow\");\n                    swiper.wrapperEl.append(cubeShadowEl);\n                }\n                cubeShadowEl.style.height = \"\".concat(swiperWidth, \"px\");\n            } else {\n                cubeShadowEl = el.querySelector(\".swiper-cube-shadow\");\n                if (!cubeShadowEl) {\n                    cubeShadowEl = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", \"swiper-cube-shadow\");\n                    el.append(cubeShadowEl);\n                }\n            }\n        }\n        for(var i = 0; i < slides.length; i += 1){\n            var slideEl = slides[i];\n            var slideIndex = i;\n            if (isVirtual) slideIndex = parseInt(slideEl.getAttribute(\"data-swiper-slide-index\"), 10);\n            var slideAngle = slideIndex * 90;\n            var round = Math.floor(slideAngle / 360);\n            if (rtl) {\n                slideAngle = -slideAngle;\n                round = Math.floor(-slideAngle / 360);\n            }\n            var progress = Math.max(Math.min(slideEl.progress, 1), -1);\n            var tx = 0;\n            var ty = 0;\n            var tz = 0;\n            if (slideIndex % 4 === 0) {\n                tx = -round * 4 * swiperSize;\n                tz = 0;\n            } else if ((slideIndex - 1) % 4 === 0) {\n                tx = 0;\n                tz = -round * 4 * swiperSize;\n            } else if ((slideIndex - 2) % 4 === 0) {\n                tx = swiperSize + round * 4 * swiperSize;\n                tz = swiperSize;\n            } else if ((slideIndex - 3) % 4 === 0) {\n                tx = -swiperSize;\n                tz = 3 * swiperSize + swiperSize * 4 * round;\n            }\n            if (rtl) tx = -tx;\n            if (!isHorizontal) {\n                ty = tx;\n                tx = 0;\n            }\n            var transform = \"rotateX(\".concat(isHorizontal ? 0 : -slideAngle, \"deg) rotateY(\").concat(isHorizontal ? slideAngle : 0, \"deg) translate3d(\").concat(tx, \"px, \").concat(ty, \"px, \").concat(tz, \"px)\");\n            if (progress <= 1 && progress > -1) {\n                wrapperRotate = slideIndex * 90 + progress * 90;\n                if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n                if (swiper.browser && swiper.browser.need3dFix && Math.abs(wrapperRotate) / 90 % 2 === 1) wrapperRotate += 0.001;\n            }\n            slideEl.style.transform = transform;\n            if (params.slideShadows) createSlideShadows(slideEl, progress, isHorizontal);\n        }\n        wrapperEl.style.transformOrigin = \"50% 50% -\".concat(swiperSize / 2, \"px\");\n        wrapperEl.style[\"-webkit-transform-origin\"] = \"50% 50% -\".concat(swiperSize / 2, \"px\");\n        if (params.shadow) {\n            if (isHorizontal) cubeShadowEl.style.transform = \"translate3d(0px, \".concat(swiperWidth / 2 + params.shadowOffset, \"px, \").concat(-swiperWidth / 2, \"px) rotateX(89.99deg) rotateZ(0deg) scale(\").concat(params.shadowScale, \")\");\n            else {\n                var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                var scale1 = params.shadowScale;\n                var scale2 = params.shadowScale / multiplier;\n                var offset = params.shadowOffset;\n                cubeShadowEl.style.transform = \"scale3d(\".concat(scale1, \", 1, \").concat(scale2, \") translate3d(0px, \").concat(swiperHeight / 2 + offset, \"px, \").concat(-swiperHeight / 2 / scale2, \"px) rotateX(-89.99deg)\");\n            }\n        }\n        var zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n        wrapperEl.style.transform = \"translate3d(0px,0,\".concat(zFactor, \"px) rotateX(\").concat(swiper.isHorizontal() ? 0 : wrapperRotate, \"deg) rotateY(\").concat(swiper.isHorizontal() ? -wrapperRotate : 0, \"deg)\");\n        wrapperEl.style.setProperty(\"--swiper-cube-translate-z\", \"\".concat(zFactor, \"px\"));\n    };\n    var setTransition = function(duration) {\n        var el = swiper.el, slides = swiper.slides;\n        slides.forEach(function(slideEl) {\n            slideEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n            slideEl.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function(subEl) {\n                subEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n            });\n        });\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n            var shadowEl = el.querySelector(\".swiper-cube-shadow\");\n            if (shadowEl) shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n        }\n    };\n    (0, $69fd945573202cb4$export$f1e1789686576879)({\n        effect: \"cube\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        recreateShadows: recreateShadows,\n        getEffectParams: function() {\n            return swiper.params.cubeEffect;\n        },\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                slidesPerView: 1,\n                slidesPerGroup: 1,\n                watchSlidesProgress: true,\n                resistanceRatio: 0,\n                spaceBetween: 0,\n                centeredSlides: false,\n                virtualTranslate: true\n            };\n        }\n    });\n}\n\n\n\nfunction $2e822ddded28c3c2$export$db3b6bfb95261072(suffix, slideEl, side) {\n    var shadowClass = \"swiper-slide-shadow\".concat(side ? \"-\".concat(side) : \"\").concat(suffix ? \" swiper-slide-shadow-\".concat(suffix) : \"\");\n    var shadowContainer = (0, $d680807689e9ecb0$export$882b5998b3b9117c)(slideEl);\n    var shadowEl = shadowContainer.querySelector(\".\".concat(shadowClass.split(\" \").join(\".\")));\n    if (!shadowEl) {\n        shadowEl = (0, $d680807689e9ecb0$export$db3b6bfb95261072)(\"div\", shadowClass.split(\" \"));\n        shadowContainer.append(shadowEl);\n    }\n    return shadowEl;\n}\n\n\n\n\n\n\nfunction $d6efe3dee44fd120$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        flipEffect: {\n            slideShadows: true,\n            limitRotation: true\n        }\n    });\n    var createSlideShadows = function(slideEl, progress) {\n        var shadowBefore = swiper.isHorizontal() ? slideEl.querySelector(\".swiper-slide-shadow-left\") : slideEl.querySelector(\".swiper-slide-shadow-top\");\n        var shadowAfter = swiper.isHorizontal() ? slideEl.querySelector(\".swiper-slide-shadow-right\") : slideEl.querySelector(\".swiper-slide-shadow-bottom\");\n        if (!shadowBefore) shadowBefore = (0, $2e822ddded28c3c2$export$db3b6bfb95261072)(\"flip\", slideEl, swiper.isHorizontal() ? \"left\" : \"top\");\n        if (!shadowAfter) shadowAfter = (0, $2e822ddded28c3c2$export$db3b6bfb95261072)(\"flip\", slideEl, swiper.isHorizontal() ? \"right\" : \"bottom\");\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n    };\n    var recreateShadows = function() {\n        // Set shadows\n        swiper.params.flipEffect;\n        swiper.slides.forEach(function(slideEl) {\n            var progress = slideEl.progress;\n            if (swiper.params.flipEffect.limitRotation) progress = Math.max(Math.min(slideEl.progress, 1), -1);\n            createSlideShadows(slideEl, progress);\n        });\n    };\n    var setTranslate = function() {\n        var slides = swiper.slides, rtl = swiper.rtlTranslate;\n        var params = swiper.params.flipEffect;\n        for(var i = 0; i < slides.length; i += 1){\n            var slideEl = slides[i];\n            var progress = slideEl.progress;\n            if (swiper.params.flipEffect.limitRotation) progress = Math.max(Math.min(slideEl.progress, 1), -1);\n            var offset = slideEl.swiperSlideOffset;\n            var rotate = -180 * progress;\n            var rotateY = rotate;\n            var rotateX = 0;\n            var tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n            var ty = 0;\n            if (!swiper.isHorizontal()) {\n                ty = tx;\n                tx = 0;\n                rotateX = -rotateY;\n                rotateY = 0;\n            } else if (rtl) rotateY = -rotateY;\n            if (swiper.browser && swiper.browser.need3dFix) {\n                if (Math.abs(rotateY) / 90 % 2 === 1) rotateY += 0.001;\n                if (Math.abs(rotateX) / 90 % 2 === 1) rotateX += 0.001;\n            }\n            slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n            if (params.slideShadows) createSlideShadows(slideEl, progress);\n            var transform = \"translate3d(\".concat(tx, \"px, \").concat(ty, \"px, 0px) rotateX(\").concat(rotateX, \"deg) rotateY(\").concat(rotateY, \"deg)\");\n            var targetEl = (0, $6b67d07c5e1b4e03$export$f1e1789686576879)(params, slideEl);\n            targetEl.style.transform = transform;\n        }\n    };\n    var setTransition = function(duration) {\n        var transformElements = swiper.slides.map(function(slideEl) {\n            return (0, $d680807689e9ecb0$export$882b5998b3b9117c)(slideEl);\n        });\n        transformElements.forEach(function(el) {\n            el.style.transitionDuration = \"\".concat(duration, \"ms\");\n            el.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function(shadowEl) {\n                shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n            });\n        });\n        (0, $2481c5286f0f0da4$export$f1e1789686576879)({\n            swiper: swiper,\n            duration: duration,\n            transformElements: transformElements\n        });\n    };\n    (0, $69fd945573202cb4$export$f1e1789686576879)({\n        effect: \"flip\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        recreateShadows: recreateShadows,\n        getEffectParams: function() {\n            return swiper.params.flipEffect;\n        },\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                slidesPerView: 1,\n                slidesPerGroup: 1,\n                watchSlidesProgress: true,\n                spaceBetween: 0,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\n\n\nfunction $d20c70f9e338c9f9$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        coverflowEffect: {\n            rotate: 50,\n            stretch: 0,\n            depth: 100,\n            scale: 1,\n            modifier: 1,\n            slideShadows: true\n        }\n    });\n    var setTranslate = function() {\n        var swiperWidth = swiper.width, swiperHeight = swiper.height, slides = swiper.slides, slidesSizesGrid = swiper.slidesSizesGrid;\n        var params = swiper.params.coverflowEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var transform = swiper.translate;\n        var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n        var rotate = isHorizontal ? params.rotate : -params.rotate;\n        var translate = params.depth;\n        // Each slide offset from center\n        for(var i = 0, length = slides.length; i < length; i += 1){\n            var slideEl = slides[i];\n            var slideSize = slidesSizesGrid[i];\n            var slideOffset = slideEl.swiperSlideOffset;\n            var centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n            var offsetMultiplier = typeof params.modifier === \"function\" ? params.modifier(centerOffset) : centerOffset * params.modifier;\n            var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n            var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n            // var rotateZ = 0\n            var translateZ = -translate * Math.abs(offsetMultiplier);\n            var stretch = params.stretch;\n            // Allow percentage to make a relative stretch for responsive sliders\n            if (typeof stretch === \"string\" && stretch.indexOf(\"%\") !== -1) stretch = parseFloat(params.stretch) / 100 * slideSize;\n            var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n            var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n            var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n            // Fix for ultra small values\n            if (Math.abs(translateX) < 0.001) translateX = 0;\n            if (Math.abs(translateY) < 0.001) translateY = 0;\n            if (Math.abs(translateZ) < 0.001) translateZ = 0;\n            if (Math.abs(rotateY) < 0.001) rotateY = 0;\n            if (Math.abs(rotateX) < 0.001) rotateX = 0;\n            if (Math.abs(scale) < 0.001) scale = 0;\n            if (swiper.browser && swiper.browser.need3dFix) {\n                if (Math.abs(rotateY) / 90 % 2 === 1) rotateY += 0.001;\n                if (Math.abs(rotateX) / 90 % 2 === 1) rotateX += 0.001;\n            }\n            var slideTransform = \"translate3d(\".concat(translateX, \"px,\").concat(translateY, \"px,\").concat(translateZ, \"px)  rotateX(\").concat(rotateX, \"deg) rotateY(\").concat(rotateY, \"deg) scale(\").concat(scale, \")\");\n            var targetEl = (0, $6b67d07c5e1b4e03$export$f1e1789686576879)(params, slideEl);\n            targetEl.style.transform = slideTransform;\n            slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n            if (params.slideShadows) {\n                // Set shadows\n                var shadowBeforeEl = isHorizontal ? slideEl.querySelector(\".swiper-slide-shadow-left\") : slideEl.querySelector(\".swiper-slide-shadow-top\");\n                var shadowAfterEl = isHorizontal ? slideEl.querySelector(\".swiper-slide-shadow-right\") : slideEl.querySelector(\".swiper-slide-shadow-bottom\");\n                if (!shadowBeforeEl) shadowBeforeEl = (0, $2e822ddded28c3c2$export$db3b6bfb95261072)(\"coverflow\", slideEl, isHorizontal ? \"left\" : \"top\");\n                if (!shadowAfterEl) shadowAfterEl = (0, $2e822ddded28c3c2$export$db3b6bfb95261072)(\"coverflow\", slideEl, isHorizontal ? \"right\" : \"bottom\");\n                if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n            }\n        }\n    };\n    var setTransition = function(duration) {\n        var transformElements = swiper.slides.map(function(slideEl) {\n            return (0, $d680807689e9ecb0$export$882b5998b3b9117c)(slideEl);\n        });\n        transformElements.forEach(function(el) {\n            el.style.transitionDuration = \"\".concat(duration, \"ms\");\n            el.querySelectorAll(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").forEach(function(shadowEl) {\n                shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n            });\n        });\n    };\n    (0, $69fd945573202cb4$export$f1e1789686576879)({\n        effect: \"coverflow\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                watchSlidesProgress: true\n            };\n        }\n    });\n}\n\n\n\n\n\n\n\nfunction $2aa1e562579f7244$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        creativeEffect: {\n            limitProgress: 1,\n            shadowPerProgress: false,\n            progressMultiplier: 1,\n            perspective: true,\n            prev: {\n                translate: [\n                    0,\n                    0,\n                    0\n                ],\n                rotate: [\n                    0,\n                    0,\n                    0\n                ],\n                opacity: 1,\n                scale: 1\n            },\n            next: {\n                translate: [\n                    0,\n                    0,\n                    0\n                ],\n                rotate: [\n                    0,\n                    0,\n                    0\n                ],\n                opacity: 1,\n                scale: 1\n            }\n        }\n    });\n    var getTranslateValue = function(value) {\n        if (typeof value === \"string\") return value;\n        return \"\".concat(value, \"px\");\n    };\n    var setTranslate = function() {\n        var _loop = function(i) {\n            var slideEl = slides[i];\n            var slideProgress = slideEl.progress;\n            var progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n            var originalProgress = progress;\n            if (!isCenteredSlides) originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n            var offset = slideEl.swiperSlideOffset;\n            var t = [\n                swiper.params.cssMode ? -offset - swiper.translate : -offset,\n                0,\n                0\n            ];\n            var r = [\n                0,\n                0,\n                0\n            ];\n            var custom = false;\n            if (!swiper.isHorizontal()) {\n                t[1] = t[0];\n                t[0] = 0;\n            }\n            var data = {\n                translate: [\n                    0,\n                    0,\n                    0\n                ],\n                rotate: [\n                    0,\n                    0,\n                    0\n                ],\n                scale: 1,\n                opacity: 1\n            };\n            if (progress < 0) {\n                data = params.next;\n                custom = true;\n            } else if (progress > 0) {\n                data = params.prev;\n                custom = true;\n            }\n            // set translate\n            t.forEach(function(value, index) {\n                t[index] = \"calc(\".concat(value, \"px + (\").concat(getTranslateValue(data.translate[index]), \" * \").concat(Math.abs(progress * multiplier), \"))\");\n            });\n            // set rotates\n            r.forEach(function(value, index) {\n                var val = data.rotate[index] * Math.abs(progress * multiplier);\n                if (swiper.browser && swiper.browser.need3dFix && Math.abs(val) / 90 % 2 === 1) val += 0.001;\n                r[index] = val;\n            });\n            slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n            var translateString = t.join(\", \");\n            var rotateString = \"rotateX(\".concat(r[0], \"deg) rotateY(\").concat(r[1], \"deg) rotateZ(\").concat(r[2], \"deg)\");\n            var scaleString = originalProgress < 0 ? \"scale(\".concat(1 + (1 - data.scale) * originalProgress * multiplier, \")\") : \"scale(\".concat(1 - (1 - data.scale) * originalProgress * multiplier, \")\");\n            var opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n            var transform = \"translate3d(\".concat(translateString, \") \").concat(rotateString, \" \").concat(scaleString);\n            // Set shadows\n            if (custom && data.shadow || !custom) {\n                var shadowEl = slideEl.querySelector(\".swiper-slide-shadow\");\n                if (!shadowEl && data.shadow) shadowEl = (0, $2e822ddded28c3c2$export$db3b6bfb95261072)(\"creative\", slideEl);\n                if (shadowEl) {\n                    var shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n                    shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n                }\n            }\n            var targetEl = (0, $6b67d07c5e1b4e03$export$f1e1789686576879)(params, slideEl);\n            targetEl.style.transform = transform;\n            targetEl.style.opacity = opacityString;\n            if (data.origin) targetEl.style.transformOrigin = data.origin;\n        };\n        var slides = swiper.slides, wrapperEl = swiper.wrapperEl, slidesSizesGrid = swiper.slidesSizesGrid;\n        var params = swiper.params.creativeEffect;\n        var multiplier = params.progressMultiplier;\n        var isCenteredSlides = swiper.params.centeredSlides;\n        if (isCenteredSlides) {\n            var margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n            wrapperEl.style.transform = \"translateX(calc(50% - \".concat(margin, \"px))\");\n        }\n        for(var i = 0; i < slides.length; i += 1)_loop(i);\n    };\n    var setTransition = function(duration) {\n        var transformElements = swiper.slides.map(function(slideEl) {\n            return (0, $d680807689e9ecb0$export$882b5998b3b9117c)(slideEl);\n        });\n        transformElements.forEach(function(el) {\n            el.style.transitionDuration = \"\".concat(duration, \"ms\");\n            el.querySelectorAll(\".swiper-slide-shadow\").forEach(function(shadowEl) {\n                shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n            });\n        });\n        (0, $2481c5286f0f0da4$export$f1e1789686576879)({\n            swiper: swiper,\n            duration: duration,\n            transformElements: transformElements,\n            allSlides: true\n        });\n    };\n    (0, $69fd945573202cb4$export$f1e1789686576879)({\n        effect: \"creative\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        perspective: function() {\n            return swiper.params.creativeEffect.perspective;\n        },\n        overwriteParams: function() {\n            return {\n                watchSlidesProgress: true,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\n\n\n\nfunction $27bd3d17716e20fe$export$2e2bcd8739ae039(_ref) {\n    var swiper = _ref.swiper, extendParams = _ref.extendParams, on = _ref.on;\n    extendParams({\n        cardsEffect: {\n            slideShadows: true,\n            rotate: true,\n            perSlideRotate: 2,\n            perSlideOffset: 8\n        }\n    });\n    var setTranslate = function() {\n        var slides = swiper.slides, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate;\n        var params = swiper.params.cardsEffect;\n        var _swiper_touchEventsData = swiper.touchEventsData, startTranslate = _swiper_touchEventsData.startTranslate, isTouched = _swiper_touchEventsData.isTouched;\n        var currentTranslate = rtl ? -swiper.translate : swiper.translate;\n        for(var i = 0; i < slides.length; i += 1){\n            var slideEl = slides[i];\n            var slideProgress = slideEl.progress;\n            var progress = Math.min(Math.max(slideProgress, -4), 4);\n            var offset = slideEl.swiperSlideOffset;\n            if (swiper.params.centeredSlides && !swiper.params.cssMode) swiper.wrapperEl.style.transform = \"translateX(\".concat(swiper.minTranslate(), \"px)\");\n            if (swiper.params.centeredSlides && swiper.params.cssMode) offset -= slides[0].swiperSlideOffset;\n            var tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n            var tY = 0;\n            var tZ = -100 * Math.abs(progress);\n            var scale = 1;\n            var rotate = -params.perSlideRotate * progress;\n            var tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n            var slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n            var isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n            var isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n            if (isSwipeToNext || isSwipeToPrev) {\n                var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);\n                rotate += -28 * progress * subProgress;\n                scale += -0.5 * subProgress;\n                tXAdd += 96 * subProgress;\n                tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n            }\n            if (progress < 0) // next\n            tX = \"calc(\".concat(tX, \"px \").concat(rtl ? \"-\" : \"+\", \" (\").concat(tXAdd * Math.abs(progress), \"%))\");\n            else if (progress > 0) // prev\n            tX = \"calc(\".concat(tX, \"px \").concat(rtl ? \"-\" : \"+\", \" (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n            else tX = \"\".concat(tX, \"px\");\n            if (!swiper.isHorizontal()) {\n                var prevY = tY;\n                tY = tX;\n                tX = prevY;\n            }\n            var scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n            /* eslint-disable */ var transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(params.rotate ? rtl ? -rotate : rotate : 0, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n            /* eslint-enable */ if (params.slideShadows) {\n                // Set shadows\n                var shadowEl = slideEl.querySelector(\".swiper-slide-shadow\");\n                if (!shadowEl) shadowEl = (0, $2e822ddded28c3c2$export$db3b6bfb95261072)(\"cards\", slideEl);\n                if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n            }\n            slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n            var targetEl = (0, $6b67d07c5e1b4e03$export$f1e1789686576879)(params, slideEl);\n            targetEl.style.transform = transform;\n        }\n    };\n    var setTransition = function(duration) {\n        var transformElements = swiper.slides.map(function(slideEl) {\n            return (0, $d680807689e9ecb0$export$882b5998b3b9117c)(slideEl);\n        });\n        transformElements.forEach(function(el) {\n            el.style.transitionDuration = \"\".concat(duration, \"ms\");\n            el.querySelectorAll(\".swiper-slide-shadow\").forEach(function(shadowEl) {\n                shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n            });\n        });\n        (0, $2481c5286f0f0da4$export$f1e1789686576879)({\n            swiper: swiper,\n            duration: duration,\n            transformElements: transformElements\n        });\n    };\n    (0, $69fd945573202cb4$export$f1e1789686576879)({\n        effect: \"cards\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                watchSlidesProgress: true,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\n\"use strict\";\nvar $ffb804eaccb368d6$var$mySwiper = null;\nvar $ffb804eaccb368d6$var$swiperWrapper = document.querySelector(\".gallery__wrapper\");\nfunction $ffb804eaccb368d6$var$initSlider() {\n    var pcBreakPoint = 1210;\n    if (window.innerWidth <= pcBreakPoint && document.querySelector(\".gallery__slider\")) {\n        $ffb804eaccb368d6$var$swiperWrapper.classList.add(\"swiper-wrapper\");\n        $ffb804eaccb368d6$var$mySwiper = new (0, $12f396601cf1ba7d$export$25ce5a424b770e84)(\".gallery__slider\", {\n            modules: [\n                (0, $392c62a1bf8e97d1$export$2e2bcd8739ae039)\n            ],\n            observer: true,\n            observeParents: true,\n            slidesPerView: \"auto\",\n            spaceBetween: 20,\n            pagination: {\n                el: \".swiper-pagination\",\n                clickable: true\n            }\n        });\n    }\n}\nwindow.addEventListener(\"load\", function() {\n    $ffb804eaccb368d6$var$initSlider();\n});\nwindow.addEventListener(\"resize\", function() {\n    if ($ffb804eaccb368d6$var$mySwiper !== null) {\n        $ffb804eaccb368d6$var$mySwiper.destroy();\n        $ffb804eaccb368d6$var$mySwiper = null;\n        $ffb804eaccb368d6$var$swiperWrapper.classList.remove(\"swiper-wrapper\");\n    }\n    $ffb804eaccb368d6$var$initSlider();\n});\n\n\n/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */ /*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ var $ae51a4f8a94c76e1$var$__assign = function __assign1() {\n    $ae51a4f8a94c76e1$var$__assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $ae51a4f8a94c76e1$var$__assign.apply(this, arguments);\n};\nfunction $ae51a4f8a94c76e1$var$__spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */ var $ae51a4f8a94c76e1$var$lGEvents = {\n    afterAppendSlide: \"lgAfterAppendSlide\",\n    init: \"lgInit\",\n    hasVideo: \"lgHasVideo\",\n    containerResize: \"lgContainerResize\",\n    updateSlides: \"lgUpdateSlides\",\n    afterAppendSubHtml: \"lgAfterAppendSubHtml\",\n    beforeOpen: \"lgBeforeOpen\",\n    afterOpen: \"lgAfterOpen\",\n    slideItemLoad: \"lgSlideItemLoad\",\n    beforeSlide: \"lgBeforeSlide\",\n    afterSlide: \"lgAfterSlide\",\n    posterClick: \"lgPosterClick\",\n    dragStart: \"lgDragStart\",\n    dragMove: \"lgDragMove\",\n    dragEnd: \"lgDragEnd\",\n    beforeNextSlide: \"lgBeforeNextSlide\",\n    beforePrevSlide: \"lgBeforePrevSlide\",\n    beforeClose: \"lgBeforeClose\",\n    afterClose: \"lgAfterClose\",\n    rotateLeft: \"lgRotateLeft\",\n    rotateRight: \"lgRotateRight\",\n    flipHorizontal: \"lgFlipHorizontal\",\n    flipVertical: \"lgFlipVertical\",\n    autoplay: \"lgAutoplay\",\n    autoplayStart: \"lgAutoplayStart\",\n    autoplayStop: \"lgAutoplayStop\"\n};\nvar $ae51a4f8a94c76e1$var$lightGalleryCoreSettings = {\n    mode: \"lg-slide\",\n    easing: \"ease\",\n    speed: 400,\n    licenseKey: \"0000-0000-000-0000\",\n    height: \"100%\",\n    width: \"100%\",\n    addClass: \"\",\n    startClass: \"lg-start-zoom\",\n    backdropDuration: 300,\n    container: \"\",\n    startAnimationDuration: 400,\n    zoomFromOrigin: true,\n    hideBarsDelay: 0,\n    showBarsAfter: 10000,\n    slideDelay: 0,\n    supportLegacyBrowser: true,\n    allowMediaOverlap: false,\n    videoMaxSize: \"1280-720\",\n    loadYouTubePoster: true,\n    defaultCaptionHeight: 0,\n    ariaLabelledby: \"\",\n    ariaDescribedby: \"\",\n    resetScrollPosition: true,\n    hideScrollbar: false,\n    closable: true,\n    swipeToClose: true,\n    closeOnTap: true,\n    showCloseIcon: true,\n    showMaximizeIcon: false,\n    loop: true,\n    escKey: true,\n    keyPress: true,\n    trapFocus: true,\n    controls: true,\n    slideEndAnimation: true,\n    hideControlOnEnd: false,\n    mousewheel: false,\n    getCaptionFromTitleOrAlt: true,\n    appendSubHtmlTo: \".lg-sub-html\",\n    subHtmlSelectorRelative: false,\n    preload: 2,\n    numberOfSlideItemsInDom: 10,\n    selector: \"\",\n    selectWithin: \"\",\n    nextHtml: \"\",\n    prevHtml: \"\",\n    index: 0,\n    iframeWidth: \"100%\",\n    iframeHeight: \"100%\",\n    iframeMaxWidth: \"100%\",\n    iframeMaxHeight: \"100%\",\n    download: true,\n    counter: true,\n    appendCounterTo: \".lg-toolbar\",\n    swipeThreshold: 50,\n    enableSwipe: true,\n    enableDrag: true,\n    dynamic: false,\n    dynamicEl: [],\n    extraProps: [],\n    exThumbImage: \"\",\n    isMobile: undefined,\n    mobileSettings: {\n        controls: false,\n        showCloseIcon: false,\n        download: false\n    },\n    plugins: [],\n    strings: {\n        closeGallery: \"Close gallery\",\n        toggleMaximize: \"Toggle maximize\",\n        previousSlide: \"Previous slide\",\n        nextSlide: \"Next slide\",\n        download: \"Download\",\n        playVideo: \"Play video\",\n        mediaLoadingFailed: \"Oops... Failed to load content...\"\n    }\n};\nfunction $ae51a4f8a94c76e1$var$initLgPolyfills() {\n    (function() {\n        if (typeof window.CustomEvent === \"function\") return false;\n        function CustomEvent1(event, params) {\n            params = params || {\n                bubbles: false,\n                cancelable: false,\n                detail: null\n            };\n            var evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        }\n        window.CustomEvent = CustomEvent1;\n    })();\n    (function() {\n        if (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    })();\n}\nvar $ae51a4f8a94c76e1$var$lgQuery = /** @class */ function() {\n    function lgQuery(selector) {\n        this.cssVenderPrefixes = [\n            \"TransitionDuration\",\n            \"TransitionTimingFunction\",\n            \"Transform\",\n            \"Transition\"\n        ];\n        this.selector = this._getSelector(selector);\n        this.firstElement = this._getFirstEl();\n        return this;\n    }\n    lgQuery.generateUUID = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    };\n    lgQuery.prototype._getSelector = function(selector, context) {\n        if (context === void 0) context = document;\n        if (typeof selector !== \"string\") return selector;\n        context = context || document;\n        var fl = selector.substring(0, 1);\n        if (fl === \"#\") return context.querySelector(selector);\n        else return context.querySelectorAll(selector);\n    };\n    lgQuery.prototype._each = function(func) {\n        if (!this.selector) return this;\n        if (this.selector.length !== undefined) [].forEach.call(this.selector, func);\n        else func(this.selector, 0);\n        return this;\n    };\n    lgQuery.prototype._setCssVendorPrefix = function(el, cssProperty, value) {\n        // prettier-ignore\n        var property = cssProperty.replace(/-([a-z])/gi, function(s, group1) {\n            return group1.toUpperCase();\n        });\n        if (this.cssVenderPrefixes.indexOf(property) !== -1) {\n            el.style[property.charAt(0).toLowerCase() + property.slice(1)] = value;\n            el.style[\"webkit\" + property] = value;\n            el.style[\"moz\" + property] = value;\n            el.style[\"ms\" + property] = value;\n            el.style[\"o\" + property] = value;\n        } else el.style[property] = value;\n    };\n    lgQuery.prototype._getFirstEl = function() {\n        if (this.selector && this.selector.length !== undefined) return this.selector[0];\n        else return this.selector;\n    };\n    lgQuery.prototype.isEventMatched = function(event, eventName) {\n        var eventNamespace = eventName.split(\".\");\n        return event.split(\".\").filter(function(e) {\n            return e;\n        }).every(function(e) {\n            return eventNamespace.indexOf(e) !== -1;\n        });\n    };\n    lgQuery.prototype.attr = function(attr, value) {\n        if (value === undefined) {\n            if (!this.firstElement) return \"\";\n            return this.firstElement.getAttribute(attr);\n        }\n        this._each(function(el) {\n            el.setAttribute(attr, value);\n        });\n        return this;\n    };\n    lgQuery.prototype.find = function(selector) {\n        return $ae51a4f8a94c76e1$var$$LG(this._getSelector(selector, this.selector));\n    };\n    lgQuery.prototype.first = function() {\n        if (this.selector && this.selector.length !== undefined) return $ae51a4f8a94c76e1$var$$LG(this.selector[0]);\n        else return $ae51a4f8a94c76e1$var$$LG(this.selector);\n    };\n    lgQuery.prototype.eq = function(index) {\n        return $ae51a4f8a94c76e1$var$$LG(this.selector[index]);\n    };\n    lgQuery.prototype.parent = function() {\n        return $ae51a4f8a94c76e1$var$$LG(this.selector.parentElement);\n    };\n    lgQuery.prototype.get = function() {\n        return this._getFirstEl();\n    };\n    lgQuery.prototype.removeAttr = function(attributes) {\n        var attrs = attributes.split(\" \");\n        this._each(function(el) {\n            attrs.forEach(function(attr) {\n                return el.removeAttribute(attr);\n            });\n        });\n        return this;\n    };\n    lgQuery.prototype.wrap = function(className) {\n        if (!this.firstElement) return this;\n        var wrapper = document.createElement(\"div\");\n        wrapper.className = className;\n        this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\n        this.firstElement.parentNode.removeChild(this.firstElement);\n        wrapper.appendChild(this.firstElement);\n        return this;\n    };\n    lgQuery.prototype.addClass = function(classNames) {\n        if (classNames === void 0) classNames = \"\";\n        this._each(function(el) {\n            // IE doesn't support multiple arguments\n            classNames.split(\" \").forEach(function(className) {\n                if (className) el.classList.add(className);\n            });\n        });\n        return this;\n    };\n    lgQuery.prototype.removeClass = function(classNames) {\n        this._each(function(el) {\n            // IE doesn't support multiple arguments\n            classNames.split(\" \").forEach(function(className) {\n                if (className) el.classList.remove(className);\n            });\n        });\n        return this;\n    };\n    lgQuery.prototype.hasClass = function(className) {\n        if (!this.firstElement) return false;\n        return this.firstElement.classList.contains(className);\n    };\n    lgQuery.prototype.hasAttribute = function(attribute) {\n        if (!this.firstElement) return false;\n        return this.firstElement.hasAttribute(attribute);\n    };\n    lgQuery.prototype.toggleClass = function(className) {\n        if (!this.firstElement) return this;\n        if (this.hasClass(className)) this.removeClass(className);\n        else this.addClass(className);\n        return this;\n    };\n    lgQuery.prototype.css = function(property, value) {\n        var _this = this;\n        this._each(function(el) {\n            _this._setCssVendorPrefix(el, property, value);\n        });\n        return this;\n    };\n    // Need to pass separate namespaces for separate elements\n    lgQuery.prototype.on = function(events, listener) {\n        var _this = this;\n        if (!this.selector) return this;\n        events.split(\" \").forEach(function(event) {\n            if (!Array.isArray(lgQuery.eventListeners[event])) lgQuery.eventListeners[event] = [];\n            lgQuery.eventListeners[event].push(listener);\n            _this.selector.addEventListener(event.split(\".\")[0], listener);\n        });\n        return this;\n    };\n    // @todo - test this\n    lgQuery.prototype.once = function(event, listener) {\n        var _this = this;\n        this.on(event, function() {\n            _this.off(event);\n            listener(event);\n        });\n        return this;\n    };\n    lgQuery.prototype.off = function(event) {\n        var _this = this;\n        if (!this.selector) return this;\n        Object.keys(lgQuery.eventListeners).forEach(function(eventName) {\n            if (_this.isEventMatched(event, eventName)) {\n                lgQuery.eventListeners[eventName].forEach(function(listener) {\n                    _this.selector.removeEventListener(eventName.split(\".\")[0], listener);\n                });\n                lgQuery.eventListeners[eventName] = [];\n            }\n        });\n        return this;\n    };\n    lgQuery.prototype.trigger = function(event, detail) {\n        if (!this.firstElement) return this;\n        var customEvent = new CustomEvent(event.split(\".\")[0], {\n            detail: detail || null\n        });\n        this.firstElement.dispatchEvent(customEvent);\n        return this;\n    };\n    // Does not support IE\n    lgQuery.prototype.load = function(url) {\n        var _this = this;\n        fetch(url).then(function(res) {\n            return res.text();\n        }).then(function(html) {\n            _this.selector.innerHTML = html;\n        });\n        return this;\n    };\n    lgQuery.prototype.html = function(html) {\n        if (html === undefined) {\n            if (!this.firstElement) return \"\";\n            return this.firstElement.innerHTML;\n        }\n        this._each(function(el) {\n            el.innerHTML = html;\n        });\n        return this;\n    };\n    lgQuery.prototype.append = function(html) {\n        this._each(function(el) {\n            if (typeof html === \"string\") el.insertAdjacentHTML(\"beforeend\", html);\n            else el.appendChild(html);\n        });\n        return this;\n    };\n    lgQuery.prototype.prepend = function(html) {\n        this._each(function(el) {\n            el.insertAdjacentHTML(\"afterbegin\", html);\n        });\n        return this;\n    };\n    lgQuery.prototype.remove = function() {\n        this._each(function(el) {\n            el.parentNode.removeChild(el);\n        });\n        return this;\n    };\n    lgQuery.prototype.empty = function() {\n        this._each(function(el) {\n            el.innerHTML = \"\";\n        });\n        return this;\n    };\n    lgQuery.prototype.scrollTop = function(scrollTop) {\n        if (scrollTop !== undefined) {\n            document.body.scrollTop = scrollTop;\n            document.documentElement.scrollTop = scrollTop;\n            return this;\n        } else return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n    };\n    lgQuery.prototype.scrollLeft = function(scrollLeft) {\n        if (scrollLeft !== undefined) {\n            document.body.scrollLeft = scrollLeft;\n            document.documentElement.scrollLeft = scrollLeft;\n            return this;\n        } else return window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;\n    };\n    lgQuery.prototype.offset = function() {\n        if (!this.firstElement) return {\n            left: 0,\n            top: 0\n        };\n        var rect = this.firstElement.getBoundingClientRect();\n        var bodyMarginLeft = $ae51a4f8a94c76e1$var$$LG(\"body\").style().marginLeft;\n        // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\n        return {\n            left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\n            top: rect.top + this.scrollTop()\n        };\n    };\n    lgQuery.prototype.style = function() {\n        if (!this.firstElement) return {};\n        return this.firstElement.currentStyle || window.getComputedStyle(this.firstElement);\n    };\n    // Width without padding and border even if box-sizing is used.\n    lgQuery.prototype.width = function() {\n        var style = this.style();\n        return this.firstElement.clientWidth - parseFloat(style.paddingLeft) - parseFloat(style.paddingRight);\n    };\n    // Height without padding and border even if box-sizing is used.\n    lgQuery.prototype.height = function() {\n        var style = this.style();\n        return this.firstElement.clientHeight - parseFloat(style.paddingTop) - parseFloat(style.paddingBottom);\n    };\n    lgQuery.eventListeners = {};\n    return lgQuery;\n}();\nfunction $ae51a4f8a94c76e1$var$$LG(selector) {\n    $ae51a4f8a94c76e1$var$initLgPolyfills();\n    return new $ae51a4f8a94c76e1$var$lgQuery(selector);\n}\nvar $ae51a4f8a94c76e1$var$defaultDynamicOptions = [\n    \"src\",\n    \"sources\",\n    \"subHtml\",\n    \"subHtmlUrl\",\n    \"html\",\n    \"video\",\n    \"poster\",\n    \"slideName\",\n    \"responsive\",\n    \"srcset\",\n    \"sizes\",\n    \"iframe\",\n    \"downloadUrl\",\n    \"download\",\n    \"width\",\n    \"facebookShareUrl\",\n    \"tweetText\",\n    \"iframeTitle\",\n    \"twitterShareUrl\",\n    \"pinterestShareUrl\",\n    \"pinterestText\",\n    \"fbHtml\",\n    \"disqusIdentifier\",\n    \"disqusUrl\"\n];\n// Convert html data-attribute to camalcase\nfunction $ae51a4f8a94c76e1$var$convertToData(attr) {\n    // FInd a way for lgsize\n    if (attr === \"href\") return \"src\";\n    attr = attr.replace(\"data-\", \"\");\n    attr = attr.charAt(0).toLowerCase() + attr.slice(1);\n    attr = attr.replace(/-([a-z])/g, function(g) {\n        return g[1].toUpperCase();\n    });\n    return attr;\n}\nvar $ae51a4f8a94c76e1$var$utils = {\n    /**\r\n     * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\r\n     */ getSize: function getSize(el, container, spacing, defaultLgSize) {\n        if (spacing === void 0) spacing = 0;\n        var LGel = $ae51a4f8a94c76e1$var$$LG(el);\n        var lgSize = LGel.attr(\"data-lg-size\") || defaultLgSize;\n        if (!lgSize) return;\n        var isResponsiveSizes = lgSize.split(\",\");\n        // if at-least two viewport sizes are available\n        if (isResponsiveSizes[1]) {\n            var wWidth = window.innerWidth;\n            for(var i = 0; i < isResponsiveSizes.length; i++){\n                var size_1 = isResponsiveSizes[i];\n                var responsiveWidth = parseInt(size_1.split(\"-\")[2], 10);\n                if (responsiveWidth > wWidth) {\n                    lgSize = size_1;\n                    break;\n                }\n                // take last item as last option\n                if (i === isResponsiveSizes.length - 1) lgSize = size_1;\n            }\n        }\n        var size = lgSize.split(\"-\");\n        var width = parseInt(size[0], 10);\n        var height = parseInt(size[1], 10);\n        var cWidth = container.width();\n        var cHeight = container.height() - spacing;\n        var maxWidth = Math.min(cWidth, width);\n        var maxHeight = Math.min(cHeight, height);\n        var ratio = Math.min(maxWidth / width, maxHeight / height);\n        return {\n            width: width * ratio,\n            height: height * ratio\n        };\n    },\n    /**\r\n     * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\r\n     * @param {jQuery Element}\r\n     * @returns {String} Transform CSS string\r\n     */ getTransform: function getTransform(el, container, top, bottom, imageSize) {\n        if (!imageSize) return;\n        var LGel = $ae51a4f8a94c76e1$var$$LG(el).find(\"img\").first();\n        if (!LGel.get()) return;\n        var containerRect = container.get().getBoundingClientRect();\n        var wWidth = containerRect.width;\n        // using innerWidth to include mobile safari bottom bar\n        var wHeight = container.height() - (top + bottom);\n        var elWidth = LGel.width();\n        var elHeight = LGel.height();\n        var elStyle = LGel.style();\n        var x = (wWidth - elWidth) / 2 - LGel.offset().left + (parseFloat(elStyle.paddingLeft) || 0) + (parseFloat(elStyle.borderLeft) || 0) + $ae51a4f8a94c76e1$var$$LG(window).scrollLeft() + containerRect.left;\n        var y = (wHeight - elHeight) / 2 - LGel.offset().top + (parseFloat(elStyle.paddingTop) || 0) + (parseFloat(elStyle.borderTop) || 0) + $ae51a4f8a94c76e1$var$$LG(window).scrollTop() + top;\n        var scX = elWidth / imageSize.width;\n        var scY = elHeight / imageSize.height;\n        var transform = \"translate3d(\" + (x *= -1) + \"px, \" + (y *= -1) + \"px, 0) scale3d(\" + scX + \", \" + scY + \", 1)\";\n        return transform;\n    },\n    getIframeMarkup: function getIframeMarkup(iframeWidth, iframeHeight, iframeMaxWidth, iframeMaxHeight, src, iframeTitle) {\n        var title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : \"\";\n        return '<div class=\"lg-video-cont lg-has-iframe\" style=\"width:' + iframeWidth + \"; max-width:\" + iframeMaxWidth + \"; height: \" + iframeHeight + \"; max-height:\" + iframeMaxHeight + '\">\\n                    <iframe class=\"lg-object\" frameborder=\"0\" ' + title + ' src=\"' + src + '\"  allowfullscreen=\"true\"></iframe>\\n                </div>';\n    },\n    getImgMarkup: function getImgMarkup(index, src, altAttr, srcset, sizes, sources) {\n        var srcsetAttr = srcset ? 'srcset=\"' + srcset + '\"' : \"\";\n        var sizesAttr = sizes ? 'sizes=\"' + sizes + '\"' : \"\";\n        var imgMarkup = \"<img \" + altAttr + \" \" + srcsetAttr + \"  \" + sizesAttr + ' class=\"lg-object lg-image\" data-index=\"' + index + '\" src=\"' + src + '\" />';\n        var sourceTag = \"\";\n        if (sources) {\n            var sourceObj = typeof sources === \"string\" ? JSON.parse(sources) : sources;\n            sourceTag = sourceObj.map(function(source) {\n                var attrs = \"\";\n                Object.keys(source).forEach(function(key) {\n                    // Do not remove the first space as it is required to separate the attributes\n                    attrs += \" \" + key + '=\"' + source[key] + '\"';\n                });\n                return \"<source \" + attrs + \"></source>\";\n            });\n        }\n        return \"\" + sourceTag + imgMarkup;\n    },\n    // Get src from responsive src\n    getResponsiveSrc: function getResponsiveSrc(srcItms) {\n        var rsWidth = [];\n        var rsSrc = [];\n        var src = \"\";\n        for(var i = 0; i < srcItms.length; i++){\n            var _src = srcItms[i].split(\" \");\n            // Manage empty space\n            if (_src[0] === \"\") _src.splice(0, 1);\n            rsSrc.push(_src[0]);\n            rsWidth.push(_src[1]);\n        }\n        var wWidth = window.innerWidth;\n        for(var j = 0; j < rsWidth.length; j++)if (parseInt(rsWidth[j], 10) > wWidth) {\n            src = rsSrc[j];\n            break;\n        }\n        return src;\n    },\n    isImageLoaded: function isImageLoaded(img) {\n        if (!img) return false;\n        // During the onload event, IE correctly identifies any images that\n        // weren’t downloaded as not complete. Others should too. Gecko-based\n        // browsers act like NS4 in that they report this incorrectly.\n        if (!img.complete) return false;\n        // However, they do have two very useful properties: naturalWidth and\n        // naturalHeight. These give the true size of the image. If it failed\n        // to load, either of these should be zero.\n        if (img.naturalWidth === 0) return false;\n        // No other way of checking: assume it’s ok.\n        return true;\n    },\n    getVideoPosterMarkup: function getVideoPosterMarkup(_poster, dummyImg, videoContStyle, playVideoString, _isVideo) {\n        var videoClass = \"\";\n        if (_isVideo && _isVideo.youtube) videoClass = \"lg-has-youtube\";\n        else if (_isVideo && _isVideo.vimeo) videoClass = \"lg-has-vimeo\";\n        else videoClass = \"lg-has-html5\";\n        return '<div class=\"lg-video-cont ' + videoClass + '\" style=\"' + videoContStyle + '\">\\n                <div class=\"lg-video-play-button\">\\n                <svg\\n                    viewBox=\"0 0 20 20\"\\n                    preserveAspectRatio=\"xMidYMid\"\\n                    focusable=\"false\"\\n                    aria-labelledby=\"' + playVideoString + '\"\\n                    role=\"img\"\\n                    class=\"lg-video-play-icon\"\\n                >\\n                    <title>' + playVideoString + '</title>\\n                    <polygon class=\"lg-video-play-icon-inner\" points=\"1,0 20,10 1,20\"></polygon>\\n                </svg>\\n                <svg class=\"lg-video-play-icon-bg\" viewBox=\"0 0 50 50\" focusable=\"false\">\\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle></svg>\\n                <svg class=\"lg-video-play-icon-circle\" viewBox=\"0 0 50 50\" focusable=\"false\">\\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle>\\n                </svg>\\n            </div>\\n            ' + (dummyImg || \"\") + '\\n            <img class=\"lg-object lg-video-poster\" src=\"' + _poster + '\" />\\n        </div>';\n    },\n    getFocusableElements: function getFocusableElements(container) {\n        var elements = container.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])');\n        var visibleElements = [].filter.call(elements, function(element) {\n            var style = window.getComputedStyle(element);\n            return style.display !== \"none\" && style.visibility !== \"hidden\";\n        });\n        return visibleElements;\n    },\n    /**\r\n     * @desc Create dynamic elements array from gallery items when dynamic option is false\r\n     * It helps to avoid frequent DOM interaction\r\n     * and avoid multiple checks for dynamic elments\r\n     *\r\n     * @returns {Array} dynamicEl\r\n     */ getDynamicOptions: function getDynamicOptions(items, extraProps, getCaptionFromTitleOrAlt, exThumbImage) {\n        var dynamicElements = [];\n        var availableDynamicOptions = $ae51a4f8a94c76e1$var$__spreadArrays($ae51a4f8a94c76e1$var$defaultDynamicOptions, extraProps);\n        [].forEach.call(items, function(item) {\n            var dynamicEl = {};\n            for(var i = 0; i < item.attributes.length; i++){\n                var attr = item.attributes[i];\n                if (attr.specified) {\n                    var dynamicAttr = $ae51a4f8a94c76e1$var$convertToData(attr.name);\n                    var label = \"\";\n                    if (availableDynamicOptions.indexOf(dynamicAttr) > -1) label = dynamicAttr;\n                    if (label) dynamicEl[label] = attr.value;\n                }\n            }\n            var currentItem = $ae51a4f8a94c76e1$var$$LG(item);\n            var alt = currentItem.find(\"img\").first().attr(\"alt\");\n            var title = currentItem.attr(\"title\");\n            var thumb = exThumbImage ? currentItem.attr(exThumbImage) : currentItem.find(\"img\").first().attr(\"src\");\n            dynamicEl.thumb = thumb;\n            if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) dynamicEl.subHtml = title || alt || \"\";\n            dynamicEl.alt = alt || title || \"\";\n            dynamicElements.push(dynamicEl);\n        });\n        return dynamicElements;\n    },\n    isMobile: function isMobile() {\n        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    },\n    /**\r\n     * @desc Check the given src is video\r\n     * @param {String} src\r\n     * @return {Object} video type\r\n     * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\r\n     *\r\n     * @todo - this information can be moved to dynamicEl to avoid frequent calls\r\n     */ isVideo: function isVideo(src, isHTML5VIdeo, index) {\n        if (!src) {\n            if (isHTML5VIdeo) return {\n                html5: true\n            };\n            else {\n                console.error(\"lightGallery :- data-src is not provided on slide item \" + (index + 1) + \". Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/\");\n                return;\n            }\n        }\n        var youtube = src.match(/\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)([\\&|?][\\S]*)*/i);\n        var vimeo = src.match(/\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)(.*)?/i);\n        var wistia = src.match(/https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/);\n        if (youtube) return {\n            youtube: youtube\n        };\n        else if (vimeo) return {\n            vimeo: vimeo\n        };\n        else if (wistia) return {\n            wistia: wistia\n        };\n    }\n};\n// @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\n// @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\n// Unique id for each gallery\nvar $ae51a4f8a94c76e1$var$lgId = 0;\nvar $ae51a4f8a94c76e1$var$LightGallery = /** @class */ function() {\n    function LightGallery(element, options) {\n        this.lgOpened = false;\n        this.index = 0;\n        // lightGallery modules\n        this.plugins = [];\n        // false when lightGallery load first slide content;\n        this.lGalleryOn = false;\n        // True when a slide animation is in progress\n        this.lgBusy = false;\n        this.currentItemsInDom = [];\n        // Scroll top value before lightGallery is opened\n        this.prevScrollTop = 0;\n        this.bodyPaddingRight = 0;\n        this.isDummyImageRemoved = false;\n        this.dragOrSwipeEnabled = false;\n        this.mediaContainerPosition = {\n            top: 0,\n            bottom: 0\n        };\n        if (!element) return this;\n        $ae51a4f8a94c76e1$var$lgId++;\n        this.lgId = $ae51a4f8a94c76e1$var$lgId;\n        this.el = element;\n        this.LGel = $ae51a4f8a94c76e1$var$$LG(element);\n        this.generateSettings(options);\n        this.buildModules();\n        // When using dynamic mode, ensure dynamicEl is an array\n        if (this.settings.dynamic && this.settings.dynamicEl !== undefined && !Array.isArray(this.settings.dynamicEl)) throw \"When using dynamic mode, you must also define dynamicEl as an Array.\";\n        this.galleryItems = this.getItems();\n        this.normalizeSettings();\n        // Gallery items\n        this.init();\n        this.validateLicense();\n        return this;\n    }\n    LightGallery.prototype.generateSettings = function(options) {\n        // lightGallery settings\n        this.settings = $ae51a4f8a94c76e1$var$__assign($ae51a4f8a94c76e1$var$__assign({}, $ae51a4f8a94c76e1$var$lightGalleryCoreSettings), options);\n        if (this.settings.isMobile && typeof this.settings.isMobile === \"function\" ? this.settings.isMobile() : $ae51a4f8a94c76e1$var$utils.isMobile()) {\n            var mobileSettings = $ae51a4f8a94c76e1$var$__assign($ae51a4f8a94c76e1$var$__assign({}, this.settings.mobileSettings), this.settings.mobileSettings);\n            this.settings = $ae51a4f8a94c76e1$var$__assign($ae51a4f8a94c76e1$var$__assign({}, this.settings), mobileSettings);\n        }\n    };\n    LightGallery.prototype.normalizeSettings = function() {\n        if (this.settings.slideEndAnimation) this.settings.hideControlOnEnd = false;\n        if (!this.settings.closable) this.settings.swipeToClose = false;\n        // And reset it on close to get the correct value next time\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n        // At the moment, Zoom from image doesn't support dynamic options\n        // @todo add zoomFromOrigin support for dynamic images\n        if (this.settings.dynamic) this.zoomFromOrigin = false;\n        if (!this.settings.container) this.settings.container = document.body;\n        // settings.preload should not be grater than $item.length\n        this.settings.preload = Math.min(this.settings.preload, this.galleryItems.length);\n    };\n    LightGallery.prototype.init = function() {\n        var _this = this;\n        this.addSlideVideoInfo(this.galleryItems);\n        this.buildStructure();\n        this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.init, {\n            instance: this\n        });\n        if (this.settings.keyPress) this.keyPress();\n        setTimeout(function() {\n            _this.enableDrag();\n            _this.enableSwipe();\n            _this.triggerPosterClick();\n        }, 50);\n        this.arrow();\n        if (this.settings.mousewheel) this.mousewheel();\n        if (!this.settings.dynamic) this.openGalleryOnItemClick();\n    };\n    LightGallery.prototype.openGalleryOnItemClick = function() {\n        var _this = this;\n        var _loop_1 = function _loop_1(index) {\n            var element = this_1.items[index];\n            var $element = $ae51a4f8a94c76e1$var$$LG(element);\n            // Using different namespace for click because click event should not unbind if selector is same object('this')\n            // @todo manage all event listners - should have namespace that represent element\n            var uuid = $ae51a4f8a94c76e1$var$lgQuery.generateUUID();\n            $element.attr(\"data-lg-id\", uuid).on(\"click.lgcustom-item-\" + uuid, function(e) {\n                e.preventDefault();\n                var currentItemIndex = _this.settings.index || index;\n                _this.openGallery(currentItemIndex, element);\n            });\n        };\n        var this_1 = this;\n        // Using for loop instead of using bubbling as the items can be any html element.\n        for(var index = 0; index < this.items.length; index++)_loop_1(index);\n    };\n    /**\r\n     * Module constructor\r\n     * Modules are build incrementally.\r\n     * Gallery should be opened only once all the modules are initialized.\r\n     * use moduleBuildTimeout to make sure this\r\n     */ LightGallery.prototype.buildModules = function() {\n        var _this = this;\n        this.settings.plugins.forEach(function(plugin) {\n            _this.plugins.push(new plugin(_this, $ae51a4f8a94c76e1$var$$LG));\n        });\n    };\n    LightGallery.prototype.validateLicense = function() {\n        if (!this.settings.licenseKey) console.error(\"Please provide a valid license key\");\n        else if (this.settings.licenseKey === \"0000-0000-000-0000\") console.warn(\"lightGallery: \" + this.settings.licenseKey + \" license key is not valid for production use\");\n    };\n    LightGallery.prototype.getSlideItem = function(index) {\n        return $ae51a4f8a94c76e1$var$$LG(this.getSlideItemId(index));\n    };\n    LightGallery.prototype.getSlideItemId = function(index) {\n        return \"#lg-item-\" + this.lgId + \"-\" + index;\n    };\n    LightGallery.prototype.getIdName = function(id) {\n        return id + \"-\" + this.lgId;\n    };\n    LightGallery.prototype.getElementById = function(id) {\n        return $ae51a4f8a94c76e1$var$$LG(\"#\" + this.getIdName(id));\n    };\n    LightGallery.prototype.manageSingleSlideClassName = function() {\n        if (this.galleryItems.length < 2) this.outer.addClass(\"lg-single-item\");\n        else this.outer.removeClass(\"lg-single-item\");\n    };\n    LightGallery.prototype.buildStructure = function() {\n        var _this = this;\n        var container = this.$container && this.$container.get();\n        if (container) return;\n        var controls = \"\";\n        var subHtmlCont = \"\";\n        // Create controls\n        if (this.settings.controls) controls = '<button type=\"button\" id=\"' + this.getIdName(\"lg-prev\") + '\" aria-label=\"' + this.settings.strings[\"previousSlide\"] + '\" class=\"lg-prev lg-icon\"> ' + this.settings.prevHtml + ' </button>\\n                <button type=\"button\" id=\"' + this.getIdName(\"lg-next\") + '\" aria-label=\"' + this.settings.strings[\"nextSlide\"] + '\" class=\"lg-next lg-icon\"> ' + this.settings.nextHtml + \" </button>\";\n        if (this.settings.appendSubHtmlTo !== \".lg-item\") subHtmlCont = '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\n        var addClasses = \"\";\n        if (this.settings.allowMediaOverlap) // Do not remove space before last single quote\n        addClasses += \"lg-media-overlap \";\n        var ariaLabelledby = this.settings.ariaLabelledby ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"' : \"\";\n        var ariaDescribedby = this.settings.ariaDescribedby ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"' : \"\";\n        var containerClassName = \"lg-container \" + this.settings.addClass + \" \" + (document.body !== this.settings.container ? \"lg-inline\" : \"\");\n        var closeIcon = this.settings.closable && this.settings.showCloseIcon ? '<button type=\"button\" aria-label=\"' + this.settings.strings[\"closeGallery\"] + '\" id=\"' + this.getIdName(\"lg-close\") + '\" class=\"lg-close lg-icon\"></button>' : \"\";\n        var maximizeIcon = this.settings.showMaximizeIcon ? '<button type=\"button\" aria-label=\"' + this.settings.strings[\"toggleMaximize\"] + '\" id=\"' + this.getIdName(\"lg-maximize\") + '\" class=\"lg-maximize lg-icon\"></button>' : \"\";\n        var template = '\\n        <div class=\"' + containerClassName + '\" id=\"' + this.getIdName(\"lg-container\") + '\" tabindex=\"-1\" aria-modal=\"true\" ' + ariaLabelledby + \" \" + ariaDescribedby + ' role=\"dialog\"\\n        >\\n            <div id=\"' + this.getIdName(\"lg-backdrop\") + '\" class=\"lg-backdrop\"></div>\\n\\n            <div id=\"' + this.getIdName(\"lg-outer\") + '\" class=\"lg-outer lg-use-css3 lg-css3 lg-hide-items ' + addClasses + ' \">\\n\\n              <div id=\"' + this.getIdName(\"lg-content\") + '\" class=\"lg-content\">\\n                <div id=\"' + this.getIdName(\"lg-inner\") + '\" class=\"lg-inner\">\\n                </div>\\n                ' + controls + '\\n              </div>\\n                <div id=\"' + this.getIdName(\"lg-toolbar\") + '\" class=\"lg-toolbar lg-group\">\\n                    ' + maximizeIcon + \"\\n                    \" + closeIcon + \"\\n                    </div>\\n                    \" + (this.settings.appendSubHtmlTo === \".lg-outer\" ? subHtmlCont : \"\") + '\\n                <div id=\"' + this.getIdName(\"lg-components\") + '\" class=\"lg-components\">\\n                    ' + (this.settings.appendSubHtmlTo === \".lg-sub-html\" ? subHtmlCont : \"\") + \"\\n                </div>\\n            </div>\\n        </div>\\n        \";\n        $ae51a4f8a94c76e1$var$$LG(this.settings.container).append(template);\n        if (document.body !== this.settings.container) $ae51a4f8a94c76e1$var$$LG(this.settings.container).css(\"position\", \"relative\");\n        this.outer = this.getElementById(\"lg-outer\");\n        this.$lgComponents = this.getElementById(\"lg-components\");\n        this.$backdrop = this.getElementById(\"lg-backdrop\");\n        this.$container = this.getElementById(\"lg-container\");\n        this.$inner = this.getElementById(\"lg-inner\");\n        this.$content = this.getElementById(\"lg-content\");\n        this.$toolbar = this.getElementById(\"lg-toolbar\");\n        this.$backdrop.css(\"transition-duration\", this.settings.backdropDuration + \"ms\");\n        var outerClassNames = this.settings.mode + \" \";\n        this.manageSingleSlideClassName();\n        if (this.settings.enableDrag) outerClassNames += \"lg-grab \";\n        this.outer.addClass(outerClassNames);\n        this.$inner.css(\"transition-timing-function\", this.settings.easing);\n        this.$inner.css(\"transition-duration\", this.settings.speed + \"ms\");\n        if (this.settings.download) this.$toolbar.append('<a id=\"' + this.getIdName(\"lg-download\") + '\" target=\"_blank\" rel=\"noopener\" aria-label=\"' + this.settings.strings[\"download\"] + '\" download class=\"lg-download lg-icon\"></a>');\n        this.counter();\n        $ae51a4f8a94c76e1$var$$LG(window).on(\"resize.lg.global\" + this.lgId + \" orientationchange.lg.global\" + this.lgId, function() {\n            _this.refreshOnResize();\n        });\n        this.hideBars();\n        this.manageCloseGallery();\n        this.toggleMaximize();\n        this.initModules();\n    };\n    LightGallery.prototype.refreshOnResize = function() {\n        if (this.lgOpened) {\n            var currentGalleryItem = this.galleryItems[this.index];\n            var __slideVideoInfo = currentGalleryItem.__slideVideoInfo;\n            this.mediaContainerPosition = this.getMediaContainerPosition();\n            var _a = this.mediaContainerPosition, top_1 = _a.top, bottom = _a.bottom;\n            this.currentImageSize = $ae51a4f8a94c76e1$var$utils.getSize(this.items[this.index], this.outer, top_1 + bottom, __slideVideoInfo && this.settings.videoMaxSize);\n            if (__slideVideoInfo) this.resizeVideoSlide(this.index, this.currentImageSize);\n            if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\n                var imgStyle = this.getDummyImgStyles(this.currentImageSize);\n                this.outer.find(\".lg-current .lg-dummy-img\").first().attr(\"style\", imgStyle);\n            }\n            this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.containerResize);\n        }\n    };\n    LightGallery.prototype.resizeVideoSlide = function(index, imageSize) {\n        var lgVideoStyle = this.getVideoContStyle(imageSize);\n        var currentSlide = this.getSlideItem(index);\n        currentSlide.find(\".lg-video-cont\").attr(\"style\", lgVideoStyle);\n    };\n    /**\r\n     * Update slides dynamically.\r\n     * Add, edit or delete slides dynamically when lightGallery is opened.\r\n     * Modify the current gallery items and pass it via updateSlides method\r\n     * @note\r\n     * - Do not mutate existing lightGallery items directly.\r\n     * - Always pass new list of gallery items\r\n     * - You need to take care of thumbnails outside the gallery if any\r\n     * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.\r\n     * @param items Gallery items\r\n     * @param index After the update operation, which slide gallery should navigate to\r\n     * @category lGPublicMethods\r\n     * @example\r\n     * const plugin = lightGallery();\r\n     *\r\n     * // Adding slides dynamically\r\n     * let galleryItems = [\r\n     * // Access existing lightGallery items\r\n     * // galleryItems are automatically generated internally from the gallery HTML markup\r\n     * // or directly from galleryItems when dynamic gallery is used\r\n     *   ...plugin.galleryItems,\r\n     *     ...[\r\n     *       {\r\n     *         src: 'img/img-1.png',\r\n     *           thumb: 'img/thumb1.png',\r\n     *         },\r\n     *     ],\r\n     *   ];\r\n     *   plugin.updateSlides(\r\n     *     galleryItems,\r\n     *     plugin.index,\r\n     *   );\r\n     *\r\n     *\r\n     * // Remove slides dynamically\r\n     * galleryItems = JSON.parse(\r\n     *   JSON.stringify(updateSlideInstance.galleryItems),\r\n     * );\r\n     * galleryItems.shift();\r\n     * updateSlideInstance.updateSlides(galleryItems, 1);\r\n     * @see <a href=\"/demos/update-slides/\">Demo</a>\r\n     */ LightGallery.prototype.updateSlides = function(items, index) {\n        if (this.index > items.length - 1) this.index = items.length - 1;\n        if (items.length === 1) this.index = 0;\n        if (!items.length) {\n            this.closeGallery();\n            return;\n        }\n        var currentSrc = this.galleryItems[index].src;\n        this.galleryItems = items;\n        this.updateControls();\n        this.$inner.empty();\n        this.currentItemsInDom = [];\n        var _index = 0;\n        // Find the current index based on source value of the slide\n        this.galleryItems.some(function(galleryItem, itemIndex) {\n            if (galleryItem.src === currentSrc) {\n                _index = itemIndex;\n                return true;\n            }\n            return false;\n        });\n        this.currentItemsInDom = this.organizeSlideItems(_index, -1);\n        this.loadContent(_index, true);\n        this.getSlideItem(_index).addClass(\"lg-current\");\n        this.index = _index;\n        this.updateCurrentCounter(_index);\n        this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.updateSlides);\n    };\n    // Get gallery items based on multiple conditions\n    LightGallery.prototype.getItems = function() {\n        // Gallery items\n        this.items = [];\n        if (!this.settings.dynamic) {\n            if (this.settings.selector === \"this\") this.items.push(this.el);\n            else if (this.settings.selector) {\n                if (typeof this.settings.selector === \"string\") {\n                    if (this.settings.selectWithin) {\n                        var selectWithin = $ae51a4f8a94c76e1$var$$LG(this.settings.selectWithin);\n                        this.items = selectWithin.find(this.settings.selector).get();\n                    } else this.items = this.el.querySelectorAll(this.settings.selector);\n                } else this.items = this.settings.selector;\n            } else this.items = this.el.children;\n            return $ae51a4f8a94c76e1$var$utils.getDynamicOptions(this.items, this.settings.extraProps, this.settings.getCaptionFromTitleOrAlt, this.settings.exThumbImage);\n        } else return this.settings.dynamicEl || [];\n    };\n    LightGallery.prototype.shouldHideScrollbar = function() {\n        return this.settings.hideScrollbar && document.body === this.settings.container;\n    };\n    LightGallery.prototype.hideScrollbar = function() {\n        if (!this.shouldHideScrollbar()) return;\n        this.bodyPaddingRight = parseFloat($ae51a4f8a94c76e1$var$$LG(\"body\").style().paddingRight);\n        var bodyRect = document.documentElement.getBoundingClientRect();\n        var scrollbarWidth = window.innerWidth - bodyRect.width;\n        $ae51a4f8a94c76e1$var$$LG(document.body).css(\"padding-right\", scrollbarWidth + this.bodyPaddingRight + \"px\");\n        $ae51a4f8a94c76e1$var$$LG(document.body).addClass(\"lg-overlay-open\");\n    };\n    LightGallery.prototype.resetScrollBar = function() {\n        if (!this.shouldHideScrollbar()) return;\n        $ae51a4f8a94c76e1$var$$LG(document.body).css(\"padding-right\", this.bodyPaddingRight + \"px\");\n        $ae51a4f8a94c76e1$var$$LG(document.body).removeClass(\"lg-overlay-open\");\n    };\n    /**\r\n     * Open lightGallery.\r\n     * Open gallery with specific slide by passing index of the slide as parameter.\r\n     * @category lGPublicMethods\r\n     * @param {Number} index  - index of the slide\r\n     * @param {HTMLElement} element - Which image lightGallery should zoom from\r\n     *\r\n     * @example\r\n     * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\r\n     * const dynamicGallery = lightGallery($dynamicGallery, {\r\n     *     dynamic: true,\r\n     *     dynamicEl: [\r\n     *         {\r\n     *              src: 'img/1.jpg',\r\n     *              thumb: 'img/thumb-1.jpg',\r\n     *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\r\n     *         },\r\n     *         ...\r\n     *     ],\r\n     * });\r\n     * $dynamicGallery.addEventListener('click', function () {\r\n     *     // Starts with third item.(Optional).\r\n     *     // This is useful if you want use dynamic mode with\r\n     *     // custom thumbnails (thumbnails outside gallery),\r\n     *     dynamicGallery.openGallery(2);\r\n     * });\r\n     *\r\n     */ LightGallery.prototype.openGallery = function(index, element) {\n        var _this = this;\n        if (index === void 0) index = this.settings.index;\n        // prevent accidental double execution\n        if (this.lgOpened) return;\n        this.lgOpened = true;\n        this.outer.removeClass(\"lg-hide-items\");\n        this.hideScrollbar();\n        // Add display block, but still has opacity 0\n        this.$container.addClass(\"lg-show\");\n        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, index);\n        this.currentItemsInDom = itemsToBeInsertedToDom;\n        var items = \"\";\n        itemsToBeInsertedToDom.forEach(function(item) {\n            items = items + ('<div id=\"' + item + '\" class=\"lg-item\"></div>');\n        });\n        this.$inner.append(items);\n        this.addHtml(index);\n        var transform = \"\";\n        this.mediaContainerPosition = this.getMediaContainerPosition();\n        var _a = this.mediaContainerPosition, top = _a.top, bottom = _a.bottom;\n        if (!this.settings.allowMediaOverlap) this.setMediaContainerPosition(top, bottom);\n        var __slideVideoInfo = this.galleryItems[index].__slideVideoInfo;\n        if (this.zoomFromOrigin && element) {\n            this.currentImageSize = $ae51a4f8a94c76e1$var$utils.getSize(element, this.outer, top + bottom, __slideVideoInfo && this.settings.videoMaxSize);\n            transform = $ae51a4f8a94c76e1$var$utils.getTransform(element, this.outer, top, bottom, this.currentImageSize);\n        }\n        if (!this.zoomFromOrigin || !transform) {\n            this.outer.addClass(this.settings.startClass);\n            this.getSlideItem(index).removeClass(\"lg-complete\");\n        }\n        var timeout = this.settings.zoomFromOrigin ? 100 : this.settings.backdropDuration;\n        setTimeout(function() {\n            _this.outer.addClass(\"lg-components-open\");\n        }, timeout);\n        this.index = index;\n        this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.beforeOpen);\n        // add class lg-current to remove initial transition\n        this.getSlideItem(index).addClass(\"lg-current\");\n        this.lGalleryOn = false;\n        // Store the current scroll top value to scroll back after closing the gallery..\n        this.prevScrollTop = $ae51a4f8a94c76e1$var$$LG(window).scrollTop();\n        setTimeout(function() {\n            // Need to check both zoomFromOrigin and transform values as we need to set set the\n            // default opening animation if user missed to add the lg-size attribute\n            if (_this.zoomFromOrigin && transform) {\n                var currentSlide_1 = _this.getSlideItem(index);\n                currentSlide_1.css(\"transform\", transform);\n                setTimeout(function() {\n                    currentSlide_1.addClass(\"lg-start-progress lg-start-end-progress\").css(\"transition-duration\", _this.settings.startAnimationDuration + \"ms\");\n                    _this.outer.addClass(\"lg-zoom-from-image\");\n                });\n                setTimeout(function() {\n                    currentSlide_1.css(\"transform\", \"translate3d(0, 0, 0)\");\n                }, 100);\n            }\n            setTimeout(function() {\n                _this.$backdrop.addClass(\"in\");\n                _this.$container.addClass(\"lg-show-in\");\n            }, 10);\n            setTimeout(function() {\n                if (_this.settings.trapFocus && document.body === _this.settings.container) _this.trapFocus();\n            }, _this.settings.backdropDuration + 50);\n            // lg-visible class resets gallery opacity to 1\n            if (!_this.zoomFromOrigin || !transform) setTimeout(function() {\n                _this.outer.addClass(\"lg-visible\");\n            }, _this.settings.backdropDuration);\n            // initiate slide function\n            _this.slide(index, false, false, false);\n            _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.afterOpen);\n        });\n        if (document.body === this.settings.container) $ae51a4f8a94c76e1$var$$LG(\"html\").addClass(\"lg-on\");\n    };\n    /**\r\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\r\n     * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\r\n     * if you have dynamic captions for each media,\r\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\r\n     */ LightGallery.prototype.getMediaContainerPosition = function() {\n        if (this.settings.allowMediaOverlap) return {\n            top: 0,\n            bottom: 0\n        };\n        var top = this.$toolbar.get().clientHeight || 0;\n        var subHtml = this.outer.find(\".lg-components .lg-sub-html\").get();\n        var captionHeight = this.settings.defaultCaptionHeight || subHtml && subHtml.clientHeight || 0;\n        var thumbContainer = this.outer.find(\".lg-thumb-outer\").get();\n        var thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\n        var bottom = thumbHeight + captionHeight;\n        return {\n            top: top,\n            bottom: bottom\n        };\n    };\n    LightGallery.prototype.setMediaContainerPosition = function(top, bottom) {\n        if (top === void 0) top = 0;\n        if (bottom === void 0) bottom = 0;\n        this.$content.css(\"top\", top + \"px\").css(\"bottom\", bottom + \"px\");\n    };\n    LightGallery.prototype.hideBars = function() {\n        var _this = this;\n        // Hide controllers if mouse doesn't move for some period\n        setTimeout(function() {\n            _this.outer.removeClass(\"lg-hide-items\");\n            if (_this.settings.hideBarsDelay > 0) {\n                _this.outer.on(\"mousemove.lg click.lg touchstart.lg\", function() {\n                    _this.outer.removeClass(\"lg-hide-items\");\n                    clearTimeout(_this.hideBarTimeout);\n                    // Timeout will be cleared on each slide movement also\n                    _this.hideBarTimeout = setTimeout(function() {\n                        _this.outer.addClass(\"lg-hide-items\");\n                    }, _this.settings.hideBarsDelay);\n                });\n                _this.outer.trigger(\"mousemove.lg\");\n            }\n        }, this.settings.showBarsAfter);\n    };\n    LightGallery.prototype.initPictureFill = function($img) {\n        if (this.settings.supportLegacyBrowser) try {\n            picturefill({\n                elements: [\n                    $img.get()\n                ]\n            });\n        } catch (e) {\n            console.warn(\"lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.\");\n        }\n    };\n    /**\r\n     *  @desc Create image counter\r\n     *  Ex: 1/10\r\n     */ LightGallery.prototype.counter = function() {\n        if (this.settings.counter) {\n            var counterHtml = '<div class=\"lg-counter\" role=\"status\" aria-live=\"polite\">\\n                <span id=\"' + this.getIdName(\"lg-counter-current\") + '\" class=\"lg-counter-current\">' + (this.index + 1) + ' </span> /\\n                <span id=\"' + this.getIdName(\"lg-counter-all\") + '\" class=\"lg-counter-all\">' + this.galleryItems.length + \" </span></div>\";\n            this.outer.find(this.settings.appendCounterTo).append(counterHtml);\n        }\n    };\n    /**\r\n     *  @desc add sub-html into the slide\r\n     *  @param {Number} index - index of the slide\r\n     */ LightGallery.prototype.addHtml = function(index) {\n        var subHtml;\n        var subHtmlUrl;\n        if (this.galleryItems[index].subHtmlUrl) subHtmlUrl = this.galleryItems[index].subHtmlUrl;\n        else subHtml = this.galleryItems[index].subHtml;\n        if (!subHtmlUrl) {\n            if (subHtml) {\n                // get first letter of sub-html\n                // if first letter starts with . or # get the html form the jQuery object\n                var fL = subHtml.substring(0, 1);\n                if (fL === \".\" || fL === \"#\") {\n                    if (this.settings.subHtmlSelectorRelative && !this.settings.dynamic) subHtml = $ae51a4f8a94c76e1$var$$LG(this.items).eq(index).find(subHtml).first().html();\n                    else subHtml = $ae51a4f8a94c76e1$var$$LG(subHtml).first().html();\n                }\n            } else subHtml = \"\";\n        }\n        if (this.settings.appendSubHtmlTo !== \".lg-item\") {\n            if (subHtmlUrl) this.outer.find(\".lg-sub-html\").load(subHtmlUrl);\n            else this.outer.find(\".lg-sub-html\").html(subHtml);\n        } else {\n            var currentSlide = $ae51a4f8a94c76e1$var$$LG(this.getSlideItemId(index));\n            if (subHtmlUrl) currentSlide.load(subHtmlUrl);\n            else currentSlide.append('<div class=\"lg-sub-html\">' + subHtml + \"</div>\");\n        }\n        // Add lg-empty-html class if title doesn't exist\n        if (typeof subHtml !== \"undefined\" && subHtml !== null) {\n            if (subHtml === \"\") this.outer.find(this.settings.appendSubHtmlTo).addClass(\"lg-empty-html\");\n            else this.outer.find(this.settings.appendSubHtmlTo).removeClass(\"lg-empty-html\");\n        }\n        this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.afterAppendSubHtml, {\n            index: index\n        });\n    };\n    /**\r\n     *  @desc Preload slides\r\n     *  @param {Number} index - index of the slide\r\n     * @todo preload not working for the first slide, Also, should work for the first and last slide as well\r\n     */ LightGallery.prototype.preload = function(index) {\n        for(var i = 1; i <= this.settings.preload; i++){\n            if (i >= this.galleryItems.length - index) break;\n            this.loadContent(index + i, false);\n        }\n        for(var j = 1; j <= this.settings.preload; j++){\n            if (index - j < 0) break;\n            this.loadContent(index - j, false);\n        }\n    };\n    LightGallery.prototype.getDummyImgStyles = function(imageSize) {\n        if (!imageSize) return \"\";\n        return \"width:\" + imageSize.width + \"px;\\n                margin-left: -\" + imageSize.width / 2 + \"px;\\n                margin-top: -\" + imageSize.height / 2 + \"px;\\n                height:\" + imageSize.height + \"px\";\n    };\n    LightGallery.prototype.getVideoContStyle = function(imageSize) {\n        if (!imageSize) return \"\";\n        return \"width:\" + imageSize.width + \"px;\\n                height:\" + imageSize.height + \"px\";\n    };\n    LightGallery.prototype.getDummyImageContent = function($currentSlide, index, alt) {\n        var $currentItem;\n        if (!this.settings.dynamic) $currentItem = $ae51a4f8a94c76e1$var$$LG(this.items).eq(index);\n        if ($currentItem) {\n            var _dummyImgSrc = void 0;\n            if (!this.settings.exThumbImage) _dummyImgSrc = $currentItem.find(\"img\").first().attr(\"src\");\n            else _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\n            if (!_dummyImgSrc) return \"\";\n            var imgStyle = this.getDummyImgStyles(this.currentImageSize);\n            var dummyImgContent = \"<img \" + alt + ' style=\"' + imgStyle + '\" class=\"lg-dummy-img\" src=\"' + _dummyImgSrc + '\" />';\n            $currentSlide.addClass(\"lg-first-slide\");\n            this.outer.addClass(\"lg-first-slide-loading\");\n            return dummyImgContent;\n        }\n        return \"\";\n    };\n    LightGallery.prototype.setImgMarkup = function(src, $currentSlide, index) {\n        var currentGalleryItem = this.galleryItems[index];\n        var alt = currentGalleryItem.alt, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\n        // Use the thumbnail as dummy image which will be resized to actual image size and\n        // displayed on top of actual image\n        var imgContent = \"\";\n        var altAttr = alt ? 'alt=\"' + alt + '\"' : \"\";\n        if (this.isFirstSlideWithZoomAnimation()) imgContent = this.getDummyImageContent($currentSlide, index, altAttr);\n        else imgContent = $ae51a4f8a94c76e1$var$utils.getImgMarkup(index, src, altAttr, srcset, sizes, sources);\n        var imgMarkup = '<picture class=\"lg-img-wrap\"> ' + imgContent + \"</picture>\";\n        $currentSlide.prepend(imgMarkup);\n    };\n    LightGallery.prototype.onSlideObjectLoad = function($slide, isHTML5VideoWithoutPoster, onLoad, onError) {\n        var mediaObject = $slide.find(\".lg-object\").first();\n        if ($ae51a4f8a94c76e1$var$utils.isImageLoaded(mediaObject.get()) || isHTML5VideoWithoutPoster) onLoad();\n        else {\n            mediaObject.on(\"load.lg error.lg\", function() {\n                onLoad && onLoad();\n            });\n            mediaObject.on(\"error.lg\", function() {\n                onError && onError();\n            });\n        }\n    };\n    /**\r\n     *\r\n     * @param $el Current slide item\r\n     * @param index\r\n     * @param delay Delay is 0 except first time\r\n     * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin\r\n     * @param isFirstSlide\r\n     */ LightGallery.prototype.onLgObjectLoad = function(currentSlide, index, delay, speed, isFirstSlide, isHTML5VideoWithoutPoster) {\n        var _this = this;\n        this.onSlideObjectLoad(currentSlide, isHTML5VideoWithoutPoster, function() {\n            _this.triggerSlideItemLoad(currentSlide, index, delay, speed, isFirstSlide);\n        }, function() {\n            currentSlide.addClass(\"lg-complete lg-complete_\");\n            currentSlide.html('<span class=\"lg-error-msg\">' + _this.settings.strings[\"mediaLoadingFailed\"] + \"</span>\");\n        });\n    };\n    LightGallery.prototype.triggerSlideItemLoad = function($currentSlide, index, delay, speed, isFirstSlide) {\n        var _this = this;\n        var currentGalleryItem = this.galleryItems[index];\n        // Adding delay for video slides without poster for better performance and user experience\n        // Videos should start playing once once the gallery is completely loaded\n        var _speed = isFirstSlide && this.getSlideType(currentGalleryItem) === \"video\" && !currentGalleryItem.poster ? speed : 0;\n        setTimeout(function() {\n            $currentSlide.addClass(\"lg-complete lg-complete_\");\n            _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.slideItemLoad, {\n                index: index,\n                delay: delay || 0,\n                isFirstSlide: isFirstSlide\n            });\n        }, _speed);\n    };\n    LightGallery.prototype.isFirstSlideWithZoomAnimation = function() {\n        return !!(!this.lGalleryOn && this.zoomFromOrigin && this.currentImageSize);\n    };\n    // Add video slideInfo\n    LightGallery.prototype.addSlideVideoInfo = function(items) {\n        var _this = this;\n        items.forEach(function(element, index) {\n            element.__slideVideoInfo = $ae51a4f8a94c76e1$var$utils.isVideo(element.src, !!element.video, index);\n            if (element.__slideVideoInfo && _this.settings.loadYouTubePoster && !element.poster && element.__slideVideoInfo.youtube) element.poster = \"//img.youtube.com/vi/\" + element.__slideVideoInfo.youtube[1] + \"/maxresdefault.jpg\";\n        });\n    };\n    /**\r\n     *  Load slide content into slide.\r\n     *  This is used to load content into slides that is not visible too\r\n     *  @param {Number} index - index of the slide.\r\n     *  @param {Boolean} rec - if true call loadcontent() function again.\r\n     */ LightGallery.prototype.loadContent = function(index, rec) {\n        var _this = this;\n        var currentGalleryItem = this.galleryItems[index];\n        var $currentSlide = $ae51a4f8a94c76e1$var$$LG(this.getSlideItemId(index));\n        var poster = currentGalleryItem.poster, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\n        var src = currentGalleryItem.src;\n        var video = currentGalleryItem.video;\n        var _html5Video = video && typeof video === \"string\" ? JSON.parse(video) : video;\n        if (currentGalleryItem.responsive) {\n            var srcDyItms = currentGalleryItem.responsive.split(\",\");\n            src = $ae51a4f8a94c76e1$var$utils.getResponsiveSrc(srcDyItms) || src;\n        }\n        var videoInfo = currentGalleryItem.__slideVideoInfo;\n        var lgVideoStyle = \"\";\n        var iframe = !!currentGalleryItem.iframe;\n        var isFirstSlide = !this.lGalleryOn;\n        // delay for adding complete class. it is 0 except first time.\n        var delay = 0;\n        if (isFirstSlide) {\n            if (this.zoomFromOrigin && this.currentImageSize) delay = this.settings.startAnimationDuration + 10;\n            else delay = this.settings.backdropDuration + 10;\n        }\n        if (!$currentSlide.hasClass(\"lg-loaded\")) {\n            if (videoInfo) {\n                var _a = this.mediaContainerPosition, top_2 = _a.top, bottom = _a.bottom;\n                var videoSize = $ae51a4f8a94c76e1$var$utils.getSize(this.items[index], this.outer, top_2 + bottom, videoInfo && this.settings.videoMaxSize);\n                lgVideoStyle = this.getVideoContStyle(videoSize);\n            }\n            if (iframe) {\n                var markup = $ae51a4f8a94c76e1$var$utils.getIframeMarkup(this.settings.iframeWidth, this.settings.iframeHeight, this.settings.iframeMaxWidth, this.settings.iframeMaxHeight, src, currentGalleryItem.iframeTitle);\n                $currentSlide.prepend(markup);\n            } else if (poster) {\n                var dummyImg = \"\";\n                var hasStartAnimation = isFirstSlide && this.zoomFromOrigin && this.currentImageSize;\n                if (hasStartAnimation) dummyImg = this.getDummyImageContent($currentSlide, index, \"\");\n                var markup = $ae51a4f8a94c76e1$var$utils.getVideoPosterMarkup(poster, dummyImg || \"\", lgVideoStyle, this.settings.strings[\"playVideo\"], videoInfo);\n                $currentSlide.prepend(markup);\n            } else if (videoInfo) {\n                var markup = '<div class=\"lg-video-cont \" style=\"' + lgVideoStyle + '\"></div>';\n                $currentSlide.prepend(markup);\n            } else {\n                this.setImgMarkup(src, $currentSlide, index);\n                if (srcset || sources) {\n                    var $img = $currentSlide.find(\".lg-object\");\n                    this.initPictureFill($img);\n                }\n            }\n            if (poster || videoInfo) this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.hasVideo, {\n                index: index,\n                src: src,\n                html5Video: _html5Video,\n                hasPoster: !!poster\n            });\n            this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.afterAppendSlide, {\n                index: index\n            });\n            if (this.lGalleryOn && this.settings.appendSubHtmlTo === \".lg-item\") this.addHtml(index);\n        }\n        // For first time add some delay for displaying the start animation.\n        var _speed = 0;\n        // Do not change the delay value because it is required for zoom plugin.\n        // If gallery opened from direct url (hash) speed value should be 0\n        if (delay && !$ae51a4f8a94c76e1$var$$LG(document.body).hasClass(\"lg-from-hash\")) _speed = delay;\n        // Only for first slide and zoomFromOrigin is enabled\n        if (this.isFirstSlideWithZoomAnimation()) {\n            setTimeout(function() {\n                $currentSlide.removeClass(\"lg-start-end-progress lg-start-progress\").removeAttr(\"style\");\n            }, this.settings.startAnimationDuration + 100);\n            if (!$currentSlide.hasClass(\"lg-loaded\")) setTimeout(function() {\n                if (_this.getSlideType(currentGalleryItem) === \"image\") {\n                    var alt = currentGalleryItem.alt;\n                    var altAttr = alt ? 'alt=\"' + alt + '\"' : \"\";\n                    $currentSlide.find(\".lg-img-wrap\").append($ae51a4f8a94c76e1$var$utils.getImgMarkup(index, src, altAttr, srcset, sizes, currentGalleryItem.sources));\n                    if (srcset || sources) {\n                        var $img = $currentSlide.find(\".lg-object\");\n                        _this.initPictureFill($img);\n                    }\n                }\n                if (_this.getSlideType(currentGalleryItem) === \"image\" || _this.getSlideType(currentGalleryItem) === \"video\" && poster) {\n                    _this.onLgObjectLoad($currentSlide, index, delay, _speed, true, false);\n                    // load remaining slides once the slide is completely loaded\n                    _this.onSlideObjectLoad($currentSlide, !!(videoInfo && videoInfo.html5 && !poster), function() {\n                        _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\n                    }, function() {\n                        _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\n                    });\n                }\n            }, this.settings.startAnimationDuration + 100);\n        }\n        // SLide content has been added to dom\n        $currentSlide.addClass(\"lg-loaded\");\n        if (!this.isFirstSlideWithZoomAnimation() || this.getSlideType(currentGalleryItem) === \"video\" && !poster) this.onLgObjectLoad($currentSlide, index, delay, _speed, isFirstSlide, !!(videoInfo && videoInfo.html5 && !poster));\n        // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\n        if ((!this.zoomFromOrigin || !this.currentImageSize) && $currentSlide.hasClass(\"lg-complete_\") && !this.lGalleryOn) setTimeout(function() {\n            $currentSlide.addClass(\"lg-complete\");\n        }, this.settings.backdropDuration);\n        // Content loaded\n        // Need to set lGalleryOn before calling preload function\n        this.lGalleryOn = true;\n        if (rec === true) {\n            if (!$currentSlide.hasClass(\"lg-complete_\")) $currentSlide.find(\".lg-object\").first().on(\"load.lg error.lg\", function() {\n                _this.preload(index);\n            });\n            else this.preload(index);\n        }\n    };\n    /**\r\n     * @desc Remove dummy image content and load next slides\r\n     * Called only for the first time if zoomFromOrigin animation is enabled\r\n     * @param index\r\n     * @param $currentSlide\r\n     * @param speed\r\n     */ LightGallery.prototype.loadContentOnFirstSlideLoad = function(index, $currentSlide, speed) {\n        var _this = this;\n        setTimeout(function() {\n            $currentSlide.find(\".lg-dummy-img\").remove();\n            $currentSlide.removeClass(\"lg-first-slide\");\n            _this.outer.removeClass(\"lg-first-slide-loading\");\n            _this.isDummyImageRemoved = true;\n            _this.preload(index);\n        }, speed + 300);\n    };\n    LightGallery.prototype.getItemsToBeInsertedToDom = function(index, prevIndex, numberOfItems) {\n        var _this = this;\n        if (numberOfItems === void 0) numberOfItems = 0;\n        var itemsToBeInsertedToDom = [];\n        // Minimum 2 items should be there\n        var possibleNumberOfItems = Math.max(numberOfItems, 3);\n        possibleNumberOfItems = Math.min(possibleNumberOfItems, this.galleryItems.length);\n        var prevIndexItem = \"lg-item-\" + this.lgId + \"-\" + prevIndex;\n        if (this.galleryItems.length <= 3) {\n            this.galleryItems.forEach(function(_element, index) {\n                itemsToBeInsertedToDom.push(\"lg-item-\" + _this.lgId + \"-\" + index);\n            });\n            return itemsToBeInsertedToDom;\n        }\n        if (index < (this.galleryItems.length - 1) / 2) {\n            for(var idx = index; idx > index - possibleNumberOfItems / 2 && idx >= 0; idx--)itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\n            var numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for(var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++)itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index + idx + 1));\n        } else {\n            for(var idx = index; idx <= this.galleryItems.length - 1 && idx < index + possibleNumberOfItems / 2; idx++)itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\n            var numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for(var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++)itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index - idx - 1));\n        }\n        if (this.settings.loop) {\n            if (index === this.galleryItems.length - 1) itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + 0);\n            else if (index === 0) itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (this.galleryItems.length - 1));\n        }\n        if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + prevIndex);\n        return itemsToBeInsertedToDom;\n    };\n    LightGallery.prototype.organizeSlideItems = function(index, prevIndex) {\n        var _this = this;\n        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, prevIndex, this.settings.numberOfSlideItemsInDom);\n        itemsToBeInsertedToDom.forEach(function(item) {\n            if (_this.currentItemsInDom.indexOf(item) === -1) _this.$inner.append('<div id=\"' + item + '\" class=\"lg-item\"></div>');\n        });\n        this.currentItemsInDom.forEach(function(item) {\n            if (itemsToBeInsertedToDom.indexOf(item) === -1) $ae51a4f8a94c76e1$var$$LG(\"#\" + item).remove();\n        });\n        return itemsToBeInsertedToDom;\n    };\n    /**\r\n     * Get previous index of the slide\r\n     */ LightGallery.prototype.getPreviousSlideIndex = function() {\n        var prevIndex = 0;\n        try {\n            var currentItemId = this.outer.find(\".lg-current\").first().attr(\"id\");\n            prevIndex = parseInt(currentItemId.split(\"-\")[3]) || 0;\n        } catch (error) {\n            prevIndex = 0;\n        }\n        return prevIndex;\n    };\n    LightGallery.prototype.setDownloadValue = function(index) {\n        if (this.settings.download) {\n            var currentGalleryItem = this.galleryItems[index];\n            var hideDownloadBtn = currentGalleryItem.downloadUrl === false || currentGalleryItem.downloadUrl === \"false\";\n            if (hideDownloadBtn) this.outer.addClass(\"lg-hide-download\");\n            else {\n                var $download = this.getElementById(\"lg-download\");\n                this.outer.removeClass(\"lg-hide-download\");\n                $download.attr(\"href\", currentGalleryItem.downloadUrl || currentGalleryItem.src);\n                if (currentGalleryItem.download) $download.attr(\"download\", currentGalleryItem.download);\n            }\n        }\n    };\n    LightGallery.prototype.makeSlideAnimation = function(direction, currentSlideItem, previousSlideItem) {\n        var _this = this;\n        if (this.lGalleryOn) previousSlideItem.addClass(\"lg-slide-progress\");\n        setTimeout(function() {\n            // remove all transitions\n            _this.outer.addClass(\"lg-no-trans\");\n            _this.outer.find(\".lg-item\").removeClass(\"lg-prev-slide lg-next-slide\");\n            if (direction === \"prev\") {\n                //prevslide\n                currentSlideItem.addClass(\"lg-prev-slide\");\n                previousSlideItem.addClass(\"lg-next-slide\");\n            } else {\n                // next slide\n                currentSlideItem.addClass(\"lg-next-slide\");\n                previousSlideItem.addClass(\"lg-prev-slide\");\n            }\n            // give 50 ms for browser to add/remove class\n            setTimeout(function() {\n                _this.outer.find(\".lg-item\").removeClass(\"lg-current\");\n                currentSlideItem.addClass(\"lg-current\");\n                // reset all transitions\n                _this.outer.removeClass(\"lg-no-trans\");\n            }, 50);\n        }, this.lGalleryOn ? this.settings.slideDelay : 0);\n    };\n    /**\r\n     * Goto a specific slide.\r\n     * @param {Number} index - index of the slide\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\r\n     * @param {Boolean} fromThumb - true if slide function called via thumbnail click\r\n     * @param {String} direction - Direction of the slide(next/prev)\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  // to go to 3rd slide\r\n     *  plugin.slide(2);\r\n     *\r\n     */ LightGallery.prototype.slide = function(index, fromTouch, fromThumb, direction) {\n        var _this = this;\n        var prevIndex = this.getPreviousSlideIndex();\n        this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\n        // Prevent multiple call, Required for hsh plugin\n        if (this.lGalleryOn && prevIndex === index) return;\n        var numberOfGalleryItems = this.galleryItems.length;\n        if (!this.lgBusy) {\n            if (this.settings.counter) this.updateCurrentCounter(index);\n            var currentSlideItem = this.getSlideItem(index);\n            var previousSlideItem_1 = this.getSlideItem(prevIndex);\n            var currentGalleryItem = this.galleryItems[index];\n            var videoInfo = currentGalleryItem.__slideVideoInfo;\n            this.outer.attr(\"data-lg-slide-type\", this.getSlideType(currentGalleryItem));\n            this.setDownloadValue(index);\n            if (videoInfo) {\n                var _a = this.mediaContainerPosition, top_3 = _a.top, bottom = _a.bottom;\n                var videoSize = $ae51a4f8a94c76e1$var$utils.getSize(this.items[index], this.outer, top_3 + bottom, videoInfo && this.settings.videoMaxSize);\n                this.resizeVideoSlide(index, videoSize);\n            }\n            this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.beforeSlide, {\n                prevIndex: prevIndex,\n                index: index,\n                fromTouch: !!fromTouch,\n                fromThumb: !!fromThumb\n            });\n            this.lgBusy = true;\n            clearTimeout(this.hideBarTimeout);\n            this.arrowDisable(index);\n            if (!direction) {\n                if (index < prevIndex) direction = \"prev\";\n                else if (index > prevIndex) direction = \"next\";\n            }\n            if (!fromTouch) this.makeSlideAnimation(direction, currentSlideItem, previousSlideItem_1);\n            else {\n                this.outer.find(\".lg-item\").removeClass(\"lg-prev-slide lg-current lg-next-slide\");\n                var touchPrev = void 0;\n                var touchNext = void 0;\n                if (numberOfGalleryItems > 2) {\n                    touchPrev = index - 1;\n                    touchNext = index + 1;\n                    if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\n                        // next slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    } else if (index === numberOfGalleryItems - 1 && prevIndex === 0) {\n                        // prev slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    }\n                } else {\n                    touchPrev = 0;\n                    touchNext = 1;\n                }\n                if (direction === \"prev\") this.getSlideItem(touchNext).addClass(\"lg-next-slide\");\n                else this.getSlideItem(touchPrev).addClass(\"lg-prev-slide\");\n                currentSlideItem.addClass(\"lg-current\");\n            }\n            // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\n            if (!this.lGalleryOn) this.loadContent(index, true);\n            else setTimeout(function() {\n                _this.loadContent(index, true);\n                // Add title if this.settings.appendSubHtmlTo === lg-sub-html\n                if (_this.settings.appendSubHtmlTo !== \".lg-item\") _this.addHtml(index);\n            }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));\n            setTimeout(function() {\n                _this.lgBusy = false;\n                previousSlideItem_1.removeClass(\"lg-slide-progress\");\n                _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.afterSlide, {\n                    prevIndex: prevIndex,\n                    index: index,\n                    fromTouch: fromTouch,\n                    fromThumb: fromThumb\n                });\n            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\n        }\n        this.index = index;\n    };\n    LightGallery.prototype.updateCurrentCounter = function(index) {\n        this.getElementById(\"lg-counter-current\").html(index + 1 + \"\");\n    };\n    LightGallery.prototype.updateCounterTotal = function() {\n        this.getElementById(\"lg-counter-all\").html(this.galleryItems.length + \"\");\n    };\n    LightGallery.prototype.getSlideType = function(item) {\n        if (item.__slideVideoInfo) return \"video\";\n        else if (item.iframe) return \"iframe\";\n        else return \"image\";\n    };\n    LightGallery.prototype.touchMove = function(startCoords, endCoords, e) {\n        var distanceX = endCoords.pageX - startCoords.pageX;\n        var distanceY = endCoords.pageY - startCoords.pageY;\n        var allowSwipe = false;\n        if (this.swipeDirection) allowSwipe = true;\n        else {\n            if (Math.abs(distanceX) > 15) {\n                this.swipeDirection = \"horizontal\";\n                allowSwipe = true;\n            } else if (Math.abs(distanceY) > 15) {\n                this.swipeDirection = \"vertical\";\n                allowSwipe = true;\n            }\n        }\n        if (!allowSwipe) return;\n        var $currentSlide = this.getSlideItem(this.index);\n        if (this.swipeDirection === \"horizontal\") {\n            e === null || e === void 0 || e.preventDefault();\n            // reset opacity and transition duration\n            this.outer.addClass(\"lg-dragging\");\n            // move current slide\n            this.setTranslate($currentSlide, distanceX, 0);\n            // move next and prev slide with current slide\n            var width = $currentSlide.get().offsetWidth;\n            var slideWidthAmount = width * 15 / 100;\n            var gutter = slideWidthAmount - Math.abs(distanceX * 10 / 100);\n            this.setTranslate(this.outer.find(\".lg-prev-slide\").first(), -width + distanceX - gutter, 0);\n            this.setTranslate(this.outer.find(\".lg-next-slide\").first(), width + distanceX + gutter, 0);\n        } else if (this.swipeDirection === \"vertical\") {\n            if (this.settings.swipeToClose) {\n                e === null || e === void 0 || e.preventDefault();\n                this.$container.addClass(\"lg-dragging-vertical\");\n                var opacity = 1 - Math.abs(distanceY) / window.innerHeight;\n                this.$backdrop.css(\"opacity\", opacity);\n                var scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\n                this.setTranslate($currentSlide, 0, distanceY, scale, scale);\n                if (Math.abs(distanceY) > 100) this.outer.addClass(\"lg-hide-items\").removeClass(\"lg-components-open\");\n            }\n        }\n    };\n    LightGallery.prototype.touchEnd = function(endCoords, startCoords, event) {\n        var _this = this;\n        var distance;\n        // keep slide animation for any mode while dragg/swipe\n        if (this.settings.mode !== \"lg-slide\") this.outer.addClass(\"lg-slide\");\n        // set transition duration\n        setTimeout(function() {\n            _this.$container.removeClass(\"lg-dragging-vertical\");\n            _this.outer.removeClass(\"lg-dragging lg-hide-items\").addClass(\"lg-components-open\");\n            var triggerClick = true;\n            if (_this.swipeDirection === \"horizontal\") {\n                distance = endCoords.pageX - startCoords.pageX;\n                var distanceAbs = Math.abs(endCoords.pageX - startCoords.pageX);\n                if (distance < 0 && distanceAbs > _this.settings.swipeThreshold) {\n                    _this.goToNextSlide(true);\n                    triggerClick = false;\n                } else if (distance > 0 && distanceAbs > _this.settings.swipeThreshold) {\n                    _this.goToPrevSlide(true);\n                    triggerClick = false;\n                }\n            } else if (_this.swipeDirection === \"vertical\") {\n                distance = Math.abs(endCoords.pageY - startCoords.pageY);\n                if (_this.settings.closable && _this.settings.swipeToClose && distance > 100) {\n                    _this.closeGallery();\n                    return;\n                } else _this.$backdrop.css(\"opacity\", 1);\n            }\n            _this.outer.find(\".lg-item\").removeAttr(\"style\");\n            if (triggerClick && Math.abs(endCoords.pageX - startCoords.pageX) < 5) {\n                // Trigger click if distance is less than 5 pix\n                var target = $ae51a4f8a94c76e1$var$$LG(event.target);\n                if (_this.isPosterElement(target)) _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.posterClick);\n            }\n            _this.swipeDirection = undefined;\n        });\n        // remove slide class once drag/swipe is completed if mode is not slide\n        setTimeout(function() {\n            if (!_this.outer.hasClass(\"lg-dragging\") && _this.settings.mode !== \"lg-slide\") _this.outer.removeClass(\"lg-slide\");\n        }, this.settings.speed + 100);\n    };\n    LightGallery.prototype.enableSwipe = function() {\n        var _this = this;\n        var startCoords = {};\n        var endCoords = {};\n        var isMoved = false;\n        var isSwiping = false;\n        if (this.settings.enableSwipe) {\n            this.$inner.on(\"touchstart.lg\", function(e) {\n                _this.dragOrSwipeEnabled = true;\n                var $item = _this.getSlideItem(_this.index);\n                if (($ae51a4f8a94c76e1$var$$LG(e.target).hasClass(\"lg-item\") || $item.get().contains(e.target)) && !_this.outer.hasClass(\"lg-zoomed\") && !_this.lgBusy && e.touches.length === 1) {\n                    isSwiping = true;\n                    _this.touchAction = \"swipe\";\n                    _this.manageSwipeClass();\n                    startCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY\n                    };\n                }\n            });\n            this.$inner.on(\"touchmove.lg\", function(e) {\n                if (isSwiping && _this.touchAction === \"swipe\" && e.touches.length === 1) {\n                    endCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY\n                    };\n                    _this.touchMove(startCoords, endCoords, e);\n                    isMoved = true;\n                }\n            });\n            this.$inner.on(\"touchend.lg\", function(event) {\n                if (_this.touchAction === \"swipe\") {\n                    if (isMoved) {\n                        isMoved = false;\n                        _this.touchEnd(endCoords, startCoords, event);\n                    } else if (isSwiping) {\n                        var target = $ae51a4f8a94c76e1$var$$LG(event.target);\n                        if (_this.isPosterElement(target)) _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.posterClick);\n                    }\n                    _this.touchAction = undefined;\n                    isSwiping = false;\n                }\n            });\n        }\n    };\n    LightGallery.prototype.enableDrag = function() {\n        var _this = this;\n        var startCoords = {};\n        var endCoords = {};\n        var isDraging = false;\n        var isMoved = false;\n        if (this.settings.enableDrag) {\n            this.outer.on(\"mousedown.lg\", function(e) {\n                _this.dragOrSwipeEnabled = true;\n                var $item = _this.getSlideItem(_this.index);\n                if ($ae51a4f8a94c76e1$var$$LG(e.target).hasClass(\"lg-item\") || $item.get().contains(e.target)) {\n                    if (!_this.outer.hasClass(\"lg-zoomed\") && !_this.lgBusy) {\n                        e.preventDefault();\n                        if (!_this.lgBusy) {\n                            _this.manageSwipeClass();\n                            startCoords = {\n                                pageX: e.pageX,\n                                pageY: e.pageY\n                            };\n                            isDraging = true;\n                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                            _this.outer.get().scrollLeft += 1;\n                            _this.outer.get().scrollLeft -= 1;\n                            // *\n                            _this.outer.removeClass(\"lg-grab\").addClass(\"lg-grabbing\");\n                            _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.dragStart);\n                        }\n                    }\n                }\n            });\n            $ae51a4f8a94c76e1$var$$LG(window).on(\"mousemove.lg.global\" + this.lgId, function(e) {\n                if (isDraging && _this.lgOpened) {\n                    isMoved = true;\n                    endCoords = {\n                        pageX: e.pageX,\n                        pageY: e.pageY\n                    };\n                    _this.touchMove(startCoords, endCoords);\n                    _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.dragMove);\n                }\n            });\n            $ae51a4f8a94c76e1$var$$LG(window).on(\"mouseup.lg.global\" + this.lgId, function(event) {\n                if (!_this.lgOpened) return;\n                var target = $ae51a4f8a94c76e1$var$$LG(event.target);\n                if (isMoved) {\n                    isMoved = false;\n                    _this.touchEnd(endCoords, startCoords, event);\n                    _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.dragEnd);\n                } else if (_this.isPosterElement(target)) _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.posterClick);\n                // Prevent execution on click\n                if (isDraging) {\n                    isDraging = false;\n                    _this.outer.removeClass(\"lg-grabbing\").addClass(\"lg-grab\");\n                }\n            });\n        }\n    };\n    LightGallery.prototype.triggerPosterClick = function() {\n        var _this = this;\n        this.$inner.on(\"click.lg\", function(event) {\n            if (!_this.dragOrSwipeEnabled && _this.isPosterElement($ae51a4f8a94c76e1$var$$LG(event.target))) _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.posterClick);\n        });\n    };\n    LightGallery.prototype.manageSwipeClass = function() {\n        var _touchNext = this.index + 1;\n        var _touchPrev = this.index - 1;\n        if (this.settings.loop && this.galleryItems.length > 2) {\n            if (this.index === 0) _touchPrev = this.galleryItems.length - 1;\n            else if (this.index === this.galleryItems.length - 1) _touchNext = 0;\n        }\n        this.outer.find(\".lg-item\").removeClass(\"lg-next-slide lg-prev-slide\");\n        if (_touchPrev > -1) this.getSlideItem(_touchPrev).addClass(\"lg-prev-slide\");\n        this.getSlideItem(_touchNext).addClass(\"lg-next-slide\");\n    };\n    /**\r\n     * Go to next slide\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.goToNextSlide();\r\n     * @see <a href=\"/demos/methods/\">Demo</a>\r\n     */ LightGallery.prototype.goToNextSlide = function(fromTouch) {\n        var _this = this;\n        var _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) _loop = false;\n        if (!this.lgBusy) {\n            if (this.index + 1 < this.galleryItems.length) {\n                this.index++;\n                this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.beforeNextSlide, {\n                    index: this.index\n                });\n                this.slide(this.index, !!fromTouch, false, \"next\");\n            } else {\n                if (_loop) {\n                    this.index = 0;\n                    this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.beforeNextSlide, {\n                        index: this.index\n                    });\n                    this.slide(this.index, !!fromTouch, false, \"next\");\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass(\"lg-right-end\");\n                    setTimeout(function() {\n                        _this.outer.removeClass(\"lg-right-end\");\n                    }, 400);\n                }\n            }\n        }\n    };\n    /**\r\n     * Go to previous slides\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery({});\r\n     *  plugin.goToPrevSlide();\r\n     * @see <a href=\"/demos/methods/\">Demo</a>\r\n     *\r\n     */ LightGallery.prototype.goToPrevSlide = function(fromTouch) {\n        var _this = this;\n        var _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) _loop = false;\n        if (!this.lgBusy) {\n            if (this.index > 0) {\n                this.index--;\n                this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.beforePrevSlide, {\n                    index: this.index,\n                    fromTouch: fromTouch\n                });\n                this.slide(this.index, !!fromTouch, false, \"prev\");\n            } else {\n                if (_loop) {\n                    this.index = this.galleryItems.length - 1;\n                    this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.beforePrevSlide, {\n                        index: this.index,\n                        fromTouch: fromTouch\n                    });\n                    this.slide(this.index, !!fromTouch, false, \"prev\");\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass(\"lg-left-end\");\n                    setTimeout(function() {\n                        _this.outer.removeClass(\"lg-left-end\");\n                    }, 400);\n                }\n            }\n        }\n    };\n    LightGallery.prototype.keyPress = function() {\n        var _this = this;\n        $ae51a4f8a94c76e1$var$$LG(window).on(\"keydown.lg.global\" + this.lgId, function(e) {\n            if (_this.lgOpened && _this.settings.escKey === true && e.keyCode === 27) {\n                e.preventDefault();\n                if (_this.settings.allowMediaOverlap && _this.outer.hasClass(\"lg-can-toggle\") && _this.outer.hasClass(\"lg-components-open\")) _this.outer.removeClass(\"lg-components-open\");\n                else _this.closeGallery();\n            }\n            if (_this.lgOpened && _this.galleryItems.length > 1) {\n                if (e.keyCode === 37) {\n                    e.preventDefault();\n                    _this.goToPrevSlide();\n                }\n                if (e.keyCode === 39) {\n                    e.preventDefault();\n                    _this.goToNextSlide();\n                }\n            }\n        });\n    };\n    LightGallery.prototype.arrow = function() {\n        var _this = this;\n        this.getElementById(\"lg-prev\").on(\"click.lg\", function() {\n            _this.goToPrevSlide();\n        });\n        this.getElementById(\"lg-next\").on(\"click.lg\", function() {\n            _this.goToNextSlide();\n        });\n    };\n    LightGallery.prototype.arrowDisable = function(index) {\n        // Disable arrows if settings.hideControlOnEnd is true\n        if (!this.settings.loop && this.settings.hideControlOnEnd) {\n            var $prev = this.getElementById(\"lg-prev\");\n            var $next = this.getElementById(\"lg-next\");\n            if (index + 1 === this.galleryItems.length) $next.attr(\"disabled\", \"disabled\").addClass(\"disabled\");\n            else $next.removeAttr(\"disabled\").removeClass(\"disabled\");\n            if (index === 0) $prev.attr(\"disabled\", \"disabled\").addClass(\"disabled\");\n            else $prev.removeAttr(\"disabled\").removeClass(\"disabled\");\n        }\n    };\n    LightGallery.prototype.setTranslate = function($el, xValue, yValue, scaleX, scaleY) {\n        if (scaleX === void 0) scaleX = 1;\n        if (scaleY === void 0) scaleY = 1;\n        $el.css(\"transform\", \"translate3d(\" + xValue + \"px, \" + yValue + \"px, 0px) scale3d(\" + scaleX + \", \" + scaleY + \", 1)\");\n    };\n    LightGallery.prototype.mousewheel = function() {\n        var _this = this;\n        var lastCall = 0;\n        this.outer.on(\"wheel.lg\", function(e) {\n            if (!e.deltaY || _this.galleryItems.length < 2) return;\n            e.preventDefault();\n            var now = new Date().getTime();\n            if (now - lastCall < 1000) return;\n            lastCall = now;\n            if (e.deltaY > 0) _this.goToNextSlide();\n            else if (e.deltaY < 0) _this.goToPrevSlide();\n        });\n    };\n    LightGallery.prototype.isSlideElement = function(target) {\n        return target.hasClass(\"lg-outer\") || target.hasClass(\"lg-item\") || target.hasClass(\"lg-img-wrap\");\n    };\n    LightGallery.prototype.isPosterElement = function(target) {\n        var playButton = this.getSlideItem(this.index).find(\".lg-video-play-button\").get();\n        return target.hasClass(\"lg-video-poster\") || target.hasClass(\"lg-video-play-button\") || playButton && playButton.contains(target.get());\n    };\n    /**\r\n     * Maximize minimize inline gallery.\r\n     * @category lGPublicMethods\r\n     */ LightGallery.prototype.toggleMaximize = function() {\n        var _this = this;\n        this.getElementById(\"lg-maximize\").on(\"click.lg\", function() {\n            _this.$container.toggleClass(\"lg-inline\");\n            _this.refreshOnResize();\n        });\n    };\n    LightGallery.prototype.invalidateItems = function() {\n        for(var index = 0; index < this.items.length; index++){\n            var element = this.items[index];\n            var $element = $ae51a4f8a94c76e1$var$$LG(element);\n            $element.off(\"click.lgcustom-item-\" + $element.attr(\"data-lg-id\"));\n        }\n    };\n    LightGallery.prototype.trapFocus = function() {\n        var _this = this;\n        this.$container.get().focus({\n            preventScroll: true\n        });\n        $ae51a4f8a94c76e1$var$$LG(window).on(\"keydown.lg.global\" + this.lgId, function(e) {\n            if (!_this.lgOpened) return;\n            var isTabPressed = e.key === \"Tab\" || e.keyCode === 9;\n            if (!isTabPressed) return;\n            var focusableEls = $ae51a4f8a94c76e1$var$utils.getFocusableElements(_this.$container.get());\n            var firstFocusableEl = focusableEls[0];\n            var lastFocusableEl = focusableEls[focusableEls.length - 1];\n            if (e.shiftKey) {\n                if (document.activeElement === firstFocusableEl) {\n                    lastFocusableEl.focus();\n                    e.preventDefault();\n                }\n            } else if (document.activeElement === lastFocusableEl) {\n                firstFocusableEl.focus();\n                e.preventDefault();\n            }\n        });\n    };\n    LightGallery.prototype.manageCloseGallery = function() {\n        var _this = this;\n        if (!this.settings.closable) return;\n        var mousedown = false;\n        this.getElementById(\"lg-close\").on(\"click.lg\", function() {\n            _this.closeGallery();\n        });\n        if (this.settings.closeOnTap) {\n            // If you drag the slide and release outside gallery gets close on chrome\n            // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\n            this.outer.on(\"mousedown.lg\", function(e) {\n                var target = $ae51a4f8a94c76e1$var$$LG(e.target);\n                if (_this.isSlideElement(target)) mousedown = true;\n                else mousedown = false;\n            });\n            this.outer.on(\"mousemove.lg\", function() {\n                mousedown = false;\n            });\n            this.outer.on(\"mouseup.lg\", function(e) {\n                var target = $ae51a4f8a94c76e1$var$$LG(e.target);\n                if (_this.isSlideElement(target) && mousedown) {\n                    if (!_this.outer.hasClass(\"lg-dragging\")) _this.closeGallery();\n                }\n            });\n        }\n    };\n    /**\r\n     * Close lightGallery if it is opened.\r\n     *\r\n     * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\r\n     * @return returns the estimated time to close gallery completely including the close animation duration\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.closeGallery();\r\n     *\r\n     */ LightGallery.prototype.closeGallery = function(force) {\n        var _this = this;\n        if (!this.lgOpened || !this.settings.closable && !force) return 0;\n        this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.beforeClose);\n        if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) $ae51a4f8a94c76e1$var$$LG(window).scrollTop(this.prevScrollTop);\n        var currentItem = this.items[this.index];\n        var transform;\n        if (this.zoomFromOrigin && currentItem) {\n            var _a = this.mediaContainerPosition, top_4 = _a.top, bottom = _a.bottom;\n            var _b = this.galleryItems[this.index], __slideVideoInfo = _b.__slideVideoInfo, poster = _b.poster;\n            var imageSize = $ae51a4f8a94c76e1$var$utils.getSize(currentItem, this.outer, top_4 + bottom, __slideVideoInfo && poster && this.settings.videoMaxSize);\n            transform = $ae51a4f8a94c76e1$var$utils.getTransform(currentItem, this.outer, top_4, bottom, imageSize);\n        }\n        if (this.zoomFromOrigin && transform) {\n            this.outer.addClass(\"lg-closing lg-zoom-from-image\");\n            this.getSlideItem(this.index).addClass(\"lg-start-end-progress\").css(\"transition-duration\", this.settings.startAnimationDuration + \"ms\").css(\"transform\", transform);\n        } else {\n            this.outer.addClass(\"lg-hide-items\");\n            // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\n            // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\n            this.outer.removeClass(\"lg-zoom-from-image\");\n        }\n        // Unbind all events added by lightGallery\n        // @todo\n        //this.$el.off('.lg.tm');\n        this.destroyModules();\n        this.lGalleryOn = false;\n        this.isDummyImageRemoved = false;\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n        clearTimeout(this.hideBarTimeout);\n        this.hideBarTimeout = false;\n        $ae51a4f8a94c76e1$var$$LG(\"html\").removeClass(\"lg-on\");\n        this.outer.removeClass(\"lg-visible lg-components-open\");\n        // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\n        this.$backdrop.removeClass(\"in\").css(\"opacity\", 0);\n        var removeTimeout = this.zoomFromOrigin && transform ? Math.max(this.settings.startAnimationDuration, this.settings.backdropDuration) : this.settings.backdropDuration;\n        this.$container.removeClass(\"lg-show-in\");\n        // Once the closign animation is completed and gallery is invisible\n        setTimeout(function() {\n            if (_this.zoomFromOrigin && transform) _this.outer.removeClass(\"lg-zoom-from-image\");\n            _this.$container.removeClass(\"lg-show\");\n            // Reset scrollbar\n            _this.resetScrollBar();\n            // Need to remove inline opacity as it is used in the stylesheet as well\n            _this.$backdrop.removeAttr(\"style\").css(\"transition-duration\", _this.settings.backdropDuration + \"ms\");\n            _this.outer.removeClass(\"lg-closing \" + _this.settings.startClass);\n            _this.getSlideItem(_this.index).removeClass(\"lg-start-end-progress\");\n            _this.$inner.empty();\n            if (_this.lgOpened) _this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.afterClose, {\n                instance: _this\n            });\n            if (_this.$container.get()) _this.$container.get().blur();\n            _this.lgOpened = false;\n        }, removeTimeout + 100);\n        return removeTimeout + 100;\n    };\n    LightGallery.prototype.initModules = function() {\n        this.plugins.forEach(function(module) {\n            try {\n                module.init();\n            } catch (err) {\n                console.warn(\"lightGallery:- make sure lightGallery module is properly initiated\");\n            }\n        });\n    };\n    LightGallery.prototype.destroyModules = function(destroy) {\n        this.plugins.forEach(function(module) {\n            try {\n                if (destroy) module.destroy();\n                else module.closeGallery && module.closeGallery();\n            } catch (err) {\n                console.warn(\"lightGallery:- make sure lightGallery module is properly destroyed\");\n            }\n        });\n    };\n    /**\r\n     * Refresh lightGallery with new set of children.\r\n     *\r\n     * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\r\n     *\r\n     * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\r\n     * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  // Delete or add children, then call\r\n     *  plugin.refresh();\r\n     *\r\n     */ LightGallery.prototype.refresh = function(galleryItems) {\n        if (!this.settings.dynamic) this.invalidateItems();\n        if (galleryItems) this.galleryItems = galleryItems;\n        else this.galleryItems = this.getItems();\n        this.updateControls();\n        this.openGalleryOnItemClick();\n        this.LGel.trigger($ae51a4f8a94c76e1$var$lGEvents.updateSlides);\n    };\n    LightGallery.prototype.updateControls = function() {\n        this.addSlideVideoInfo(this.galleryItems);\n        this.updateCounterTotal();\n        this.manageSingleSlideClassName();\n    };\n    LightGallery.prototype.destroyGallery = function() {\n        this.destroyModules(true);\n        if (!this.settings.dynamic) this.invalidateItems();\n        $ae51a4f8a94c76e1$var$$LG(window).off(\".lg.global\" + this.lgId);\n        this.LGel.off(\".lg\");\n        this.$container.remove();\n    };\n    /**\r\n     * Destroy lightGallery.\r\n     * Destroy lightGallery and its plugin instances completely\r\n     *\r\n     * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.\r\n     * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.\r\n     * You can use refresh method most of the times.\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.destroy();\r\n     *\r\n     */ LightGallery.prototype.destroy = function() {\n        var closeTimeout = this.closeGallery(true);\n        if (closeTimeout) setTimeout(this.destroyGallery.bind(this), closeTimeout);\n        else this.destroyGallery();\n        return closeTimeout;\n    };\n    return LightGallery;\n}();\nfunction $ae51a4f8a94c76e1$var$lightGallery(el, options) {\n    return new $ae51a4f8a94c76e1$var$LightGallery(el, options);\n}\nvar $ae51a4f8a94c76e1$export$2e2bcd8739ae039 = $ae51a4f8a94c76e1$var$lightGallery;\n\n\n/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */ /*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ var $e8a17bef9df77869$var$__assign = function __assign1() {\n    $e8a17bef9df77869$var$__assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $e8a17bef9df77869$var$__assign.apply(this, arguments);\n};\nvar $e8a17bef9df77869$var$thumbnailsSettings = {\n    thumbnail: true,\n    animateThumb: true,\n    currentPagerPosition: \"middle\",\n    alignThumbnails: \"middle\",\n    thumbWidth: 100,\n    thumbHeight: \"80px\",\n    thumbMargin: 5,\n    appendThumbnailsTo: \".lg-components\",\n    toggleThumb: false,\n    enableThumbDrag: true,\n    enableThumbSwipe: true,\n    thumbnailSwipeThreshold: 10,\n    loadYouTubeThumbnail: true,\n    youTubeThumbSize: 1,\n    thumbnailPluginStrings: {\n        toggleThumbnails: \"Toggle thumbnails\"\n    }\n};\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */ var $e8a17bef9df77869$var$lGEvents = {\n    afterAppendSlide: \"lgAfterAppendSlide\",\n    init: \"lgInit\",\n    hasVideo: \"lgHasVideo\",\n    containerResize: \"lgContainerResize\",\n    updateSlides: \"lgUpdateSlides\",\n    afterAppendSubHtml: \"lgAfterAppendSubHtml\",\n    beforeOpen: \"lgBeforeOpen\",\n    afterOpen: \"lgAfterOpen\",\n    slideItemLoad: \"lgSlideItemLoad\",\n    beforeSlide: \"lgBeforeSlide\",\n    afterSlide: \"lgAfterSlide\",\n    posterClick: \"lgPosterClick\",\n    dragStart: \"lgDragStart\",\n    dragMove: \"lgDragMove\",\n    dragEnd: \"lgDragEnd\",\n    beforeNextSlide: \"lgBeforeNextSlide\",\n    beforePrevSlide: \"lgBeforePrevSlide\",\n    beforeClose: \"lgBeforeClose\",\n    afterClose: \"lgAfterClose\",\n    rotateLeft: \"lgRotateLeft\",\n    rotateRight: \"lgRotateRight\",\n    flipHorizontal: \"lgFlipHorizontal\",\n    flipVertical: \"lgFlipVertical\",\n    autoplay: \"lgAutoplay\",\n    autoplayStart: \"lgAutoplayStart\",\n    autoplayStop: \"lgAutoplayStop\"\n};\nvar $e8a17bef9df77869$var$Thumbnail = /** @class */ function() {\n    function Thumbnail(instance, $LG) {\n        this.thumbOuterWidth = 0;\n        this.thumbTotalWidth = 0;\n        this.translateX = 0;\n        this.thumbClickable = false;\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n        return this;\n    }\n    Thumbnail.prototype.init = function() {\n        // extend module default settings with lightGallery core settings\n        this.settings = $e8a17bef9df77869$var$__assign($e8a17bef9df77869$var$__assign({}, $e8a17bef9df77869$var$thumbnailsSettings), this.core.settings);\n        this.thumbOuterWidth = 0;\n        this.thumbTotalWidth = this.core.galleryItems.length * (this.settings.thumbWidth + this.settings.thumbMargin);\n        // Thumbnail animation value\n        this.translateX = 0;\n        this.setAnimateThumbStyles();\n        if (!this.core.settings.allowMediaOverlap) this.settings.toggleThumb = false;\n        if (this.settings.thumbnail) {\n            this.build();\n            if (this.settings.animateThumb) {\n                if (this.settings.enableThumbDrag) this.enableThumbDrag();\n                if (this.settings.enableThumbSwipe) this.enableThumbSwipe();\n                this.thumbClickable = false;\n            } else this.thumbClickable = true;\n            this.toggleThumbBar();\n            this.thumbKeyPress();\n        }\n    };\n    Thumbnail.prototype.build = function() {\n        var _this = this;\n        this.setThumbMarkup();\n        this.manageActiveClassOnSlideChange();\n        this.$lgThumb.first().on(\"click.lg touchend.lg\", function(e) {\n            var $target = _this.$LG(e.target);\n            if (!$target.hasAttribute(\"data-lg-item-id\")) return;\n            setTimeout(function() {\n                // In IE9 and bellow touch does not support\n                // Go to slide if browser does not support css transitions\n                if (_this.thumbClickable && !_this.core.lgBusy) {\n                    var index = parseInt($target.attr(\"data-lg-item-id\"));\n                    _this.core.slide(index, false, true, false);\n                }\n            }, 50);\n        });\n        this.core.LGel.on($e8a17bef9df77869$var$lGEvents.beforeSlide + \".thumb\", function(event) {\n            var index = event.detail.index;\n            _this.animateThumb(index);\n        });\n        this.core.LGel.on($e8a17bef9df77869$var$lGEvents.beforeOpen + \".thumb\", function() {\n            _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\n        });\n        this.core.LGel.on($e8a17bef9df77869$var$lGEvents.updateSlides + \".thumb\", function() {\n            _this.rebuildThumbnails();\n        });\n        this.core.LGel.on($e8a17bef9df77869$var$lGEvents.containerResize + \".thumb\", function() {\n            if (!_this.core.lgOpened) return;\n            setTimeout(function() {\n                _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\n                _this.animateThumb(_this.core.index);\n                _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\n            }, 50);\n        });\n    };\n    Thumbnail.prototype.setThumbMarkup = function() {\n        var thumbOuterClassNames = \"lg-thumb-outer \";\n        if (this.settings.alignThumbnails) thumbOuterClassNames += \"lg-thumb-align-\" + this.settings.alignThumbnails;\n        var html = '<div class=\"' + thumbOuterClassNames + '\">\\n        <div class=\"lg-thumb lg-group\">\\n        </div>\\n        </div>';\n        this.core.outer.addClass(\"lg-has-thumb\");\n        if (this.settings.appendThumbnailsTo === \".lg-components\") this.core.$lgComponents.append(html);\n        else this.core.outer.append(html);\n        this.$thumbOuter = this.core.outer.find(\".lg-thumb-outer\").first();\n        this.$lgThumb = this.core.outer.find(\".lg-thumb\").first();\n        if (this.settings.animateThumb) this.core.outer.find(\".lg-thumb\").css(\"transition-duration\", this.core.settings.speed + \"ms\").css(\"width\", this.thumbTotalWidth + \"px\").css(\"position\", \"relative\");\n        this.setThumbItemHtml(this.core.galleryItems);\n    };\n    Thumbnail.prototype.enableThumbDrag = function() {\n        var _this = this;\n        var thumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0\n        };\n        var isDragging = false;\n        this.$thumbOuter.addClass(\"lg-grab\");\n        this.core.outer.find(\".lg-thumb\").first().on(\"mousedown.lg.thumb\", function(e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                // execute only on .lg-object\n                e.preventDefault();\n                thumbDragUtils.cords.startX = e.pageX;\n                thumbDragUtils.startTime = new Date();\n                _this.thumbClickable = false;\n                isDragging = true;\n                // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                _this.core.outer.get().scrollLeft += 1;\n                _this.core.outer.get().scrollLeft -= 1;\n                // *\n                _this.$thumbOuter.removeClass(\"lg-grab\").addClass(\"lg-grabbing\");\n            }\n        });\n        this.$LG(window).on(\"mousemove.lg.thumb.global\" + this.core.lgId, function(e) {\n            if (!_this.core.lgOpened) return;\n            if (isDragging) {\n                thumbDragUtils.cords.endX = e.pageX;\n                thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\n            }\n        });\n        this.$LG(window).on(\"mouseup.lg.thumb.global\" + this.core.lgId, function() {\n            if (!_this.core.lgOpened) return;\n            if (thumbDragUtils.isMoved) thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\n            else _this.thumbClickable = true;\n            if (isDragging) {\n                isDragging = false;\n                _this.$thumbOuter.removeClass(\"lg-grabbing\").addClass(\"lg-grab\");\n            }\n        });\n    };\n    Thumbnail.prototype.enableThumbSwipe = function() {\n        var _this = this;\n        var thumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0\n        };\n        this.$lgThumb.on(\"touchstart.lg\", function(e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.startX = e.targetTouches[0].pageX;\n                _this.thumbClickable = false;\n                thumbDragUtils.startTime = new Date();\n            }\n        });\n        this.$lgThumb.on(\"touchmove.lg\", function(e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.endX = e.targetTouches[0].pageX;\n                thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\n            }\n        });\n        this.$lgThumb.on(\"touchend.lg\", function() {\n            if (thumbDragUtils.isMoved) thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\n            else _this.thumbClickable = true;\n        });\n    };\n    // Rebuild thumbnails\n    Thumbnail.prototype.rebuildThumbnails = function() {\n        var _this = this;\n        // Remove transitions\n        this.$thumbOuter.addClass(\"lg-rebuilding-thumbnails\");\n        setTimeout(function() {\n            _this.thumbTotalWidth = _this.core.galleryItems.length * (_this.settings.thumbWidth + _this.settings.thumbMargin);\n            _this.$lgThumb.css(\"width\", _this.thumbTotalWidth + \"px\");\n            _this.$lgThumb.empty();\n            _this.setThumbItemHtml(_this.core.galleryItems);\n            _this.animateThumb(_this.core.index);\n        }, 50);\n        setTimeout(function() {\n            _this.$thumbOuter.removeClass(\"lg-rebuilding-thumbnails\");\n        }, 200);\n    };\n    // @ts-check\n    Thumbnail.prototype.setTranslate = function(value) {\n        this.$lgThumb.css(\"transform\", \"translate3d(-\" + value + \"px, 0px, 0px)\");\n    };\n    Thumbnail.prototype.getPossibleTransformX = function(left) {\n        if (left > this.thumbTotalWidth - this.thumbOuterWidth) left = this.thumbTotalWidth - this.thumbOuterWidth;\n        if (left < 0) left = 0;\n        return left;\n    };\n    Thumbnail.prototype.animateThumb = function(index) {\n        this.$lgThumb.css(\"transition-duration\", this.core.settings.speed + \"ms\");\n        if (this.settings.animateThumb) {\n            var position = 0;\n            switch(this.settings.currentPagerPosition){\n                case \"left\":\n                    position = 0;\n                    break;\n                case \"middle\":\n                    position = this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;\n                    break;\n                case \"right\":\n                    position = this.thumbOuterWidth - this.settings.thumbWidth;\n            }\n            this.translateX = (this.settings.thumbWidth + this.settings.thumbMargin) * index - 1 - position;\n            if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;\n            if (this.translateX < 0) this.translateX = 0;\n            this.setTranslate(this.translateX);\n        }\n    };\n    Thumbnail.prototype.onThumbTouchMove = function(thumbDragUtils) {\n        thumbDragUtils.newTranslateX = this.translateX;\n        thumbDragUtils.isMoved = true;\n        thumbDragUtils.touchMoveTime = new Date().valueOf();\n        thumbDragUtils.newTranslateX -= thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n        thumbDragUtils.newTranslateX = this.getPossibleTransformX(thumbDragUtils.newTranslateX);\n        // move current slide\n        this.setTranslate(thumbDragUtils.newTranslateX);\n        this.$thumbOuter.addClass(\"lg-dragging\");\n        return thumbDragUtils;\n    };\n    Thumbnail.prototype.onThumbTouchEnd = function(thumbDragUtils) {\n        thumbDragUtils.isMoved = false;\n        thumbDragUtils.endTime = new Date();\n        this.$thumbOuter.removeClass(\"lg-dragging\");\n        var touchDuration = thumbDragUtils.endTime.valueOf() - thumbDragUtils.startTime.valueOf();\n        var distanceXnew = thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n        var speedX = Math.abs(distanceXnew) / touchDuration;\n        // Some magical numbers\n        // Can be improved\n        if (speedX > 0.15 && thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30) {\n            speedX += 1;\n            if (speedX > 2) speedX += 1;\n            speedX = speedX + speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);\n            this.$lgThumb.css(\"transition-duration\", Math.min(speedX - 1, 2) + \"settings\");\n            distanceXnew = distanceXnew * speedX;\n            this.translateX = this.getPossibleTransformX(this.translateX - distanceXnew);\n            this.setTranslate(this.translateX);\n        } else this.translateX = thumbDragUtils.newTranslateX;\n        if (Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) < this.settings.thumbnailSwipeThreshold) this.thumbClickable = true;\n        return thumbDragUtils;\n    };\n    Thumbnail.prototype.getThumbHtml = function(thumb, index, alt) {\n        var slideVideoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\n        var thumbImg;\n        if (slideVideoInfo.youtube) {\n            if (this.settings.loadYouTubeThumbnail) thumbImg = \"//img.youtube.com/vi/\" + slideVideoInfo.youtube[1] + \"/\" + this.settings.youTubeThumbSize + \".jpg\";\n            else thumbImg = thumb;\n        } else thumbImg = thumb;\n        var altAttr = alt ? 'alt=\"' + alt + '\"' : \"\";\n        return '<div data-lg-item-id=\"' + index + '\" class=\"lg-thumb-item ' + (index === this.core.index ? \" active\" : \"\") + '\"\\n        style=\"width:' + this.settings.thumbWidth + \"px; height: \" + this.settings.thumbHeight + \";\\n            margin-right: \" + this.settings.thumbMargin + 'px;\">\\n            <img ' + altAttr + ' data-lg-item-id=\"' + index + '\" src=\"' + thumbImg + '\" />\\n        </div>';\n    };\n    Thumbnail.prototype.getThumbItemHtml = function(items) {\n        var thumbList = \"\";\n        for(var i = 0; i < items.length; i++)thumbList += this.getThumbHtml(items[i].thumb, i, items[i].alt);\n        return thumbList;\n    };\n    Thumbnail.prototype.setThumbItemHtml = function(items) {\n        var thumbList = this.getThumbItemHtml(items);\n        this.$lgThumb.html(thumbList);\n    };\n    Thumbnail.prototype.setAnimateThumbStyles = function() {\n        if (this.settings.animateThumb) this.core.outer.addClass(\"lg-animate-thumb\");\n    };\n    // Manage thumbnail active calss\n    Thumbnail.prototype.manageActiveClassOnSlideChange = function() {\n        var _this = this;\n        // manage active class for thumbnail\n        this.core.LGel.on($e8a17bef9df77869$var$lGEvents.beforeSlide + \".thumb\", function(event) {\n            var $thumb = _this.core.outer.find(\".lg-thumb-item\");\n            var index = event.detail.index;\n            $thumb.removeClass(\"active\");\n            $thumb.eq(index).addClass(\"active\");\n        });\n    };\n    // Toggle thumbnail bar\n    Thumbnail.prototype.toggleThumbBar = function() {\n        var _this = this;\n        if (this.settings.toggleThumb) {\n            this.core.outer.addClass(\"lg-can-toggle\");\n            this.core.$toolbar.append('<button type=\"button\" aria-label=\"' + this.settings.thumbnailPluginStrings[\"toggleThumbnails\"] + '\" class=\"lg-toggle-thumb lg-icon\"></button>');\n            this.core.outer.find(\".lg-toggle-thumb\").first().on(\"click.lg\", function() {\n                _this.core.outer.toggleClass(\"lg-components-open\");\n            });\n        }\n    };\n    Thumbnail.prototype.thumbKeyPress = function() {\n        var _this = this;\n        this.$LG(window).on(\"keydown.lg.thumb.global\" + this.core.lgId, function(e) {\n            if (!_this.core.lgOpened || !_this.settings.toggleThumb) return;\n            if (e.keyCode === 38) {\n                e.preventDefault();\n                _this.core.outer.addClass(\"lg-components-open\");\n            } else if (e.keyCode === 40) {\n                e.preventDefault();\n                _this.core.outer.removeClass(\"lg-components-open\");\n            }\n        });\n    };\n    Thumbnail.prototype.destroy = function() {\n        if (this.settings.thumbnail) {\n            this.$LG(window).off(\".lg.thumb.global\" + this.core.lgId);\n            this.core.LGel.off(\".lg.thumb\");\n            this.core.LGel.off(\".thumb\");\n            this.$thumbOuter.remove();\n            this.core.outer.removeClass(\"lg-has-thumb\");\n        }\n    };\n    return Thumbnail;\n}();\nvar $e8a17bef9df77869$export$2e2bcd8739ae039 = $e8a17bef9df77869$var$Thumbnail;\n\n\n\n(0, $ae51a4f8a94c76e1$export$2e2bcd8739ae039)(document.getElementById(\"lightgallery\"), {\n    licenseKey: \"7EC452A9-0CFD441C-BD984C7C-17C8456E\",\n    plugins: [\n        (0, $e8a17bef9df77869$export$2e2bcd8739ae039)\n    ],\n    speed: 500,\n    mobileSettings: {\n        showCloseIcon: true,\n        download: true\n    }\n});\n\n\n\"use strict\";\n\n})();\n//# sourceMappingURL=index.d3f5e219.js.map\n","'use strict';\nimport './lib/burger';\nimport './lib/headerScroll';\nimport './lib/navScroll';\nimport './lib/slider';\nimport './lib/gallery';\n","'use strict';\n\n(function burger() {\n  const body = document.querySelector('body');\n  const burgerButton = document.querySelector('.header__burger-button');\n  const header = document.querySelector('.header');\n\n  if (burgerButton) {\n    burgerButton.addEventListener('click', (e) => {\n      e.stopPropagation();\n\n      const scrollBarWidth\n        = window.innerWidth - document.documentElement.clientWidth;\n\n      document.documentElement.classList.toggle('menu-open');\n\n      if (document.querySelector('.menu-open')) {\n        body.style.paddingRight = `${scrollBarWidth}px`;\n\n        window.addEventListener('click', () => {\n          if (!e.target.closest('.header__menu')) {\n            document.documentElement.classList.remove('menu-open');\n            body.style.paddingRight = '0';\n          }\n        });\n      } else {\n        body.style.paddingRight = '0';\n      }\n    });\n  }\n\n  if (header) {\n    header.addEventListener('click', (e) => {\n      if (e.target.tagName === 'A') {\n        document.documentElement.classList.remove('menu-open');\n        body.style.paddingRight = '0';\n      }\n    });\n  }\n})();\n","'use strict';\n\n(function headerScroll() {\n  let scrollPos = window.scrollY;\n  const header = document.querySelector('header.header');\n\n  const addScroll = () => header.classList.add('header-scroll');\n  const removeScroll = () => header.classList.remove('header-scroll');\n\n  window.addEventListener('scroll', () => {\n    scrollPos = window.scrollY;\n\n    if (scrollPos > 0) {\n      addScroll();\n    } else {\n      removeScroll();\n    }\n  });\n})();\n","'use strict';\n\n(function navScroll() {\n  const headerHeight = document.querySelector('.header').offsetHeight;\n\n  document.querySelectorAll('a[href^=\"#\"]').forEach((anchor) => {\n    anchor.addEventListener('click', function(e) {\n      e.preventDefault();\n\n      const targetId = this.getAttribute('href');\n      const targetElement = document.querySelector(targetId);\n\n      if (targetElement) {\n        const targetPosition\n          = targetElement.getBoundingClientRect().top\n          + window.pageYOffset\n          - headerHeight;\n\n        window.scrollTo({\n          top: targetPosition,\n          behavior: 'smooth',\n        });\n      }\n    });\n  });\n})();\n","'use strict';\n\nimport Swiper from 'swiper';\nimport 'swiper/swiper-bundle.css';\nimport { Pagination } from 'swiper/modules';\n\nlet mySwiper = null;\nconst swiperWrapper = document.querySelector('.gallery__wrapper');\n\nfunction initSlider() {\n  const pcBreakPoint = 1210;\n\n  if (\n    window.innerWidth <= pcBreakPoint\n    && document.querySelector('.gallery__slider')\n  ) {\n    swiperWrapper.classList.add('swiper-wrapper');\n\n    mySwiper = new Swiper('.gallery__slider', {\n      modules: [Pagination],\n      observer: true,\n      observeParents: true,\n      slidesPerView: 'auto',\n      spaceBetween: 20,\n      pagination: {\n        el: '.swiper-pagination',\n        clickable: true,\n      },\n    });\n  }\n}\n\nwindow.addEventListener('load', function() {\n  initSlider();\n});\n\nwindow.addEventListener('resize', function() {\n  if (mySwiper !== null) {\n    mySwiper.destroy();\n    mySwiper = null;\n    swiperWrapper.classList.remove('swiper-wrapper');\n  }\n\n  initSlider();\n});\n","/**\n * Swiper 11.0.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2024 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 5, 2024\n */\n\nexport { S as Swiper, S as default } from './shared/swiper-core.mjs';\n","import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { a as elementParents, o as elementStyle, e as elementChildren, s as setCSSProperty, f as elementOuterSize, p as elementNextAll, q as elementPrevAll, i as getTranslate, r as animateCSSModeScroll, n as nextTick, t as showWarning, c as createElement, d as now, u as extend, g as elementIndex, v as deleteProps } from './utils.mjs';\n\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nlet deviceCached;\nfunction calcDevice(_temp) {\n  let {\n    userAgent\n  } = _temp === void 0 ? {} : _temp;\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\n\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  const device = getDevice();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  const isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent);\n  const isSafariBrowser = isSafari();\n  const need3dFix = isSafariBrowser || isWebView && device.ios;\n  return {\n    isSafari: needPerspectiveFix || isSafariBrowser,\n    needPerspectiveFix,\n    need3dFix,\n    isWebView\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nfunction Resize(_ref) {\n  let {\n    swiper,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(_ref2 => {\n          let {\n            contentBoxSize,\n            contentRect,\n            target\n          } = _ref2;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n\nfunction Observer(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const observers = [];\n  const window = getWindow();\n  const attach = function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler() {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit() {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};\n\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\n\nfunction updateSlides() {\n  const swiper = this;\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slides);\n  } else if (swiper.grid) {\n    swiper.grid.unsetSlides();\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slides);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[swiper.getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  swiper.emit('slidesUpdated');\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\n\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\n\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\n\nfunction updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    if (isFullyVisible) {\n      slides[i].classList.add(params.slideFullyVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\n\nfunction updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  let prevSlide;\n  let nextSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    if (gridEnabled) {\n      activeSlide = slides.filter(slideEl => slideEl.column === activeIndex)[0];\n      nextSlide = slides.filter(slideEl => slideEl.column === activeIndex + 1)[0];\n      prevSlide = slides.filter(slideEl => slideEl.column === activeIndex - 1)[0];\n    } else {\n      activeSlide = slides[activeIndex];\n    }\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n    if (gridEnabled) {\n      if (nextSlide) {\n        nextSlide.classList.add(params.slideNextClass);\n      }\n      if (prevSlide) {\n        prevSlide.classList.add(params.slidePrevClass);\n      }\n    } else {\n      // Next Slide\n      nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !nextSlide) {\n        nextSlide = slides[0];\n      }\n      if (nextSlide) {\n        nextSlide.classList.add(params.slideNextClass);\n      }\n\n      // Prev Slide\n      prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !prevSlide === 0) {\n        prevSlide = slides[slides.length - 1];\n      }\n      if (prevSlide) {\n        prevSlide.classList.add(params.slidePrevClass);\n      }\n    }\n  }\n  swiper.emitSlidesClasses();\n}\n\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (!lazyEl && swiper.isElement) {\n      if (slideEl.shadowRoot) {\n        lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      } else {\n        // init later\n        requestAnimationFrame(() => {\n          if (slideEl.shadowRoot) {\n            lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n            if (lazyEl) lazyEl.remove();\n          }\n        });\n      }\n    }\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\n\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex && !swiper.params.loop) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n  if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n    swiper.realIndex = getVirtualRealIndex(activeIndex);\n    return;\n  }\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (gridEnabled) {\n    const firstSlideInColumn = swiper.slides.filter(slideEl => slideEl.column === activeIndex)[0];\n    let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n    if (Number.isNaN(activeSlideIndex)) {\n      activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n    }\n    realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n  } else if (swiper.slides[activeIndex]) {\n    const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n    if (slideIndex) {\n      realIndex = parseInt(slideIndex, 10);\n    } else {\n      realIndex = activeIndex;\n    }\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide(el, path) {\n  const swiper = this;\n  const params = swiper.params;\n  let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n  if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n    [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n      if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n        slide = pathEl;\n      }\n    });\n  }\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\n\nfunction getSwiperTranslate(axis) {\n  if (axis === void 0) {\n    axis = this.isHorizontal() ? 'x' : 'y';\n  }\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\n\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\n\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n\nfunction translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (translateBounds === void 0) {\n    translateBounds = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}\n\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\n\nfunction setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n    swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n  }\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionEmit(_ref) {\n  let {\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  } = _ref;\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n\nfunction transitionStart(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\n\nfunction transitionEnd(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\n\nfunction slideTo(index, speed, runCallbacks, internal, initial) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial || swiper.destroyed) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}\n\nfunction slideToLoop(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      let targetSlideIndex;\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        targetSlideIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n      }\n      const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n      const {\n        centeredSlides\n      } = swiper.params;\n      let slidesPerView = swiper.params.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = swiper.slidesPerViewDynamic();\n      } else {\n        slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n        if (centeredSlides && slidesPerView % 2 === 0) {\n          slidesPerView = slidesPerView + 1;\n        }\n      }\n      let needLoopFix = cols - targetSlideIndex < slidesPerView;\n      if (centeredSlides) {\n        needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n      }\n      if (needLoopFix) {\n        const direction = centeredSlides ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n        swiper.loopFix({\n          direction,\n          slideTo: true,\n          activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n          slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n        });\n      }\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        newIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        newIndex = swiper.getSlideIndexByData(newIndex);\n      }\n    }\n  }\n  requestAnimationFrame(() => {\n    swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  });\n  return swiper;\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n    requestAnimationFrame(() => {\n      swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    });\n    return true;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide() {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\n\nfunction loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const initSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    slides.forEach((el, index) => {\n      el.setAttribute('data-swiper-slide-index', index);\n    });\n  };\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n  const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n  const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n  const addBlankSlides = amountOfSlides => {\n    for (let i = 0; i < amountOfSlides; i += 1) {\n      const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n      swiper.slidesEl.append(slideEl);\n    }\n  };\n  if (shouldFillGroup) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else if (shouldFillGrid) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else {\n    initSlides();\n  }\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}\n\nfunction loopFix(_temp) {\n  let {\n    slideRealIndex,\n    slideTo = true,\n    direction,\n    setTranslate,\n    activeSlideIndex,\n    byController,\n    byMousewheel\n  } = _temp === void 0 ? {} : _temp;\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  const {\n    centeredSlides\n  } = params;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  let slidesPerView = params.slidesPerView;\n  if (slidesPerView === 'auto') {\n    slidesPerView = swiper.slidesPerViewDynamic();\n  } else {\n    slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n    if (centeredSlides && slidesPerView % 2 === 0) {\n      slidesPerView = slidesPerView + 1;\n    }\n  }\n  const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n  let loopedSlides = slidesPerGroup;\n  if (loopedSlides % slidesPerGroup !== 0) {\n    loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n  }\n  loopedSlides += params.loopAdditionalSlides;\n  swiper.loopedSlides = loopedSlides;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (slides.length < slidesPerView + loopedSlides) {\n    showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n  } else if (gridEnabled && params.grid.fill === 'row') {\n    showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n  }\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n  const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n  const activeColIndexWithShift = activeColIndex + (centeredSlides && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0);\n  // prepend last slides before start\n  if (activeColIndexWithShift < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        const colIndexToPrepend = cols - index - 1;\n        for (let i = slides.length - 1; i >= 0; i -= 1) {\n          if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n        }\n        // slides.forEach((slide, slideIndex) => {\n        //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n        // });\n      } else {\n        prependSlidesIndexes.push(cols - index - 1);\n      }\n    }\n  } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n    slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        slides.forEach((slide, slideIndex) => {\n          if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n        });\n      } else {\n        appendSlidesIndexes.push(index);\n      }\n    }\n  }\n  swiper.__preventObserver__ = true;\n  requestAnimationFrame(() => {\n    swiper.__preventObserver__ = false;\n  });\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n    swiper.slides.forEach((slide, slideIndex) => {\n      swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n        swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix({\n          ...loopParams,\n          slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix({\n        ...loopParams,\n        slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n      });\n    }\n  }\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\n\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nfunction unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n};\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base) {\n  if (base === void 0) {\n    base = this;\n  }\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nfunction preventEdgeSwipe(swiper, event, startX) {\n  const window = getWindow();\n  const {\n    params\n  } = swiper;\n  const edgeSwipeDetection = params.edgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const data = swiper.touchEventsData;\n  if (e.type === 'pointerdown') {\n    if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n      return;\n    }\n    data.pointerId = e.pointerId;\n  } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n    data.touchId = e.targetTouches[0].identifier;\n  }\n  if (e.type === 'touchstart') {\n    // don't proceed touch event\n    preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n    return;\n  }\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = e.composedPath ? e.composedPath() : e.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  if (!preventEdgeSwipe(swiper, e, startX)) {\n    return;\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (e.type === 'pointermove') {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    const id = e.pointerId;\n    if (id !== data.pointerId) return;\n  }\n  let targetTouch;\n  if (e.type === 'touchmove') {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  } else {\n    targetTouch = e;\n  }\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  touches.previousX = touches.currentX;\n  touches.previousY = touches.currentY;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n  if (!data.isMoved) {\n    if (isLoop && allowLoopFix) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  new Date().getTime();\n  if (data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n    Object.assign(touches, {\n      startX: pageX,\n      startY: pageY,\n      currentX: pageX,\n      currentY: pageY,\n      startTranslate: data.currentTranslate\n    });\n    data.loopSwapReset = true;\n    data.startTranslate = data.currentTranslate;\n    return;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetTouch;\n  const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n  if (!isTouchEvent) {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    if (e.pointerId !== data.pointerId) return;\n    targetTouch = e;\n  } else {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n    const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  data.pointerId = null;\n  data.touchId = null;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}\n\nfunction onDocumentTouchStart() {\n  const swiper = this;\n  if (swiper.documentTouchHandlerProceeded) return;\n  swiper.documentTouchHandlerProceeded = true;\n  if (swiper.params.touchReleaseOnEdges) {\n    swiper.el.style.touchAction = 'auto';\n  }\n}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n    passive: false,\n    capture\n  });\n  el[domMethod]('touchstart', swiper.onTouchStart, {\n    passive: false\n  });\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('touchmove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('touchend', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('touchcancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('contextmenu', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  const wasLoop = params.loop;\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  const hasLoop = swiper.params.loop;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (initialized) {\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (!wasLoop && hasLoop) {\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (wasLoop && !hasLoop) {\n      swiper.loopDestroy();\n    }\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}\n\nfunction getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\n\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\n\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\n\nvar classes = {\n  addClasses,\n  removeClasses\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nvar checkOverflow$1 = {\n  checkOverflow\n};\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  swiperElementNodeName: 'SWIPER-CONTAINER',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  eventsPrefix: 'swiper',\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopAddBlankSlides: true,\n  loopAdditionalSlides: 0,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideFullyVisibleClass: 'swiper-slide-fully-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\n\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n      params[moduleParamName].auto = true;\n    }\n    if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n      params[moduleParamName].auto = true;\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor() {\n    let el;\n    let params;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        pointerId: null,\n        touchId: null\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getDirectionLabel(property) {\n    if (this.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view, exact) {\n    if (view === void 0) {\n      view = 'current';\n    }\n    if (exact === void 0) {\n      exact = false;\n    }\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += Math.ceil(slides[i].swiperSlideSize);\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate) {\n    if (needUpdate === void 0) {\n      needUpdate = true;\n    }\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n    if (swiper.isElement) {\n      lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n    }\n    lazyElements.forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance, cleanStyles) {\n    if (deleteInstance === void 0) {\n      deleteInstance = true;\n    }\n    if (cleanStyles === void 0) {\n      cleanStyles = true;\n    }\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\n\nexport { Swiper as S, defaults as d };\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _define_property } from \"./_define_property.js\";\n\nexport function _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\nexport function _object_spread_props(target, source) {\n    source = source != null ? source : {};\n\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n\n    return target;\n}\nexport { _object_spread_props as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n}\nfunction extend(target, src) {\n  if (target === void 0) {\n    target = {};\n  }\n  if (src === void 0) {\n    src = {};\n  }\n  Object.keys(src).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      extend(target[key], src[key]);\n    }\n  });\n}\nconst ssrDocument = {\n  body: {},\n  addEventListener() {},\n  removeEventListener() {},\n  activeElement: {\n    blur() {},\n    nodeName: ''\n  },\n  querySelector() {\n    return null;\n  },\n  querySelectorAll() {\n    return [];\n  },\n  getElementById() {\n    return null;\n  },\n  createEvent() {\n    return {\n      initEvent() {}\n    };\n  },\n  createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute() {},\n      getElementsByTagName() {\n        return [];\n      }\n    };\n  },\n  createElementNS() {\n    return {};\n  },\n  importNode() {\n    return null;\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  }\n};\nfunction getDocument() {\n  const doc = typeof document !== 'undefined' ? document : {};\n  extend(doc, ssrDocument);\n  return doc;\n}\nconst ssrWindow = {\n  document: ssrDocument,\n  navigator: {\n    userAgent: ''\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  },\n  history: {\n    replaceState() {},\n    pushState() {},\n    go() {},\n    back() {}\n  },\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener() {},\n  removeEventListener() {},\n  getComputedStyle() {\n    return {\n      getPropertyValue() {\n        return '';\n      }\n    };\n  },\n  Image() {},\n  Date() {},\n  screen: {},\n  setTimeout() {},\n  clearTimeout() {},\n  matchMedia() {\n    return {};\n  },\n  requestAnimationFrame(callback) {\n    if (typeof setTimeout === 'undefined') {\n      callback();\n      return null;\n    }\n    return setTimeout(callback, 0);\n  },\n  cancelAnimationFrame(id) {\n    if (typeof setTimeout === 'undefined') {\n      return;\n    }\n    clearTimeout(id);\n  }\n};\nfunction getWindow() {\n  const win = typeof window !== 'undefined' ? window : {};\n  extend(win, ssrWindow);\n  return win;\n}\n\nexport { getWindow as a, getDocument as g };\n","import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\n\nfunction classesToTokens(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n  return classes.trim().split(' ').filter(c => !!c.trim());\n}\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis) {\n  if (axis === void 0) {\n    axis = 'x';\n  }\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend() {\n  const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < arguments.length; i += 1) {\n    const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll(_ref) {\n  let {\n    swiper,\n    targetPosition,\n    side\n  } = _ref;\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowRoot && slideEl.shadowRoot.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction elementChildren(element, selector) {\n  if (selector === void 0) {\n    selector = '';\n  }\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction showWarning(text) {\n  try {\n    console.warn(text);\n    return;\n  } catch (err) {\n    // err\n  }\n}\nfunction createElement(tag, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : classesToTokens(classes)));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nfunction makeElementsArray(el) {\n  return (Array.isArray(el) ? el : [el]).filter(e => !!e);\n}\n\nexport { elementParents as a, elementOffset as b, createElement as c, now as d, elementChildren as e, elementOuterSize as f, elementIndex as g, classesToTokens as h, getTranslate as i, elementTransitionEnd as j, isObject as k, getSlideTransformEl as l, makeElementsArray as m, nextTick as n, elementStyle as o, elementNextAll as p, elementPrevAll as q, animateCSSModeScroll as r, setCSSProperty as s, showWarning as t, extend as u, deleteProps as v };\n","export {default as Virtual} from './virtual.mjs';\nexport {default as Keyboard} from './keyboard.mjs';\nexport {default as Mousewheel} from './mousewheel.mjs';\nexport {default as Navigation} from './navigation.mjs';\nexport {default as Pagination} from './pagination.mjs';\nexport {default as Scrollbar} from './scrollbar.mjs';\nexport {default as Parallax} from './parallax.mjs';\nexport {default as Zoom} from './zoom.mjs';\nexport {default as Controller} from './controller.mjs';\nexport {default as A11y} from './a11y.mjs';\nexport {default as History} from './history.mjs';\nexport {default as HashNavigation} from './hash-navigation.mjs';\nexport {default as Autoplay} from './autoplay.mjs';\nexport {default as Thumbs} from './thumbs.mjs';\nexport {default as FreeMode} from './free-mode.mjs';\nexport {default as Grid} from './grid.mjs';\nexport {default as Manipulation} from './manipulation.mjs';\nexport {default as EffectFade} from './effect-fade.mjs';\nexport {default as EffectCube} from './effect-cube.mjs';\nexport {default as EffectFlip} from './effect-flip.mjs';\nexport {default as EffectCoverflow} from './effect-coverflow.mjs';\nexport {default as EffectCreative} from './effect-creative.mjs';\nexport {default as EffectCards} from './effect-cards.mjs';","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { s as setCSSProperty, e as elementChildren, c as createElement } from '../shared/utils.mjs';\n\nfunction Virtual(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) {\n      swiper.virtual.cache[index] = slideEl;\n    }\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`)).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`)).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n          // shift cache indexes\n          Object.keys(swiper.virtual.cache).forEach(key => {\n            if (key > slidesIndexes) {\n              swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n              swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n              delete swiper.virtual.cache[key];\n            }\n          });\n        }\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n        // shift cache indexes\n        Object.keys(swiper.virtual.cache).forEach(key => {\n          if (key > slidesIndexes) {\n            swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n            swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n            delete swiper.virtual.cache[key];\n          }\n        });\n      }\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    update();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}\n\nexport { Virtual as default };\n","import { g as getDocument, a as getWindow } from '../shared/ssr-window.esm.mjs';\nimport { a as elementParents, b as elementOffset } from '../shared/utils.mjs';\n\n/* eslint-disable consistent-return */\nfunction Keyboard(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}\n\nexport { Keyboard as default };\n","import { a as getWindow } from '../shared/ssr-window.esm.mjs';\nimport { n as nextTick, d as now } from '../shared/utils.mjs';\n\n/* eslint-disable consistent-return */\nfunction Mousewheel(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n      noMousewheelClass: 'swiper-no-mousewheel'\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n\n    // Ignore event if the target or its parents have the swiper-no-mousewheel class\n    if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (params.releaseOnEdges && (position === swiper.minTranslate() || position === swiper.maxTranslate())) {\n          return true;\n        }\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}\n\nexport { Mousewheel as default };\n","import { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { m as makeElementsArray } from '../shared/utils.mjs';\n\nfunction Navigation(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (swiper.enabled) {\n      update();\n      return;\n    }\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.add(swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Navigation as default };\n","import { e as elementChildren, c as createElement } from './utils.mjs';\n\nfunction createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}\n\nexport { createElementIfNotDefined as c };\n","import { c as classesToSelector } from '../shared/classes-to-selector.mjs';\nimport { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { m as makeElementsArray, f as elementOuterSize, g as elementIndex, a as elementParents } from '../shared/utils.mjs';\n\nfunction Pagination(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          } else if (swiper.isElement) {\n            bullet.setAttribute('part', 'bullet');\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (swiper.isElement) {\n          bullets.forEach((bulletEl, bulletIndex) => {\n            bulletEl.setAttribute('part', bulletIndex === current ? 'bullet-active' : 'bullet');\n          });\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.grid && swiper.params.grid.rows > 1 ? swiper.slides.length / Math.ceil(swiper.params.grid.rows) : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          // prettier-ignore\n          paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part=\"bullet\"' : ''} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(...(params.clickableClass || '').split(' '));\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.classList.remove(...(params.clickableClass || '').split(' '));\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const el = makeElementsArray(swiper.pagination.el);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Pagination as default };\n","function classesToSelector(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}\n\nexport { classesToSelector as c };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { m as makeElementsArray, h as classesToTokens, c as createElement, n as nextTick, b as elementOffset } from '../shared/utils.mjs';\nimport { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { c as classesToSelector } from '../shared/classes-to-selector.mjs';\n\nfunction Scrollbar(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n      if (!el.length) return;\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(classesToSelector(swiper.params.scrollbar.dragClass));\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](...classesToTokens(swiper.params.scrollbar.lockClass));\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(...classesToTokens(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass));\n    }\n    disableDraggable();\n  }\n  on('changeDirection', () => {\n    if (!swiper.scrollbar || !swiper.scrollbar.el) return;\n    const params = swiper.params.scrollbar;\n    let {\n      el\n    } = swiper.scrollbar;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock changeDirection', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](...classesToTokens(swiper.params.scrollbar.lockClass));\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}\n\nexport { Scrollbar as default };\n","import { e as elementChildren } from '../shared/utils.mjs';\n\nfunction Parallax(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const elementsSelector = '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]';\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid,\n      isElement\n    } = swiper;\n    const elements = elementChildren(el, elementsSelector);\n    if (swiper.isElement) {\n      elements.push(...elementChildren(swiper.hostEl, elementsSelector));\n    }\n    elements.forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll(`${elementsSelector}, [data-swiper-parallax-rotate]`).forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = function (duration) {\n    if (duration === void 0) {\n      duration = swiper.params.speed;\n    }\n    const {\n      el,\n      hostEl\n    } = swiper;\n    const elements = [...el.querySelectorAll(elementsSelector)];\n    if (swiper.isElement) {\n      elements.push(...hostEl.querySelectorAll(elementsSelector));\n    }\n    elements.forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}\n\nexport { Parallax as default };\n","import { a as getWindow } from '../shared/ssr-window.esm.mjs';\nimport { e as elementChildren, a as elementParents, b as elementOffset, i as getTranslate } from '../shared/utils.mjs';\n\nfunction Zoom(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x - window.scrollX) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y - window.scrollY) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.hostEl.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd();\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}\n\nexport { Zoom as default };\n","import { n as nextTick, j as elementTransitionEnd } from '../shared/utils.mjs';\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nfunction Controller(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}\n\nexport { Controller as default };\n","import { c as classesToSelector } from '../shared/classes-to-selector.mjs';\nimport { c as createElement, g as elementIndex, m as makeElementsArray } from '../shared/utils.mjs';\n\nfunction A11y(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  function getRandomNumber(size) {\n    if (size === void 0) {\n      size = 16;\n    }\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = makeElementsArray(swiper.pagination.el);\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = makeElementsArray(swiper.pagination.el);\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}\n\nexport { A11y as default };\n","import { a as getWindow } from '../shared/ssr-window.esm.mjs';\n\nfunction History(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}\n\nexport { History as default };\n","import { g as getDocument, a as getWindow } from '../shared/ssr-window.esm.mjs';\nimport { e as elementChildren } from '../shared/utils.mjs';\n\nfunction HashNavigation(_ref) {\n  let {\n    swiper,\n    extendParams,\n    emit,\n    on\n  } = _ref;\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`) : swiper.slides[swiper.activeIndex];\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      if (typeof newIndex === 'undefined' || Number.isNaN(newIndex)) return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`) : swiper.slides[swiper.activeIndex];\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}\n\nexport { HashNavigation as default };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\n\n/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nfunction Autoplay(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit,\n    params\n  } = _ref;\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: false,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime();\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  let pausedByPointerEnter;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    if (pausedByPointerEnter) {\n      return;\n    }\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    autoplayStartTime = new Date().getTime();\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pausedByPointerEnter = true;\n    if (swiper.animating || swiper.autoplay.paused) return;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByPointerEnter = false;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('_freeModeStaticRelease', () => {\n    if (pausedByTouch || pausedByInteraction) {\n      resume();\n    }\n  });\n  on('_freeModeNoMomentumRelease', () => {\n    if (!swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}\n\nexport { Autoplay as default };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { k as isObject, e as elementChildren } from '../shared/utils.mjs';\n\nfunction Thumb(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}\n\nexport { Thumb as default };\n","import { d as now, j as elementTransitionEnd } from '../shared/utils.mjs';\n\nfunction freeMode(_ref) {\n  let {\n    swiper,\n    extendParams,\n    emit,\n    once\n  } = _ref;\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    if (swiper.params.cssMode) return;\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    if (swiper.params.cssMode) return;\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd(_ref2) {\n    let {\n      currentPos\n    } = _ref2;\n    if (swiper.params.cssMode) return;\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      emit('_freeModeStaticRelease');\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}\n\nexport { freeMode as default };\n","function Grid(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  let wasMultiRow;\n  const getSpaceBetween = () => {\n    let spaceBetween = swiper.params.spaceBetween;\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    return spaceBetween;\n  };\n  const initSlides = slides => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : slides.length;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n    slidesPerRow = slidesNumberEvenToRows / rows;\n  };\n  const unsetSlides = () => {\n    if (swiper.slides) {\n      swiper.slides.forEach(slide => {\n        if (slide.swiperSlideGridSet) {\n          slide.style.height = '';\n          slide.style[swiper.getDirectionLabel('margin-top')] = '';\n        }\n      });\n    }\n  };\n  const updateSlide = (i, slide, slides) => {\n    const {\n      slidesPerGroup\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : slides.length;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.row = row;\n    slide.column = column;\n    slide.style.height = `calc((100% - ${(rows - 1) * spaceBetween}px) / ${rows})`;\n    slide.style[swiper.getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n    slide.swiperSlideGridSet = true;\n  };\n  const updateWrapperSize = (slideSize, snapGrid) => {\n    const {\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    if (!swiper.params.cssMode) {\n      swiper.wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    }\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  const onInit = () => {\n    wasMultiRow = swiper.params.grid && swiper.params.grid.rows > 1;\n  };\n  const onUpdate = () => {\n    const {\n      params,\n      el\n    } = swiper;\n    const isMultiRow = params.grid && params.grid.rows > 1;\n    if (wasMultiRow && !isMultiRow) {\n      el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n      numFullColumns = 1;\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      el.classList.add(`${params.containerModifierClass}grid`);\n      if (params.grid.fill === 'column') {\n        el.classList.add(`${params.containerModifierClass}grid-column`);\n      }\n      swiper.emitContainerClasses();\n    }\n    wasMultiRow = isMultiRow;\n  };\n  on('init', onInit);\n  on('update', onUpdate);\n  swiper.grid = {\n    initSlides,\n    unsetSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}\n\nexport { Grid as default };\n","function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nfunction Manipulation(_ref) {\n  let {\n    swiper\n  } = _ref;\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}\n\nexport { Manipulation as default };\n","import { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { l as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectFade(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}\n\nexport { EffectFade as default };\n","function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}\n\nexport { effectInit as e };\n","import { l as getSlideTransformEl } from './utils.mjs';\n\nfunction effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}\n\nexport { effectTarget as e };\n","import { j as elementTransitionEnd } from './utils.mjs';\n\nfunction effectVirtualTransitionEnd(_ref) {\n  let {\n    swiper,\n    duration,\n    transformElements,\n    allSlides\n  } = _ref;\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowRoot && slideEl.shadowRoot === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}\n\nexport { effectVirtualTransitionEnd as e };\n","import { e as effectInit } from '../shared/effect-init.mjs';\nimport { c as createElement } from '../shared/utils.mjs';\n\nfunction EffectCube(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-cube swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`.split(' '));\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-cube swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`.split(' '));\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.wrapperEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.wrapperEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n        if (swiper.browser && swiper.browser.need3dFix && Math.abs(wrapperRotate) / 90 % 2 === 1) {\n          wrapperRotate += 0.001;\n        }\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(89.99deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-89.99deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}\n\nexport { EffectCube as default };\n","import { c as createShadow } from '../shared/create-shadow.mjs';\nimport { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { l as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectFlip(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow('flip', slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow('flip', slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      if (swiper.browser && swiper.browser.need3dFix) {\n        if (Math.abs(rotateY) / 90 % 2 === 1) {\n          rotateY += 0.001;\n        }\n        if (Math.abs(rotateX) / 90 % 2 === 1) {\n          rotateX += 0.001;\n        }\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}\n\nexport { EffectFlip as default };\n","import { l as getSlideTransformEl, c as createElement } from './utils.mjs';\n\nfunction createShadow(suffix, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}${suffix ? ` swiper-slide-shadow-${suffix}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass.split(' ').join('.')}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', shadowClass.split(' '));\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}\n\nexport { createShadow as c };\n","import { c as createShadow } from '../shared/create-shadow.mjs';\nimport { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { l as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectCoverflow(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      if (swiper.browser && swiper.browser.need3dFix) {\n        if (Math.abs(rotateY) / 90 % 2 === 1) {\n          rotateY += 0.001;\n        }\n        if (Math.abs(rotateX) / 90 % 2 === 1) {\n          rotateX += 0.001;\n        }\n      }\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow('coverflow', slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow('coverflow', slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}\n\nexport { EffectCoverflow as default };\n","import { c as createShadow } from '../shared/create-shadow.mjs';\nimport { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { l as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectCreative(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        let val = data.rotate[index] * Math.abs(progress * multiplier);\n        if (swiper.browser && swiper.browser.need3dFix && Math.abs(val) / 90 % 2 === 1) {\n          val += 0.001;\n        }\n        r[index] = val;\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow('creative', slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}\n\nexport { EffectCreative as default };\n","import { c as createShadow } from '../shared/create-shadow.mjs';\nimport { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { l as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectCards(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = rtl ? -swiper.translate : swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n\n      /* eslint-disable */\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rtl ? -rotate : rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      /* eslint-enable */\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow('cards', slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}\n\nexport { EffectCards as default };\n","import lightGallery from 'lightgallery';\nimport lgThumbnail from 'lightgallery/plugins/thumbnail';\nimport 'lightgallery/css/lightgallery-bundle.css';\n\nlightGallery(document.getElementById('lightgallery'), {\n  licenseKey: '7EC452A9-0CFD441C-BD984C7C-17C8456E',\n  plugins: [lgThumbnail],\n  speed: 500,\n  mobileSettings: {\n    showCloseIcon: true,\n    download: true,\n  },\n});\n","/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n    autoplay: 'lgAutoplay',\r\n    autoplayStart: 'lgAutoplayStart',\r\n    autoplayStop: 'lgAutoplayStop',\r\n};\n\nvar lightGalleryCoreSettings = {\r\n    mode: 'lg-slide',\r\n    easing: 'ease',\r\n    speed: 400,\r\n    licenseKey: '0000-0000-000-0000',\r\n    height: '100%',\r\n    width: '100%',\r\n    addClass: '',\r\n    startClass: 'lg-start-zoom',\r\n    backdropDuration: 300,\r\n    container: '',\r\n    startAnimationDuration: 400,\r\n    zoomFromOrigin: true,\r\n    hideBarsDelay: 0,\r\n    showBarsAfter: 10000,\r\n    slideDelay: 0,\r\n    supportLegacyBrowser: true,\r\n    allowMediaOverlap: false,\r\n    videoMaxSize: '1280-720',\r\n    loadYouTubePoster: true,\r\n    defaultCaptionHeight: 0,\r\n    ariaLabelledby: '',\r\n    ariaDescribedby: '',\r\n    resetScrollPosition: true,\r\n    hideScrollbar: false,\r\n    closable: true,\r\n    swipeToClose: true,\r\n    closeOnTap: true,\r\n    showCloseIcon: true,\r\n    showMaximizeIcon: false,\r\n    loop: true,\r\n    escKey: true,\r\n    keyPress: true,\r\n    trapFocus: true,\r\n    controls: true,\r\n    slideEndAnimation: true,\r\n    hideControlOnEnd: false,\r\n    mousewheel: false,\r\n    getCaptionFromTitleOrAlt: true,\r\n    appendSubHtmlTo: '.lg-sub-html',\r\n    subHtmlSelectorRelative: false,\r\n    preload: 2,\r\n    numberOfSlideItemsInDom: 10,\r\n    selector: '',\r\n    selectWithin: '',\r\n    nextHtml: '',\r\n    prevHtml: '',\r\n    index: 0,\r\n    iframeWidth: '100%',\r\n    iframeHeight: '100%',\r\n    iframeMaxWidth: '100%',\r\n    iframeMaxHeight: '100%',\r\n    download: true,\r\n    counter: true,\r\n    appendCounterTo: '.lg-toolbar',\r\n    swipeThreshold: 50,\r\n    enableSwipe: true,\r\n    enableDrag: true,\r\n    dynamic: false,\r\n    dynamicEl: [],\r\n    extraProps: [],\r\n    exThumbImage: '',\r\n    isMobile: undefined,\r\n    mobileSettings: {\r\n        controls: false,\r\n        showCloseIcon: false,\r\n        download: false,\r\n    },\r\n    plugins: [],\r\n    strings: {\r\n        closeGallery: 'Close gallery',\r\n        toggleMaximize: 'Toggle maximize',\r\n        previousSlide: 'Previous slide',\r\n        nextSlide: 'Next slide',\r\n        download: 'Download',\r\n        playVideo: 'Play video',\r\n        mediaLoadingFailed: 'Oops... Failed to load content...',\r\n    },\r\n};\n\nfunction initLgPolyfills() {\r\n    (function () {\r\n        if (typeof window.CustomEvent === 'function')\r\n            return false;\r\n        function CustomEvent(event, params) {\r\n            params = params || {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                detail: null,\r\n            };\r\n            var evt = document.createEvent('CustomEvent');\r\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n            return evt;\r\n        }\r\n        window.CustomEvent = CustomEvent;\r\n    })();\r\n    (function () {\r\n        if (!Element.prototype.matches) {\r\n            Element.prototype.matches =\r\n                Element.prototype.msMatchesSelector ||\r\n                    Element.prototype.webkitMatchesSelector;\r\n        }\r\n    })();\r\n}\r\nvar lgQuery = /** @class */ (function () {\r\n    function lgQuery(selector) {\r\n        this.cssVenderPrefixes = [\r\n            'TransitionDuration',\r\n            'TransitionTimingFunction',\r\n            'Transform',\r\n            'Transition',\r\n        ];\r\n        this.selector = this._getSelector(selector);\r\n        this.firstElement = this._getFirstEl();\r\n        return this;\r\n    }\r\n    lgQuery.generateUUID = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    lgQuery.prototype._getSelector = function (selector, context) {\r\n        if (context === void 0) { context = document; }\r\n        if (typeof selector !== 'string') {\r\n            return selector;\r\n        }\r\n        context = context || document;\r\n        var fl = selector.substring(0, 1);\r\n        if (fl === '#') {\r\n            return context.querySelector(selector);\r\n        }\r\n        else {\r\n            return context.querySelectorAll(selector);\r\n        }\r\n    };\r\n    lgQuery.prototype._each = function (func) {\r\n        if (!this.selector) {\r\n            return this;\r\n        }\r\n        if (this.selector.length !== undefined) {\r\n            [].forEach.call(this.selector, func);\r\n        }\r\n        else {\r\n            func(this.selector, 0);\r\n        }\r\n        return this;\r\n    };\r\n    lgQuery.prototype._setCssVendorPrefix = function (el, cssProperty, value) {\r\n        // prettier-ignore\r\n        var property = cssProperty.replace(/-([a-z])/gi, function (s, group1) {\r\n            return group1.toUpperCase();\r\n        });\r\n        if (this.cssVenderPrefixes.indexOf(property) !== -1) {\r\n            el.style[property.charAt(0).toLowerCase() + property.slice(1)] = value;\r\n            el.style['webkit' + property] = value;\r\n            el.style['moz' + property] = value;\r\n            el.style['ms' + property] = value;\r\n            el.style['o' + property] = value;\r\n        }\r\n        else {\r\n            el.style[property] = value;\r\n        }\r\n    };\r\n    lgQuery.prototype._getFirstEl = function () {\r\n        if (this.selector && this.selector.length !== undefined) {\r\n            return this.selector[0];\r\n        }\r\n        else {\r\n            return this.selector;\r\n        }\r\n    };\r\n    lgQuery.prototype.isEventMatched = function (event, eventName) {\r\n        var eventNamespace = eventName.split('.');\r\n        return event\r\n            .split('.')\r\n            .filter(function (e) { return e; })\r\n            .every(function (e) {\r\n            return eventNamespace.indexOf(e) !== -1;\r\n        });\r\n    };\r\n    lgQuery.prototype.attr = function (attr, value) {\r\n        if (value === undefined) {\r\n            if (!this.firstElement) {\r\n                return '';\r\n            }\r\n            return this.firstElement.getAttribute(attr);\r\n        }\r\n        this._each(function (el) {\r\n            el.setAttribute(attr, value);\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.find = function (selector) {\r\n        return $LG(this._getSelector(selector, this.selector));\r\n    };\r\n    lgQuery.prototype.first = function () {\r\n        if (this.selector && this.selector.length !== undefined) {\r\n            return $LG(this.selector[0]);\r\n        }\r\n        else {\r\n            return $LG(this.selector);\r\n        }\r\n    };\r\n    lgQuery.prototype.eq = function (index) {\r\n        return $LG(this.selector[index]);\r\n    };\r\n    lgQuery.prototype.parent = function () {\r\n        return $LG(this.selector.parentElement);\r\n    };\r\n    lgQuery.prototype.get = function () {\r\n        return this._getFirstEl();\r\n    };\r\n    lgQuery.prototype.removeAttr = function (attributes) {\r\n        var attrs = attributes.split(' ');\r\n        this._each(function (el) {\r\n            attrs.forEach(function (attr) { return el.removeAttribute(attr); });\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.wrap = function (className) {\r\n        if (!this.firstElement) {\r\n            return this;\r\n        }\r\n        var wrapper = document.createElement('div');\r\n        wrapper.className = className;\r\n        this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\r\n        this.firstElement.parentNode.removeChild(this.firstElement);\r\n        wrapper.appendChild(this.firstElement);\r\n        return this;\r\n    };\r\n    lgQuery.prototype.addClass = function (classNames) {\r\n        if (classNames === void 0) { classNames = ''; }\r\n        this._each(function (el) {\r\n            // IE doesn't support multiple arguments\r\n            classNames.split(' ').forEach(function (className) {\r\n                if (className) {\r\n                    el.classList.add(className);\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.removeClass = function (classNames) {\r\n        this._each(function (el) {\r\n            // IE doesn't support multiple arguments\r\n            classNames.split(' ').forEach(function (className) {\r\n                if (className) {\r\n                    el.classList.remove(className);\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.hasClass = function (className) {\r\n        if (!this.firstElement) {\r\n            return false;\r\n        }\r\n        return this.firstElement.classList.contains(className);\r\n    };\r\n    lgQuery.prototype.hasAttribute = function (attribute) {\r\n        if (!this.firstElement) {\r\n            return false;\r\n        }\r\n        return this.firstElement.hasAttribute(attribute);\r\n    };\r\n    lgQuery.prototype.toggleClass = function (className) {\r\n        if (!this.firstElement) {\r\n            return this;\r\n        }\r\n        if (this.hasClass(className)) {\r\n            this.removeClass(className);\r\n        }\r\n        else {\r\n            this.addClass(className);\r\n        }\r\n        return this;\r\n    };\r\n    lgQuery.prototype.css = function (property, value) {\r\n        var _this = this;\r\n        this._each(function (el) {\r\n            _this._setCssVendorPrefix(el, property, value);\r\n        });\r\n        return this;\r\n    };\r\n    // Need to pass separate namespaces for separate elements\r\n    lgQuery.prototype.on = function (events, listener) {\r\n        var _this = this;\r\n        if (!this.selector) {\r\n            return this;\r\n        }\r\n        events.split(' ').forEach(function (event) {\r\n            if (!Array.isArray(lgQuery.eventListeners[event])) {\r\n                lgQuery.eventListeners[event] = [];\r\n            }\r\n            lgQuery.eventListeners[event].push(listener);\r\n            _this.selector.addEventListener(event.split('.')[0], listener);\r\n        });\r\n        return this;\r\n    };\r\n    // @todo - test this\r\n    lgQuery.prototype.once = function (event, listener) {\r\n        var _this = this;\r\n        this.on(event, function () {\r\n            _this.off(event);\r\n            listener(event);\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.off = function (event) {\r\n        var _this = this;\r\n        if (!this.selector) {\r\n            return this;\r\n        }\r\n        Object.keys(lgQuery.eventListeners).forEach(function (eventName) {\r\n            if (_this.isEventMatched(event, eventName)) {\r\n                lgQuery.eventListeners[eventName].forEach(function (listener) {\r\n                    _this.selector.removeEventListener(eventName.split('.')[0], listener);\r\n                });\r\n                lgQuery.eventListeners[eventName] = [];\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.trigger = function (event, detail) {\r\n        if (!this.firstElement) {\r\n            return this;\r\n        }\r\n        var customEvent = new CustomEvent(event.split('.')[0], {\r\n            detail: detail || null,\r\n        });\r\n        this.firstElement.dispatchEvent(customEvent);\r\n        return this;\r\n    };\r\n    // Does not support IE\r\n    lgQuery.prototype.load = function (url) {\r\n        var _this = this;\r\n        fetch(url)\r\n            .then(function (res) { return res.text(); })\r\n            .then(function (html) {\r\n            _this.selector.innerHTML = html;\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.html = function (html) {\r\n        if (html === undefined) {\r\n            if (!this.firstElement) {\r\n                return '';\r\n            }\r\n            return this.firstElement.innerHTML;\r\n        }\r\n        this._each(function (el) {\r\n            el.innerHTML = html;\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.append = function (html) {\r\n        this._each(function (el) {\r\n            if (typeof html === 'string') {\r\n                el.insertAdjacentHTML('beforeend', html);\r\n            }\r\n            else {\r\n                el.appendChild(html);\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.prepend = function (html) {\r\n        this._each(function (el) {\r\n            el.insertAdjacentHTML('afterbegin', html);\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.remove = function () {\r\n        this._each(function (el) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.empty = function () {\r\n        this._each(function (el) {\r\n            el.innerHTML = '';\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.scrollTop = function (scrollTop) {\r\n        if (scrollTop !== undefined) {\r\n            document.body.scrollTop = scrollTop;\r\n            document.documentElement.scrollTop = scrollTop;\r\n            return this;\r\n        }\r\n        else {\r\n            return (window.pageYOffset ||\r\n                document.documentElement.scrollTop ||\r\n                document.body.scrollTop ||\r\n                0);\r\n        }\r\n    };\r\n    lgQuery.prototype.scrollLeft = function (scrollLeft) {\r\n        if (scrollLeft !== undefined) {\r\n            document.body.scrollLeft = scrollLeft;\r\n            document.documentElement.scrollLeft = scrollLeft;\r\n            return this;\r\n        }\r\n        else {\r\n            return (window.pageXOffset ||\r\n                document.documentElement.scrollLeft ||\r\n                document.body.scrollLeft ||\r\n                0);\r\n        }\r\n    };\r\n    lgQuery.prototype.offset = function () {\r\n        if (!this.firstElement) {\r\n            return {\r\n                left: 0,\r\n                top: 0,\r\n            };\r\n        }\r\n        var rect = this.firstElement.getBoundingClientRect();\r\n        var bodyMarginLeft = $LG('body').style().marginLeft;\r\n        // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\r\n        return {\r\n            left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\r\n            top: rect.top + this.scrollTop(),\r\n        };\r\n    };\r\n    lgQuery.prototype.style = function () {\r\n        if (!this.firstElement) {\r\n            return {};\r\n        }\r\n        return (this.firstElement.currentStyle ||\r\n            window.getComputedStyle(this.firstElement));\r\n    };\r\n    // Width without padding and border even if box-sizing is used.\r\n    lgQuery.prototype.width = function () {\r\n        var style = this.style();\r\n        return (this.firstElement.clientWidth -\r\n            parseFloat(style.paddingLeft) -\r\n            parseFloat(style.paddingRight));\r\n    };\r\n    // Height without padding and border even if box-sizing is used.\r\n    lgQuery.prototype.height = function () {\r\n        var style = this.style();\r\n        return (this.firstElement.clientHeight -\r\n            parseFloat(style.paddingTop) -\r\n            parseFloat(style.paddingBottom));\r\n    };\r\n    lgQuery.eventListeners = {};\r\n    return lgQuery;\r\n}());\r\nfunction $LG(selector) {\r\n    initLgPolyfills();\r\n    return new lgQuery(selector);\r\n}\n\nvar defaultDynamicOptions = [\r\n    'src',\r\n    'sources',\r\n    'subHtml',\r\n    'subHtmlUrl',\r\n    'html',\r\n    'video',\r\n    'poster',\r\n    'slideName',\r\n    'responsive',\r\n    'srcset',\r\n    'sizes',\r\n    'iframe',\r\n    'downloadUrl',\r\n    'download',\r\n    'width',\r\n    'facebookShareUrl',\r\n    'tweetText',\r\n    'iframeTitle',\r\n    'twitterShareUrl',\r\n    'pinterestShareUrl',\r\n    'pinterestText',\r\n    'fbHtml',\r\n    'disqusIdentifier',\r\n    'disqusUrl',\r\n];\r\n// Convert html data-attribute to camalcase\r\nfunction convertToData(attr) {\r\n    // FInd a way for lgsize\r\n    if (attr === 'href') {\r\n        return 'src';\r\n    }\r\n    attr = attr.replace('data-', '');\r\n    attr = attr.charAt(0).toLowerCase() + attr.slice(1);\r\n    attr = attr.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\r\n    return attr;\r\n}\r\nvar utils = {\r\n    /**\r\n     * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\r\n     */\r\n    getSize: function (el, container, spacing, defaultLgSize) {\r\n        if (spacing === void 0) { spacing = 0; }\r\n        var LGel = $LG(el);\r\n        var lgSize = LGel.attr('data-lg-size') || defaultLgSize;\r\n        if (!lgSize) {\r\n            return;\r\n        }\r\n        var isResponsiveSizes = lgSize.split(',');\r\n        // if at-least two viewport sizes are available\r\n        if (isResponsiveSizes[1]) {\r\n            var wWidth = window.innerWidth;\r\n            for (var i = 0; i < isResponsiveSizes.length; i++) {\r\n                var size_1 = isResponsiveSizes[i];\r\n                var responsiveWidth = parseInt(size_1.split('-')[2], 10);\r\n                if (responsiveWidth > wWidth) {\r\n                    lgSize = size_1;\r\n                    break;\r\n                }\r\n                // take last item as last option\r\n                if (i === isResponsiveSizes.length - 1) {\r\n                    lgSize = size_1;\r\n                }\r\n            }\r\n        }\r\n        var size = lgSize.split('-');\r\n        var width = parseInt(size[0], 10);\r\n        var height = parseInt(size[1], 10);\r\n        var cWidth = container.width();\r\n        var cHeight = container.height() - spacing;\r\n        var maxWidth = Math.min(cWidth, width);\r\n        var maxHeight = Math.min(cHeight, height);\r\n        var ratio = Math.min(maxWidth / width, maxHeight / height);\r\n        return { width: width * ratio, height: height * ratio };\r\n    },\r\n    /**\r\n     * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\r\n     * @param {jQuery Element}\r\n     * @returns {String} Transform CSS string\r\n     */\r\n    getTransform: function (el, container, top, bottom, imageSize) {\r\n        if (!imageSize) {\r\n            return;\r\n        }\r\n        var LGel = $LG(el).find('img').first();\r\n        if (!LGel.get()) {\r\n            return;\r\n        }\r\n        var containerRect = container.get().getBoundingClientRect();\r\n        var wWidth = containerRect.width;\r\n        // using innerWidth to include mobile safari bottom bar\r\n        var wHeight = container.height() - (top + bottom);\r\n        var elWidth = LGel.width();\r\n        var elHeight = LGel.height();\r\n        var elStyle = LGel.style();\r\n        var x = (wWidth - elWidth) / 2 -\r\n            LGel.offset().left +\r\n            (parseFloat(elStyle.paddingLeft) || 0) +\r\n            (parseFloat(elStyle.borderLeft) || 0) +\r\n            $LG(window).scrollLeft() +\r\n            containerRect.left;\r\n        var y = (wHeight - elHeight) / 2 -\r\n            LGel.offset().top +\r\n            (parseFloat(elStyle.paddingTop) || 0) +\r\n            (parseFloat(elStyle.borderTop) || 0) +\r\n            $LG(window).scrollTop() +\r\n            top;\r\n        var scX = elWidth / imageSize.width;\r\n        var scY = elHeight / imageSize.height;\r\n        var transform = 'translate3d(' +\r\n            (x *= -1) +\r\n            'px, ' +\r\n            (y *= -1) +\r\n            'px, 0) scale3d(' +\r\n            scX +\r\n            ', ' +\r\n            scY +\r\n            ', 1)';\r\n        return transform;\r\n    },\r\n    getIframeMarkup: function (iframeWidth, iframeHeight, iframeMaxWidth, iframeMaxHeight, src, iframeTitle) {\r\n        var title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : '';\r\n        return \"<div class=\\\"lg-video-cont lg-has-iframe\\\" style=\\\"width:\" + iframeWidth + \"; max-width:\" + iframeMaxWidth + \"; height: \" + iframeHeight + \"; max-height:\" + iframeMaxHeight + \"\\\">\\n                    <iframe class=\\\"lg-object\\\" frameborder=\\\"0\\\" \" + title + \" src=\\\"\" + src + \"\\\"  allowfullscreen=\\\"true\\\"></iframe>\\n                </div>\";\r\n    },\r\n    getImgMarkup: function (index, src, altAttr, srcset, sizes, sources) {\r\n        var srcsetAttr = srcset ? \"srcset=\\\"\" + srcset + \"\\\"\" : '';\r\n        var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\"\" : '';\r\n        var imgMarkup = \"<img \" + altAttr + \" \" + srcsetAttr + \"  \" + sizesAttr + \" class=\\\"lg-object lg-image\\\" data-index=\\\"\" + index + \"\\\" src=\\\"\" + src + \"\\\" />\";\r\n        var sourceTag = '';\r\n        if (sources) {\r\n            var sourceObj = typeof sources === 'string' ? JSON.parse(sources) : sources;\r\n            sourceTag = sourceObj.map(function (source) {\r\n                var attrs = '';\r\n                Object.keys(source).forEach(function (key) {\r\n                    // Do not remove the first space as it is required to separate the attributes\r\n                    attrs += \" \" + key + \"=\\\"\" + source[key] + \"\\\"\";\r\n                });\r\n                return \"<source \" + attrs + \"></source>\";\r\n            });\r\n        }\r\n        return \"\" + sourceTag + imgMarkup;\r\n    },\r\n    // Get src from responsive src\r\n    getResponsiveSrc: function (srcItms) {\r\n        var rsWidth = [];\r\n        var rsSrc = [];\r\n        var src = '';\r\n        for (var i = 0; i < srcItms.length; i++) {\r\n            var _src = srcItms[i].split(' ');\r\n            // Manage empty space\r\n            if (_src[0] === '') {\r\n                _src.splice(0, 1);\r\n            }\r\n            rsSrc.push(_src[0]);\r\n            rsWidth.push(_src[1]);\r\n        }\r\n        var wWidth = window.innerWidth;\r\n        for (var j = 0; j < rsWidth.length; j++) {\r\n            if (parseInt(rsWidth[j], 10) > wWidth) {\r\n                src = rsSrc[j];\r\n                break;\r\n            }\r\n        }\r\n        return src;\r\n    },\r\n    isImageLoaded: function (img) {\r\n        if (!img)\r\n            return false;\r\n        // During the onload event, IE correctly identifies any images that\r\n        // weren’t downloaded as not complete. Others should too. Gecko-based\r\n        // browsers act like NS4 in that they report this incorrectly.\r\n        if (!img.complete) {\r\n            return false;\r\n        }\r\n        // However, they do have two very useful properties: naturalWidth and\r\n        // naturalHeight. These give the true size of the image. If it failed\r\n        // to load, either of these should be zero.\r\n        if (img.naturalWidth === 0) {\r\n            return false;\r\n        }\r\n        // No other way of checking: assume it’s ok.\r\n        return true;\r\n    },\r\n    getVideoPosterMarkup: function (_poster, dummyImg, videoContStyle, playVideoString, _isVideo) {\r\n        var videoClass = '';\r\n        if (_isVideo && _isVideo.youtube) {\r\n            videoClass = 'lg-has-youtube';\r\n        }\r\n        else if (_isVideo && _isVideo.vimeo) {\r\n            videoClass = 'lg-has-vimeo';\r\n        }\r\n        else {\r\n            videoClass = 'lg-has-html5';\r\n        }\r\n        return \"<div class=\\\"lg-video-cont \" + videoClass + \"\\\" style=\\\"\" + videoContStyle + \"\\\">\\n                <div class=\\\"lg-video-play-button\\\">\\n                <svg\\n                    viewBox=\\\"0 0 20 20\\\"\\n                    preserveAspectRatio=\\\"xMidYMid\\\"\\n                    focusable=\\\"false\\\"\\n                    aria-labelledby=\\\"\" + playVideoString + \"\\\"\\n                    role=\\\"img\\\"\\n                    class=\\\"lg-video-play-icon\\\"\\n                >\\n                    <title>\" + playVideoString + \"</title>\\n                    <polygon class=\\\"lg-video-play-icon-inner\\\" points=\\\"1,0 20,10 1,20\\\"></polygon>\\n                </svg>\\n                <svg class=\\\"lg-video-play-icon-bg\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle></svg>\\n                <svg class=\\\"lg-video-play-icon-circle\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle>\\n                </svg>\\n            </div>\\n            \" + (dummyImg || '') + \"\\n            <img class=\\\"lg-object lg-video-poster\\\" src=\\\"\" + _poster + \"\\\" />\\n        </div>\";\r\n    },\r\n    getFocusableElements: function (container) {\r\n        var elements = container.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])');\r\n        var visibleElements = [].filter.call(elements, function (element) {\r\n            var style = window.getComputedStyle(element);\r\n            return style.display !== 'none' && style.visibility !== 'hidden';\r\n        });\r\n        return visibleElements;\r\n    },\r\n    /**\r\n     * @desc Create dynamic elements array from gallery items when dynamic option is false\r\n     * It helps to avoid frequent DOM interaction\r\n     * and avoid multiple checks for dynamic elments\r\n     *\r\n     * @returns {Array} dynamicEl\r\n     */\r\n    getDynamicOptions: function (items, extraProps, getCaptionFromTitleOrAlt, exThumbImage) {\r\n        var dynamicElements = [];\r\n        var availableDynamicOptions = __spreadArrays(defaultDynamicOptions, extraProps);\r\n        [].forEach.call(items, function (item) {\r\n            var dynamicEl = {};\r\n            for (var i = 0; i < item.attributes.length; i++) {\r\n                var attr = item.attributes[i];\r\n                if (attr.specified) {\r\n                    var dynamicAttr = convertToData(attr.name);\r\n                    var label = '';\r\n                    if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {\r\n                        label = dynamicAttr;\r\n                    }\r\n                    if (label) {\r\n                        dynamicEl[label] = attr.value;\r\n                    }\r\n                }\r\n            }\r\n            var currentItem = $LG(item);\r\n            var alt = currentItem.find('img').first().attr('alt');\r\n            var title = currentItem.attr('title');\r\n            var thumb = exThumbImage\r\n                ? currentItem.attr(exThumbImage)\r\n                : currentItem.find('img').first().attr('src');\r\n            dynamicEl.thumb = thumb;\r\n            if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {\r\n                dynamicEl.subHtml = title || alt || '';\r\n            }\r\n            dynamicEl.alt = alt || title || '';\r\n            dynamicElements.push(dynamicEl);\r\n        });\r\n        return dynamicElements;\r\n    },\r\n    isMobile: function () {\r\n        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    },\r\n    /**\r\n     * @desc Check the given src is video\r\n     * @param {String} src\r\n     * @return {Object} video type\r\n     * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\r\n     *\r\n     * @todo - this information can be moved to dynamicEl to avoid frequent calls\r\n     */\r\n    isVideo: function (src, isHTML5VIdeo, index) {\r\n        if (!src) {\r\n            if (isHTML5VIdeo) {\r\n                return {\r\n                    html5: true,\r\n                };\r\n            }\r\n            else {\r\n                console.error('lightGallery :- data-src is not provided on slide item ' +\r\n                    (index + 1) +\r\n                    '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/');\r\n                return;\r\n            }\r\n        }\r\n        var youtube = src.match(/\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)([\\&|?][\\S]*)*/i);\r\n        var vimeo = src.match(/\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)(.*)?/i);\r\n        var wistia = src.match(/https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/);\r\n        if (youtube) {\r\n            return {\r\n                youtube: youtube,\r\n            };\r\n        }\r\n        else if (vimeo) {\r\n            return {\r\n                vimeo: vimeo,\r\n            };\r\n        }\r\n        else if (wistia) {\r\n            return {\r\n                wistia: wistia,\r\n            };\r\n        }\r\n    },\r\n};\n\n// @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\r\n// @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\r\n// Unique id for each gallery\r\nvar lgId = 0;\r\nvar LightGallery = /** @class */ (function () {\r\n    function LightGallery(element, options) {\r\n        this.lgOpened = false;\r\n        this.index = 0;\r\n        // lightGallery modules\r\n        this.plugins = [];\r\n        // false when lightGallery load first slide content;\r\n        this.lGalleryOn = false;\r\n        // True when a slide animation is in progress\r\n        this.lgBusy = false;\r\n        this.currentItemsInDom = [];\r\n        // Scroll top value before lightGallery is opened\r\n        this.prevScrollTop = 0;\r\n        this.bodyPaddingRight = 0;\r\n        this.isDummyImageRemoved = false;\r\n        this.dragOrSwipeEnabled = false;\r\n        this.mediaContainerPosition = {\r\n            top: 0,\r\n            bottom: 0,\r\n        };\r\n        if (!element) {\r\n            return this;\r\n        }\r\n        lgId++;\r\n        this.lgId = lgId;\r\n        this.el = element;\r\n        this.LGel = $LG(element);\r\n        this.generateSettings(options);\r\n        this.buildModules();\r\n        // When using dynamic mode, ensure dynamicEl is an array\r\n        if (this.settings.dynamic &&\r\n            this.settings.dynamicEl !== undefined &&\r\n            !Array.isArray(this.settings.dynamicEl)) {\r\n            throw 'When using dynamic mode, you must also define dynamicEl as an Array.';\r\n        }\r\n        this.galleryItems = this.getItems();\r\n        this.normalizeSettings();\r\n        // Gallery items\r\n        this.init();\r\n        this.validateLicense();\r\n        return this;\r\n    }\r\n    LightGallery.prototype.generateSettings = function (options) {\r\n        // lightGallery settings\r\n        this.settings = __assign(__assign({}, lightGalleryCoreSettings), options);\r\n        if (this.settings.isMobile &&\r\n            typeof this.settings.isMobile === 'function'\r\n            ? this.settings.isMobile()\r\n            : utils.isMobile()) {\r\n            var mobileSettings = __assign(__assign({}, this.settings.mobileSettings), this.settings.mobileSettings);\r\n            this.settings = __assign(__assign({}, this.settings), mobileSettings);\r\n        }\r\n    };\r\n    LightGallery.prototype.normalizeSettings = function () {\r\n        if (this.settings.slideEndAnimation) {\r\n            this.settings.hideControlOnEnd = false;\r\n        }\r\n        if (!this.settings.closable) {\r\n            this.settings.swipeToClose = false;\r\n        }\r\n        // And reset it on close to get the correct value next time\r\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n        // At the moment, Zoom from image doesn't support dynamic options\r\n        // @todo add zoomFromOrigin support for dynamic images\r\n        if (this.settings.dynamic) {\r\n            this.zoomFromOrigin = false;\r\n        }\r\n        if (!this.settings.container) {\r\n            this.settings.container = document.body;\r\n        }\r\n        // settings.preload should not be grater than $item.length\r\n        this.settings.preload = Math.min(this.settings.preload, this.galleryItems.length);\r\n    };\r\n    LightGallery.prototype.init = function () {\r\n        var _this = this;\r\n        this.addSlideVideoInfo(this.galleryItems);\r\n        this.buildStructure();\r\n        this.LGel.trigger(lGEvents.init, {\r\n            instance: this,\r\n        });\r\n        if (this.settings.keyPress) {\r\n            this.keyPress();\r\n        }\r\n        setTimeout(function () {\r\n            _this.enableDrag();\r\n            _this.enableSwipe();\r\n            _this.triggerPosterClick();\r\n        }, 50);\r\n        this.arrow();\r\n        if (this.settings.mousewheel) {\r\n            this.mousewheel();\r\n        }\r\n        if (!this.settings.dynamic) {\r\n            this.openGalleryOnItemClick();\r\n        }\r\n    };\r\n    LightGallery.prototype.openGalleryOnItemClick = function () {\r\n        var _this = this;\r\n        var _loop_1 = function (index) {\r\n            var element = this_1.items[index];\r\n            var $element = $LG(element);\r\n            // Using different namespace for click because click event should not unbind if selector is same object('this')\r\n            // @todo manage all event listners - should have namespace that represent element\r\n            var uuid = lgQuery.generateUUID();\r\n            $element\r\n                .attr('data-lg-id', uuid)\r\n                .on(\"click.lgcustom-item-\" + uuid, function (e) {\r\n                e.preventDefault();\r\n                var currentItemIndex = _this.settings.index || index;\r\n                _this.openGallery(currentItemIndex, element);\r\n            });\r\n        };\r\n        var this_1 = this;\r\n        // Using for loop instead of using bubbling as the items can be any html element.\r\n        for (var index = 0; index < this.items.length; index++) {\r\n            _loop_1(index);\r\n        }\r\n    };\r\n    /**\r\n     * Module constructor\r\n     * Modules are build incrementally.\r\n     * Gallery should be opened only once all the modules are initialized.\r\n     * use moduleBuildTimeout to make sure this\r\n     */\r\n    LightGallery.prototype.buildModules = function () {\r\n        var _this = this;\r\n        this.settings.plugins.forEach(function (plugin) {\r\n            _this.plugins.push(new plugin(_this, $LG));\r\n        });\r\n    };\r\n    LightGallery.prototype.validateLicense = function () {\r\n        if (!this.settings.licenseKey) {\r\n            console.error('Please provide a valid license key');\r\n        }\r\n        else if (this.settings.licenseKey === '0000-0000-000-0000') {\r\n            console.warn(\"lightGallery: \" + this.settings.licenseKey + \" license key is not valid for production use\");\r\n        }\r\n    };\r\n    LightGallery.prototype.getSlideItem = function (index) {\r\n        return $LG(this.getSlideItemId(index));\r\n    };\r\n    LightGallery.prototype.getSlideItemId = function (index) {\r\n        return \"#lg-item-\" + this.lgId + \"-\" + index;\r\n    };\r\n    LightGallery.prototype.getIdName = function (id) {\r\n        return id + \"-\" + this.lgId;\r\n    };\r\n    LightGallery.prototype.getElementById = function (id) {\r\n        return $LG(\"#\" + this.getIdName(id));\r\n    };\r\n    LightGallery.prototype.manageSingleSlideClassName = function () {\r\n        if (this.galleryItems.length < 2) {\r\n            this.outer.addClass('lg-single-item');\r\n        }\r\n        else {\r\n            this.outer.removeClass('lg-single-item');\r\n        }\r\n    };\r\n    LightGallery.prototype.buildStructure = function () {\r\n        var _this = this;\r\n        var container = this.$container && this.$container.get();\r\n        if (container) {\r\n            return;\r\n        }\r\n        var controls = '';\r\n        var subHtmlCont = '';\r\n        // Create controls\r\n        if (this.settings.controls) {\r\n            controls = \"<button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-prev') + \"\\\" aria-label=\\\"\" + this.settings.strings['previousSlide'] + \"\\\" class=\\\"lg-prev lg-icon\\\"> \" + this.settings.prevHtml + \" </button>\\n                <button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-next') + \"\\\" aria-label=\\\"\" + this.settings.strings['nextSlide'] + \"\\\" class=\\\"lg-next lg-icon\\\"> \" + this.settings.nextHtml + \" </button>\";\r\n        }\r\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\r\n            subHtmlCont =\r\n                '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\r\n        }\r\n        var addClasses = '';\r\n        if (this.settings.allowMediaOverlap) {\r\n            // Do not remove space before last single quote\r\n            addClasses += 'lg-media-overlap ';\r\n        }\r\n        var ariaLabelledby = this.settings.ariaLabelledby\r\n            ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"'\r\n            : '';\r\n        var ariaDescribedby = this.settings.ariaDescribedby\r\n            ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"'\r\n            : '';\r\n        var containerClassName = \"lg-container \" + this.settings.addClass + \" \" + (document.body !== this.settings.container ? 'lg-inline' : '');\r\n        var closeIcon = this.settings.closable && this.settings.showCloseIcon\r\n            ? \"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.strings['closeGallery'] + \"\\\" id=\\\"\" + this.getIdName('lg-close') + \"\\\" class=\\\"lg-close lg-icon\\\"></button>\"\r\n            : '';\r\n        var maximizeIcon = this.settings.showMaximizeIcon\r\n            ? \"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.strings['toggleMaximize'] + \"\\\" id=\\\"\" + this.getIdName('lg-maximize') + \"\\\" class=\\\"lg-maximize lg-icon\\\"></button>\"\r\n            : '';\r\n        var template = \"\\n        <div class=\\\"\" + containerClassName + \"\\\" id=\\\"\" + this.getIdName('lg-container') + \"\\\" tabindex=\\\"-1\\\" aria-modal=\\\"true\\\" \" + ariaLabelledby + \" \" + ariaDescribedby + \" role=\\\"dialog\\\"\\n        >\\n            <div id=\\\"\" + this.getIdName('lg-backdrop') + \"\\\" class=\\\"lg-backdrop\\\"></div>\\n\\n            <div id=\\\"\" + this.getIdName('lg-outer') + \"\\\" class=\\\"lg-outer lg-use-css3 lg-css3 lg-hide-items \" + addClasses + \" \\\">\\n\\n              <div id=\\\"\" + this.getIdName('lg-content') + \"\\\" class=\\\"lg-content\\\">\\n                <div id=\\\"\" + this.getIdName('lg-inner') + \"\\\" class=\\\"lg-inner\\\">\\n                </div>\\n                \" + controls + \"\\n              </div>\\n                <div id=\\\"\" + this.getIdName('lg-toolbar') + \"\\\" class=\\\"lg-toolbar lg-group\\\">\\n                    \" + maximizeIcon + \"\\n                    \" + closeIcon + \"\\n                    </div>\\n                    \" + (this.settings.appendSubHtmlTo === '.lg-outer'\r\n            ? subHtmlCont\r\n            : '') + \"\\n                <div id=\\\"\" + this.getIdName('lg-components') + \"\\\" class=\\\"lg-components\\\">\\n                    \" + (this.settings.appendSubHtmlTo === '.lg-sub-html'\r\n            ? subHtmlCont\r\n            : '') + \"\\n                </div>\\n            </div>\\n        </div>\\n        \";\r\n        $LG(this.settings.container).append(template);\r\n        if (document.body !== this.settings.container) {\r\n            $LG(this.settings.container).css('position', 'relative');\r\n        }\r\n        this.outer = this.getElementById('lg-outer');\r\n        this.$lgComponents = this.getElementById('lg-components');\r\n        this.$backdrop = this.getElementById('lg-backdrop');\r\n        this.$container = this.getElementById('lg-container');\r\n        this.$inner = this.getElementById('lg-inner');\r\n        this.$content = this.getElementById('lg-content');\r\n        this.$toolbar = this.getElementById('lg-toolbar');\r\n        this.$backdrop.css('transition-duration', this.settings.backdropDuration + 'ms');\r\n        var outerClassNames = this.settings.mode + \" \";\r\n        this.manageSingleSlideClassName();\r\n        if (this.settings.enableDrag) {\r\n            outerClassNames += 'lg-grab ';\r\n        }\r\n        this.outer.addClass(outerClassNames);\r\n        this.$inner.css('transition-timing-function', this.settings.easing);\r\n        this.$inner.css('transition-duration', this.settings.speed + 'ms');\r\n        if (this.settings.download) {\r\n            this.$toolbar.append(\"<a id=\\\"\" + this.getIdName('lg-download') + \"\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" aria-label=\\\"\" + this.settings.strings['download'] + \"\\\" download class=\\\"lg-download lg-icon\\\"></a>\");\r\n        }\r\n        this.counter();\r\n        $LG(window).on(\"resize.lg.global\" + this.lgId + \" orientationchange.lg.global\" + this.lgId, function () {\r\n            _this.refreshOnResize();\r\n        });\r\n        this.hideBars();\r\n        this.manageCloseGallery();\r\n        this.toggleMaximize();\r\n        this.initModules();\r\n    };\r\n    LightGallery.prototype.refreshOnResize = function () {\r\n        if (this.lgOpened) {\r\n            var currentGalleryItem = this.galleryItems[this.index];\r\n            var __slideVideoInfo = currentGalleryItem.__slideVideoInfo;\r\n            this.mediaContainerPosition = this.getMediaContainerPosition();\r\n            var _a = this.mediaContainerPosition, top_1 = _a.top, bottom = _a.bottom;\r\n            this.currentImageSize = utils.getSize(this.items[this.index], this.outer, top_1 + bottom, __slideVideoInfo && this.settings.videoMaxSize);\r\n            if (__slideVideoInfo) {\r\n                this.resizeVideoSlide(this.index, this.currentImageSize);\r\n            }\r\n            if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\r\n                var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n                this.outer\r\n                    .find('.lg-current .lg-dummy-img')\r\n                    .first()\r\n                    .attr('style', imgStyle);\r\n            }\r\n            this.LGel.trigger(lGEvents.containerResize);\r\n        }\r\n    };\r\n    LightGallery.prototype.resizeVideoSlide = function (index, imageSize) {\r\n        var lgVideoStyle = this.getVideoContStyle(imageSize);\r\n        var currentSlide = this.getSlideItem(index);\r\n        currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);\r\n    };\r\n    /**\r\n     * Update slides dynamically.\r\n     * Add, edit or delete slides dynamically when lightGallery is opened.\r\n     * Modify the current gallery items and pass it via updateSlides method\r\n     * @note\r\n     * - Do not mutate existing lightGallery items directly.\r\n     * - Always pass new list of gallery items\r\n     * - You need to take care of thumbnails outside the gallery if any\r\n     * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.\r\n     * @param items Gallery items\r\n     * @param index After the update operation, which slide gallery should navigate to\r\n     * @category lGPublicMethods\r\n     * @example\r\n     * const plugin = lightGallery();\r\n     *\r\n     * // Adding slides dynamically\r\n     * let galleryItems = [\r\n     * // Access existing lightGallery items\r\n     * // galleryItems are automatically generated internally from the gallery HTML markup\r\n     * // or directly from galleryItems when dynamic gallery is used\r\n     *   ...plugin.galleryItems,\r\n     *     ...[\r\n     *       {\r\n     *         src: 'img/img-1.png',\r\n     *           thumb: 'img/thumb1.png',\r\n     *         },\r\n     *     ],\r\n     *   ];\r\n     *   plugin.updateSlides(\r\n     *     galleryItems,\r\n     *     plugin.index,\r\n     *   );\r\n     *\r\n     *\r\n     * // Remove slides dynamically\r\n     * galleryItems = JSON.parse(\r\n     *   JSON.stringify(updateSlideInstance.galleryItems),\r\n     * );\r\n     * galleryItems.shift();\r\n     * updateSlideInstance.updateSlides(galleryItems, 1);\r\n     * @see <a href=\"/demos/update-slides/\">Demo</a>\r\n     */\r\n    LightGallery.prototype.updateSlides = function (items, index) {\r\n        if (this.index > items.length - 1) {\r\n            this.index = items.length - 1;\r\n        }\r\n        if (items.length === 1) {\r\n            this.index = 0;\r\n        }\r\n        if (!items.length) {\r\n            this.closeGallery();\r\n            return;\r\n        }\r\n        var currentSrc = this.galleryItems[index].src;\r\n        this.galleryItems = items;\r\n        this.updateControls();\r\n        this.$inner.empty();\r\n        this.currentItemsInDom = [];\r\n        var _index = 0;\r\n        // Find the current index based on source value of the slide\r\n        this.galleryItems.some(function (galleryItem, itemIndex) {\r\n            if (galleryItem.src === currentSrc) {\r\n                _index = itemIndex;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        this.currentItemsInDom = this.organizeSlideItems(_index, -1);\r\n        this.loadContent(_index, true);\r\n        this.getSlideItem(_index).addClass('lg-current');\r\n        this.index = _index;\r\n        this.updateCurrentCounter(_index);\r\n        this.LGel.trigger(lGEvents.updateSlides);\r\n    };\r\n    // Get gallery items based on multiple conditions\r\n    LightGallery.prototype.getItems = function () {\r\n        // Gallery items\r\n        this.items = [];\r\n        if (!this.settings.dynamic) {\r\n            if (this.settings.selector === 'this') {\r\n                this.items.push(this.el);\r\n            }\r\n            else if (this.settings.selector) {\r\n                if (typeof this.settings.selector === 'string') {\r\n                    if (this.settings.selectWithin) {\r\n                        var selectWithin = $LG(this.settings.selectWithin);\r\n                        this.items = selectWithin\r\n                            .find(this.settings.selector)\r\n                            .get();\r\n                    }\r\n                    else {\r\n                        this.items = this.el.querySelectorAll(this.settings.selector);\r\n                    }\r\n                }\r\n                else {\r\n                    this.items = this.settings.selector;\r\n                }\r\n            }\r\n            else {\r\n                this.items = this.el.children;\r\n            }\r\n            return utils.getDynamicOptions(this.items, this.settings.extraProps, this.settings.getCaptionFromTitleOrAlt, this.settings.exThumbImage);\r\n        }\r\n        else {\r\n            return this.settings.dynamicEl || [];\r\n        }\r\n    };\r\n    LightGallery.prototype.shouldHideScrollbar = function () {\r\n        return (this.settings.hideScrollbar &&\r\n            document.body === this.settings.container);\r\n    };\r\n    LightGallery.prototype.hideScrollbar = function () {\r\n        if (!this.shouldHideScrollbar()) {\r\n            return;\r\n        }\r\n        this.bodyPaddingRight = parseFloat($LG('body').style().paddingRight);\r\n        var bodyRect = document.documentElement.getBoundingClientRect();\r\n        var scrollbarWidth = window.innerWidth - bodyRect.width;\r\n        $LG(document.body).css('padding-right', scrollbarWidth + this.bodyPaddingRight + 'px');\r\n        $LG(document.body).addClass('lg-overlay-open');\r\n    };\r\n    LightGallery.prototype.resetScrollBar = function () {\r\n        if (!this.shouldHideScrollbar()) {\r\n            return;\r\n        }\r\n        $LG(document.body).css('padding-right', this.bodyPaddingRight + 'px');\r\n        $LG(document.body).removeClass('lg-overlay-open');\r\n    };\r\n    /**\r\n     * Open lightGallery.\r\n     * Open gallery with specific slide by passing index of the slide as parameter.\r\n     * @category lGPublicMethods\r\n     * @param {Number} index  - index of the slide\r\n     * @param {HTMLElement} element - Which image lightGallery should zoom from\r\n     *\r\n     * @example\r\n     * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\r\n     * const dynamicGallery = lightGallery($dynamicGallery, {\r\n     *     dynamic: true,\r\n     *     dynamicEl: [\r\n     *         {\r\n     *              src: 'img/1.jpg',\r\n     *              thumb: 'img/thumb-1.jpg',\r\n     *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\r\n     *         },\r\n     *         ...\r\n     *     ],\r\n     * });\r\n     * $dynamicGallery.addEventListener('click', function () {\r\n     *     // Starts with third item.(Optional).\r\n     *     // This is useful if you want use dynamic mode with\r\n     *     // custom thumbnails (thumbnails outside gallery),\r\n     *     dynamicGallery.openGallery(2);\r\n     * });\r\n     *\r\n     */\r\n    LightGallery.prototype.openGallery = function (index, element) {\r\n        var _this = this;\r\n        if (index === void 0) { index = this.settings.index; }\r\n        // prevent accidental double execution\r\n        if (this.lgOpened)\r\n            return;\r\n        this.lgOpened = true;\r\n        this.outer.removeClass('lg-hide-items');\r\n        this.hideScrollbar();\r\n        // Add display block, but still has opacity 0\r\n        this.$container.addClass('lg-show');\r\n        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, index);\r\n        this.currentItemsInDom = itemsToBeInsertedToDom;\r\n        var items = '';\r\n        itemsToBeInsertedToDom.forEach(function (item) {\r\n            items = items + (\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n        });\r\n        this.$inner.append(items);\r\n        this.addHtml(index);\r\n        var transform = '';\r\n        this.mediaContainerPosition = this.getMediaContainerPosition();\r\n        var _a = this.mediaContainerPosition, top = _a.top, bottom = _a.bottom;\r\n        if (!this.settings.allowMediaOverlap) {\r\n            this.setMediaContainerPosition(top, bottom);\r\n        }\r\n        var __slideVideoInfo = this.galleryItems[index].__slideVideoInfo;\r\n        if (this.zoomFromOrigin && element) {\r\n            this.currentImageSize = utils.getSize(element, this.outer, top + bottom, __slideVideoInfo && this.settings.videoMaxSize);\r\n            transform = utils.getTransform(element, this.outer, top, bottom, this.currentImageSize);\r\n        }\r\n        if (!this.zoomFromOrigin || !transform) {\r\n            this.outer.addClass(this.settings.startClass);\r\n            this.getSlideItem(index).removeClass('lg-complete');\r\n        }\r\n        var timeout = this.settings.zoomFromOrigin\r\n            ? 100\r\n            : this.settings.backdropDuration;\r\n        setTimeout(function () {\r\n            _this.outer.addClass('lg-components-open');\r\n        }, timeout);\r\n        this.index = index;\r\n        this.LGel.trigger(lGEvents.beforeOpen);\r\n        // add class lg-current to remove initial transition\r\n        this.getSlideItem(index).addClass('lg-current');\r\n        this.lGalleryOn = false;\r\n        // Store the current scroll top value to scroll back after closing the gallery..\r\n        this.prevScrollTop = $LG(window).scrollTop();\r\n        setTimeout(function () {\r\n            // Need to check both zoomFromOrigin and transform values as we need to set set the\r\n            // default opening animation if user missed to add the lg-size attribute\r\n            if (_this.zoomFromOrigin && transform) {\r\n                var currentSlide_1 = _this.getSlideItem(index);\r\n                currentSlide_1.css('transform', transform);\r\n                setTimeout(function () {\r\n                    currentSlide_1\r\n                        .addClass('lg-start-progress lg-start-end-progress')\r\n                        .css('transition-duration', _this.settings.startAnimationDuration + 'ms');\r\n                    _this.outer.addClass('lg-zoom-from-image');\r\n                });\r\n                setTimeout(function () {\r\n                    currentSlide_1.css('transform', 'translate3d(0, 0, 0)');\r\n                }, 100);\r\n            }\r\n            setTimeout(function () {\r\n                _this.$backdrop.addClass('in');\r\n                _this.$container.addClass('lg-show-in');\r\n            }, 10);\r\n            setTimeout(function () {\r\n                if (_this.settings.trapFocus &&\r\n                    document.body === _this.settings.container) {\r\n                    _this.trapFocus();\r\n                }\r\n            }, _this.settings.backdropDuration + 50);\r\n            // lg-visible class resets gallery opacity to 1\r\n            if (!_this.zoomFromOrigin || !transform) {\r\n                setTimeout(function () {\r\n                    _this.outer.addClass('lg-visible');\r\n                }, _this.settings.backdropDuration);\r\n            }\r\n            // initiate slide function\r\n            _this.slide(index, false, false, false);\r\n            _this.LGel.trigger(lGEvents.afterOpen);\r\n        });\r\n        if (document.body === this.settings.container) {\r\n            $LG('html').addClass('lg-on');\r\n        }\r\n    };\r\n    /**\r\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\r\n     * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\r\n     * if you have dynamic captions for each media,\r\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\r\n     */\r\n    LightGallery.prototype.getMediaContainerPosition = function () {\r\n        if (this.settings.allowMediaOverlap) {\r\n            return {\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n        }\r\n        var top = this.$toolbar.get().clientHeight || 0;\r\n        var subHtml = this.outer.find('.lg-components .lg-sub-html').get();\r\n        var captionHeight = this.settings.defaultCaptionHeight ||\r\n            (subHtml && subHtml.clientHeight) ||\r\n            0;\r\n        var thumbContainer = this.outer.find('.lg-thumb-outer').get();\r\n        var thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\r\n        var bottom = thumbHeight + captionHeight;\r\n        return {\r\n            top: top,\r\n            bottom: bottom,\r\n        };\r\n    };\r\n    LightGallery.prototype.setMediaContainerPosition = function (top, bottom) {\r\n        if (top === void 0) { top = 0; }\r\n        if (bottom === void 0) { bottom = 0; }\r\n        this.$content.css('top', top + 'px').css('bottom', bottom + 'px');\r\n    };\r\n    LightGallery.prototype.hideBars = function () {\r\n        var _this = this;\r\n        // Hide controllers if mouse doesn't move for some period\r\n        setTimeout(function () {\r\n            _this.outer.removeClass('lg-hide-items');\r\n            if (_this.settings.hideBarsDelay > 0) {\r\n                _this.outer.on('mousemove.lg click.lg touchstart.lg', function () {\r\n                    _this.outer.removeClass('lg-hide-items');\r\n                    clearTimeout(_this.hideBarTimeout);\r\n                    // Timeout will be cleared on each slide movement also\r\n                    _this.hideBarTimeout = setTimeout(function () {\r\n                        _this.outer.addClass('lg-hide-items');\r\n                    }, _this.settings.hideBarsDelay);\r\n                });\r\n                _this.outer.trigger('mousemove.lg');\r\n            }\r\n        }, this.settings.showBarsAfter);\r\n    };\r\n    LightGallery.prototype.initPictureFill = function ($img) {\r\n        if (this.settings.supportLegacyBrowser) {\r\n            try {\r\n                picturefill({\r\n                    elements: [$img.get()],\r\n                });\r\n            }\r\n            catch (e) {\r\n                console.warn('lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  @desc Create image counter\r\n     *  Ex: 1/10\r\n     */\r\n    LightGallery.prototype.counter = function () {\r\n        if (this.settings.counter) {\r\n            var counterHtml = \"<div class=\\\"lg-counter\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">\\n                <span id=\\\"\" + this.getIdName('lg-counter-current') + \"\\\" class=\\\"lg-counter-current\\\">\" + (this.index + 1) + \" </span> /\\n                <span id=\\\"\" + this.getIdName('lg-counter-all') + \"\\\" class=\\\"lg-counter-all\\\">\" + this.galleryItems.length + \" </span></div>\";\r\n            this.outer.find(this.settings.appendCounterTo).append(counterHtml);\r\n        }\r\n    };\r\n    /**\r\n     *  @desc add sub-html into the slide\r\n     *  @param {Number} index - index of the slide\r\n     */\r\n    LightGallery.prototype.addHtml = function (index) {\r\n        var subHtml;\r\n        var subHtmlUrl;\r\n        if (this.galleryItems[index].subHtmlUrl) {\r\n            subHtmlUrl = this.galleryItems[index].subHtmlUrl;\r\n        }\r\n        else {\r\n            subHtml = this.galleryItems[index].subHtml;\r\n        }\r\n        if (!subHtmlUrl) {\r\n            if (subHtml) {\r\n                // get first letter of sub-html\r\n                // if first letter starts with . or # get the html form the jQuery object\r\n                var fL = subHtml.substring(0, 1);\r\n                if (fL === '.' || fL === '#') {\r\n                    if (this.settings.subHtmlSelectorRelative &&\r\n                        !this.settings.dynamic) {\r\n                        subHtml = $LG(this.items)\r\n                            .eq(index)\r\n                            .find(subHtml)\r\n                            .first()\r\n                            .html();\r\n                    }\r\n                    else {\r\n                        subHtml = $LG(subHtml).first().html();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                subHtml = '';\r\n            }\r\n        }\r\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\r\n            if (subHtmlUrl) {\r\n                this.outer.find('.lg-sub-html').load(subHtmlUrl);\r\n            }\r\n            else {\r\n                this.outer.find('.lg-sub-html').html(subHtml);\r\n            }\r\n        }\r\n        else {\r\n            var currentSlide = $LG(this.getSlideItemId(index));\r\n            if (subHtmlUrl) {\r\n                currentSlide.load(subHtmlUrl);\r\n            }\r\n            else {\r\n                currentSlide.append(\"<div class=\\\"lg-sub-html\\\">\" + subHtml + \"</div>\");\r\n            }\r\n        }\r\n        // Add lg-empty-html class if title doesn't exist\r\n        if (typeof subHtml !== 'undefined' && subHtml !== null) {\r\n            if (subHtml === '') {\r\n                this.outer\r\n                    .find(this.settings.appendSubHtmlTo)\r\n                    .addClass('lg-empty-html');\r\n            }\r\n            else {\r\n                this.outer\r\n                    .find(this.settings.appendSubHtmlTo)\r\n                    .removeClass('lg-empty-html');\r\n            }\r\n        }\r\n        this.LGel.trigger(lGEvents.afterAppendSubHtml, {\r\n            index: index,\r\n        });\r\n    };\r\n    /**\r\n     *  @desc Preload slides\r\n     *  @param {Number} index - index of the slide\r\n     * @todo preload not working for the first slide, Also, should work for the first and last slide as well\r\n     */\r\n    LightGallery.prototype.preload = function (index) {\r\n        for (var i = 1; i <= this.settings.preload; i++) {\r\n            if (i >= this.galleryItems.length - index) {\r\n                break;\r\n            }\r\n            this.loadContent(index + i, false);\r\n        }\r\n        for (var j = 1; j <= this.settings.preload; j++) {\r\n            if (index - j < 0) {\r\n                break;\r\n            }\r\n            this.loadContent(index - j, false);\r\n        }\r\n    };\r\n    LightGallery.prototype.getDummyImgStyles = function (imageSize) {\r\n        if (!imageSize)\r\n            return '';\r\n        return \"width:\" + imageSize.width + \"px;\\n                margin-left: -\" + imageSize.width / 2 + \"px;\\n                margin-top: -\" + imageSize.height / 2 + \"px;\\n                height:\" + imageSize.height + \"px\";\r\n    };\r\n    LightGallery.prototype.getVideoContStyle = function (imageSize) {\r\n        if (!imageSize)\r\n            return '';\r\n        return \"width:\" + imageSize.width + \"px;\\n                height:\" + imageSize.height + \"px\";\r\n    };\r\n    LightGallery.prototype.getDummyImageContent = function ($currentSlide, index, alt) {\r\n        var $currentItem;\r\n        if (!this.settings.dynamic) {\r\n            $currentItem = $LG(this.items).eq(index);\r\n        }\r\n        if ($currentItem) {\r\n            var _dummyImgSrc = void 0;\r\n            if (!this.settings.exThumbImage) {\r\n                _dummyImgSrc = $currentItem.find('img').first().attr('src');\r\n            }\r\n            else {\r\n                _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\r\n            }\r\n            if (!_dummyImgSrc)\r\n                return '';\r\n            var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n            var dummyImgContent = \"<img \" + alt + \" style=\\\"\" + imgStyle + \"\\\" class=\\\"lg-dummy-img\\\" src=\\\"\" + _dummyImgSrc + \"\\\" />\";\r\n            $currentSlide.addClass('lg-first-slide');\r\n            this.outer.addClass('lg-first-slide-loading');\r\n            return dummyImgContent;\r\n        }\r\n        return '';\r\n    };\r\n    LightGallery.prototype.setImgMarkup = function (src, $currentSlide, index) {\r\n        var currentGalleryItem = this.galleryItems[index];\r\n        var alt = currentGalleryItem.alt, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n        // Use the thumbnail as dummy image which will be resized to actual image size and\r\n        // displayed on top of actual image\r\n        var imgContent = '';\r\n        var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n        if (this.isFirstSlideWithZoomAnimation()) {\r\n            imgContent = this.getDummyImageContent($currentSlide, index, altAttr);\r\n        }\r\n        else {\r\n            imgContent = utils.getImgMarkup(index, src, altAttr, srcset, sizes, sources);\r\n        }\r\n        var imgMarkup = \"<picture class=\\\"lg-img-wrap\\\"> \" + imgContent + \"</picture>\";\r\n        $currentSlide.prepend(imgMarkup);\r\n    };\r\n    LightGallery.prototype.onSlideObjectLoad = function ($slide, isHTML5VideoWithoutPoster, onLoad, onError) {\r\n        var mediaObject = $slide.find('.lg-object').first();\r\n        if (utils.isImageLoaded(mediaObject.get()) ||\r\n            isHTML5VideoWithoutPoster) {\r\n            onLoad();\r\n        }\r\n        else {\r\n            mediaObject.on('load.lg error.lg', function () {\r\n                onLoad && onLoad();\r\n            });\r\n            mediaObject.on('error.lg', function () {\r\n                onError && onError();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param $el Current slide item\r\n     * @param index\r\n     * @param delay Delay is 0 except first time\r\n     * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin\r\n     * @param isFirstSlide\r\n     */\r\n    LightGallery.prototype.onLgObjectLoad = function (currentSlide, index, delay, speed, isFirstSlide, isHTML5VideoWithoutPoster) {\r\n        var _this = this;\r\n        this.onSlideObjectLoad(currentSlide, isHTML5VideoWithoutPoster, function () {\r\n            _this.triggerSlideItemLoad(currentSlide, index, delay, speed, isFirstSlide);\r\n        }, function () {\r\n            currentSlide.addClass('lg-complete lg-complete_');\r\n            currentSlide.html('<span class=\"lg-error-msg\">' +\r\n                _this.settings.strings['mediaLoadingFailed'] +\r\n                '</span>');\r\n        });\r\n    };\r\n    LightGallery.prototype.triggerSlideItemLoad = function ($currentSlide, index, delay, speed, isFirstSlide) {\r\n        var _this = this;\r\n        var currentGalleryItem = this.galleryItems[index];\r\n        // Adding delay for video slides without poster for better performance and user experience\r\n        // Videos should start playing once once the gallery is completely loaded\r\n        var _speed = isFirstSlide &&\r\n            this.getSlideType(currentGalleryItem) === 'video' &&\r\n            !currentGalleryItem.poster\r\n            ? speed\r\n            : 0;\r\n        setTimeout(function () {\r\n            $currentSlide.addClass('lg-complete lg-complete_');\r\n            _this.LGel.trigger(lGEvents.slideItemLoad, {\r\n                index: index,\r\n                delay: delay || 0,\r\n                isFirstSlide: isFirstSlide,\r\n            });\r\n        }, _speed);\r\n    };\r\n    LightGallery.prototype.isFirstSlideWithZoomAnimation = function () {\r\n        return !!(!this.lGalleryOn &&\r\n            this.zoomFromOrigin &&\r\n            this.currentImageSize);\r\n    };\r\n    // Add video slideInfo\r\n    LightGallery.prototype.addSlideVideoInfo = function (items) {\r\n        var _this = this;\r\n        items.forEach(function (element, index) {\r\n            element.__slideVideoInfo = utils.isVideo(element.src, !!element.video, index);\r\n            if (element.__slideVideoInfo &&\r\n                _this.settings.loadYouTubePoster &&\r\n                !element.poster &&\r\n                element.__slideVideoInfo.youtube) {\r\n                element.poster = \"//img.youtube.com/vi/\" + element.__slideVideoInfo.youtube[1] + \"/maxresdefault.jpg\";\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     *  Load slide content into slide.\r\n     *  This is used to load content into slides that is not visible too\r\n     *  @param {Number} index - index of the slide.\r\n     *  @param {Boolean} rec - if true call loadcontent() function again.\r\n     */\r\n    LightGallery.prototype.loadContent = function (index, rec) {\r\n        var _this = this;\r\n        var currentGalleryItem = this.galleryItems[index];\r\n        var $currentSlide = $LG(this.getSlideItemId(index));\r\n        var poster = currentGalleryItem.poster, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n        var src = currentGalleryItem.src;\r\n        var video = currentGalleryItem.video;\r\n        var _html5Video = video && typeof video === 'string' ? JSON.parse(video) : video;\r\n        if (currentGalleryItem.responsive) {\r\n            var srcDyItms = currentGalleryItem.responsive.split(',');\r\n            src = utils.getResponsiveSrc(srcDyItms) || src;\r\n        }\r\n        var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n        var lgVideoStyle = '';\r\n        var iframe = !!currentGalleryItem.iframe;\r\n        var isFirstSlide = !this.lGalleryOn;\r\n        // delay for adding complete class. it is 0 except first time.\r\n        var delay = 0;\r\n        if (isFirstSlide) {\r\n            if (this.zoomFromOrigin && this.currentImageSize) {\r\n                delay = this.settings.startAnimationDuration + 10;\r\n            }\r\n            else {\r\n                delay = this.settings.backdropDuration + 10;\r\n            }\r\n        }\r\n        if (!$currentSlide.hasClass('lg-loaded')) {\r\n            if (videoInfo) {\r\n                var _a = this.mediaContainerPosition, top_2 = _a.top, bottom = _a.bottom;\r\n                var videoSize = utils.getSize(this.items[index], this.outer, top_2 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                lgVideoStyle = this.getVideoContStyle(videoSize);\r\n            }\r\n            if (iframe) {\r\n                var markup = utils.getIframeMarkup(this.settings.iframeWidth, this.settings.iframeHeight, this.settings.iframeMaxWidth, this.settings.iframeMaxHeight, src, currentGalleryItem.iframeTitle);\r\n                $currentSlide.prepend(markup);\r\n            }\r\n            else if (poster) {\r\n                var dummyImg = '';\r\n                var hasStartAnimation = isFirstSlide &&\r\n                    this.zoomFromOrigin &&\r\n                    this.currentImageSize;\r\n                if (hasStartAnimation) {\r\n                    dummyImg = this.getDummyImageContent($currentSlide, index, '');\r\n                }\r\n                var markup = utils.getVideoPosterMarkup(poster, dummyImg || '', lgVideoStyle, this.settings.strings['playVideo'], videoInfo);\r\n                $currentSlide.prepend(markup);\r\n            }\r\n            else if (videoInfo) {\r\n                var markup = \"<div class=\\\"lg-video-cont \\\" style=\\\"\" + lgVideoStyle + \"\\\"></div>\";\r\n                $currentSlide.prepend(markup);\r\n            }\r\n            else {\r\n                this.setImgMarkup(src, $currentSlide, index);\r\n                if (srcset || sources) {\r\n                    var $img = $currentSlide.find('.lg-object');\r\n                    this.initPictureFill($img);\r\n                }\r\n            }\r\n            if (poster || videoInfo) {\r\n                this.LGel.trigger(lGEvents.hasVideo, {\r\n                    index: index,\r\n                    src: src,\r\n                    html5Video: _html5Video,\r\n                    hasPoster: !!poster,\r\n                });\r\n            }\r\n            this.LGel.trigger(lGEvents.afterAppendSlide, { index: index });\r\n            if (this.lGalleryOn &&\r\n                this.settings.appendSubHtmlTo === '.lg-item') {\r\n                this.addHtml(index);\r\n            }\r\n        }\r\n        // For first time add some delay for displaying the start animation.\r\n        var _speed = 0;\r\n        // Do not change the delay value because it is required for zoom plugin.\r\n        // If gallery opened from direct url (hash) speed value should be 0\r\n        if (delay && !$LG(document.body).hasClass('lg-from-hash')) {\r\n            _speed = delay;\r\n        }\r\n        // Only for first slide and zoomFromOrigin is enabled\r\n        if (this.isFirstSlideWithZoomAnimation()) {\r\n            setTimeout(function () {\r\n                $currentSlide\r\n                    .removeClass('lg-start-end-progress lg-start-progress')\r\n                    .removeAttr('style');\r\n            }, this.settings.startAnimationDuration + 100);\r\n            if (!$currentSlide.hasClass('lg-loaded')) {\r\n                setTimeout(function () {\r\n                    if (_this.getSlideType(currentGalleryItem) === 'image') {\r\n                        var alt = currentGalleryItem.alt;\r\n                        var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n                        $currentSlide\r\n                            .find('.lg-img-wrap')\r\n                            .append(utils.getImgMarkup(index, src, altAttr, srcset, sizes, currentGalleryItem.sources));\r\n                        if (srcset || sources) {\r\n                            var $img = $currentSlide.find('.lg-object');\r\n                            _this.initPictureFill($img);\r\n                        }\r\n                    }\r\n                    if (_this.getSlideType(currentGalleryItem) === 'image' ||\r\n                        (_this.getSlideType(currentGalleryItem) === 'video' &&\r\n                            poster)) {\r\n                        _this.onLgObjectLoad($currentSlide, index, delay, _speed, true, false);\r\n                        // load remaining slides once the slide is completely loaded\r\n                        _this.onSlideObjectLoad($currentSlide, !!(videoInfo && videoInfo.html5 && !poster), function () {\r\n                            _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\r\n                        }, function () {\r\n                            _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\r\n                        });\r\n                    }\r\n                }, this.settings.startAnimationDuration + 100);\r\n            }\r\n        }\r\n        // SLide content has been added to dom\r\n        $currentSlide.addClass('lg-loaded');\r\n        if (!this.isFirstSlideWithZoomAnimation() ||\r\n            (this.getSlideType(currentGalleryItem) === 'video' && !poster)) {\r\n            this.onLgObjectLoad($currentSlide, index, delay, _speed, isFirstSlide, !!(videoInfo && videoInfo.html5 && !poster));\r\n        }\r\n        // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\r\n        if ((!this.zoomFromOrigin || !this.currentImageSize) &&\r\n            $currentSlide.hasClass('lg-complete_') &&\r\n            !this.lGalleryOn) {\r\n            setTimeout(function () {\r\n                $currentSlide.addClass('lg-complete');\r\n            }, this.settings.backdropDuration);\r\n        }\r\n        // Content loaded\r\n        // Need to set lGalleryOn before calling preload function\r\n        this.lGalleryOn = true;\r\n        if (rec === true) {\r\n            if (!$currentSlide.hasClass('lg-complete_')) {\r\n                $currentSlide\r\n                    .find('.lg-object')\r\n                    .first()\r\n                    .on('load.lg error.lg', function () {\r\n                    _this.preload(index);\r\n                });\r\n            }\r\n            else {\r\n                this.preload(index);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @desc Remove dummy image content and load next slides\r\n     * Called only for the first time if zoomFromOrigin animation is enabled\r\n     * @param index\r\n     * @param $currentSlide\r\n     * @param speed\r\n     */\r\n    LightGallery.prototype.loadContentOnFirstSlideLoad = function (index, $currentSlide, speed) {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            $currentSlide.find('.lg-dummy-img').remove();\r\n            $currentSlide.removeClass('lg-first-slide');\r\n            _this.outer.removeClass('lg-first-slide-loading');\r\n            _this.isDummyImageRemoved = true;\r\n            _this.preload(index);\r\n        }, speed + 300);\r\n    };\r\n    LightGallery.prototype.getItemsToBeInsertedToDom = function (index, prevIndex, numberOfItems) {\r\n        var _this = this;\r\n        if (numberOfItems === void 0) { numberOfItems = 0; }\r\n        var itemsToBeInsertedToDom = [];\r\n        // Minimum 2 items should be there\r\n        var possibleNumberOfItems = Math.max(numberOfItems, 3);\r\n        possibleNumberOfItems = Math.min(possibleNumberOfItems, this.galleryItems.length);\r\n        var prevIndexItem = \"lg-item-\" + this.lgId + \"-\" + prevIndex;\r\n        if (this.galleryItems.length <= 3) {\r\n            this.galleryItems.forEach(function (_element, index) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + _this.lgId + \"-\" + index);\r\n            });\r\n            return itemsToBeInsertedToDom;\r\n        }\r\n        if (index < (this.galleryItems.length - 1) / 2) {\r\n            for (var idx = index; idx > index - possibleNumberOfItems / 2 && idx >= 0; idx--) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n            }\r\n            var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n            for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index + idx + 1));\r\n            }\r\n        }\r\n        else {\r\n            for (var idx = index; idx <= this.galleryItems.length - 1 &&\r\n                idx < index + possibleNumberOfItems / 2; idx++) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n            }\r\n            var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n            for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index - idx - 1));\r\n            }\r\n        }\r\n        if (this.settings.loop) {\r\n            if (index === this.galleryItems.length - 1) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + 0);\r\n            }\r\n            else if (index === 0) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (this.galleryItems.length - 1));\r\n            }\r\n        }\r\n        if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {\r\n            itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + prevIndex);\r\n        }\r\n        return itemsToBeInsertedToDom;\r\n    };\r\n    LightGallery.prototype.organizeSlideItems = function (index, prevIndex) {\r\n        var _this = this;\r\n        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, prevIndex, this.settings.numberOfSlideItemsInDom);\r\n        itemsToBeInsertedToDom.forEach(function (item) {\r\n            if (_this.currentItemsInDom.indexOf(item) === -1) {\r\n                _this.$inner.append(\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n            }\r\n        });\r\n        this.currentItemsInDom.forEach(function (item) {\r\n            if (itemsToBeInsertedToDom.indexOf(item) === -1) {\r\n                $LG(\"#\" + item).remove();\r\n            }\r\n        });\r\n        return itemsToBeInsertedToDom;\r\n    };\r\n    /**\r\n     * Get previous index of the slide\r\n     */\r\n    LightGallery.prototype.getPreviousSlideIndex = function () {\r\n        var prevIndex = 0;\r\n        try {\r\n            var currentItemId = this.outer\r\n                .find('.lg-current')\r\n                .first()\r\n                .attr('id');\r\n            prevIndex = parseInt(currentItemId.split('-')[3]) || 0;\r\n        }\r\n        catch (error) {\r\n            prevIndex = 0;\r\n        }\r\n        return prevIndex;\r\n    };\r\n    LightGallery.prototype.setDownloadValue = function (index) {\r\n        if (this.settings.download) {\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var hideDownloadBtn = currentGalleryItem.downloadUrl === false ||\r\n                currentGalleryItem.downloadUrl === 'false';\r\n            if (hideDownloadBtn) {\r\n                this.outer.addClass('lg-hide-download');\r\n            }\r\n            else {\r\n                var $download = this.getElementById('lg-download');\r\n                this.outer.removeClass('lg-hide-download');\r\n                $download.attr('href', currentGalleryItem.downloadUrl ||\r\n                    currentGalleryItem.src);\r\n                if (currentGalleryItem.download) {\r\n                    $download.attr('download', currentGalleryItem.download);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.makeSlideAnimation = function (direction, currentSlideItem, previousSlideItem) {\r\n        var _this = this;\r\n        if (this.lGalleryOn) {\r\n            previousSlideItem.addClass('lg-slide-progress');\r\n        }\r\n        setTimeout(function () {\r\n            // remove all transitions\r\n            _this.outer.addClass('lg-no-trans');\r\n            _this.outer\r\n                .find('.lg-item')\r\n                .removeClass('lg-prev-slide lg-next-slide');\r\n            if (direction === 'prev') {\r\n                //prevslide\r\n                currentSlideItem.addClass('lg-prev-slide');\r\n                previousSlideItem.addClass('lg-next-slide');\r\n            }\r\n            else {\r\n                // next slide\r\n                currentSlideItem.addClass('lg-next-slide');\r\n                previousSlideItem.addClass('lg-prev-slide');\r\n            }\r\n            // give 50 ms for browser to add/remove class\r\n            setTimeout(function () {\r\n                _this.outer.find('.lg-item').removeClass('lg-current');\r\n                currentSlideItem.addClass('lg-current');\r\n                // reset all transitions\r\n                _this.outer.removeClass('lg-no-trans');\r\n            }, 50);\r\n        }, this.lGalleryOn ? this.settings.slideDelay : 0);\r\n    };\r\n    /**\r\n     * Goto a specific slide.\r\n     * @param {Number} index - index of the slide\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\r\n     * @param {Boolean} fromThumb - true if slide function called via thumbnail click\r\n     * @param {String} direction - Direction of the slide(next/prev)\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  // to go to 3rd slide\r\n     *  plugin.slide(2);\r\n     *\r\n     */\r\n    LightGallery.prototype.slide = function (index, fromTouch, fromThumb, direction) {\r\n        var _this = this;\r\n        var prevIndex = this.getPreviousSlideIndex();\r\n        this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\r\n        // Prevent multiple call, Required for hsh plugin\r\n        if (this.lGalleryOn && prevIndex === index) {\r\n            return;\r\n        }\r\n        var numberOfGalleryItems = this.galleryItems.length;\r\n        if (!this.lgBusy) {\r\n            if (this.settings.counter) {\r\n                this.updateCurrentCounter(index);\r\n            }\r\n            var currentSlideItem = this.getSlideItem(index);\r\n            var previousSlideItem_1 = this.getSlideItem(prevIndex);\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n            this.outer.attr('data-lg-slide-type', this.getSlideType(currentGalleryItem));\r\n            this.setDownloadValue(index);\r\n            if (videoInfo) {\r\n                var _a = this.mediaContainerPosition, top_3 = _a.top, bottom = _a.bottom;\r\n                var videoSize = utils.getSize(this.items[index], this.outer, top_3 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                this.resizeVideoSlide(index, videoSize);\r\n            }\r\n            this.LGel.trigger(lGEvents.beforeSlide, {\r\n                prevIndex: prevIndex,\r\n                index: index,\r\n                fromTouch: !!fromTouch,\r\n                fromThumb: !!fromThumb,\r\n            });\r\n            this.lgBusy = true;\r\n            clearTimeout(this.hideBarTimeout);\r\n            this.arrowDisable(index);\r\n            if (!direction) {\r\n                if (index < prevIndex) {\r\n                    direction = 'prev';\r\n                }\r\n                else if (index > prevIndex) {\r\n                    direction = 'next';\r\n                }\r\n            }\r\n            if (!fromTouch) {\r\n                this.makeSlideAnimation(direction, currentSlideItem, previousSlideItem_1);\r\n            }\r\n            else {\r\n                this.outer\r\n                    .find('.lg-item')\r\n                    .removeClass('lg-prev-slide lg-current lg-next-slide');\r\n                var touchPrev = void 0;\r\n                var touchNext = void 0;\r\n                if (numberOfGalleryItems > 2) {\r\n                    touchPrev = index - 1;\r\n                    touchNext = index + 1;\r\n                    if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\r\n                        // next slide\r\n                        touchNext = 0;\r\n                        touchPrev = numberOfGalleryItems - 1;\r\n                    }\r\n                    else if (index === numberOfGalleryItems - 1 &&\r\n                        prevIndex === 0) {\r\n                        // prev slide\r\n                        touchNext = 0;\r\n                        touchPrev = numberOfGalleryItems - 1;\r\n                    }\r\n                }\r\n                else {\r\n                    touchPrev = 0;\r\n                    touchNext = 1;\r\n                }\r\n                if (direction === 'prev') {\r\n                    this.getSlideItem(touchNext).addClass('lg-next-slide');\r\n                }\r\n                else {\r\n                    this.getSlideItem(touchPrev).addClass('lg-prev-slide');\r\n                }\r\n                currentSlideItem.addClass('lg-current');\r\n            }\r\n            // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\r\n            if (!this.lGalleryOn) {\r\n                this.loadContent(index, true);\r\n            }\r\n            else {\r\n                setTimeout(function () {\r\n                    _this.loadContent(index, true);\r\n                    // Add title if this.settings.appendSubHtmlTo === lg-sub-html\r\n                    if (_this.settings.appendSubHtmlTo !== '.lg-item') {\r\n                        _this.addHtml(index);\r\n                    }\r\n                }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));\r\n            }\r\n            setTimeout(function () {\r\n                _this.lgBusy = false;\r\n                previousSlideItem_1.removeClass('lg-slide-progress');\r\n                _this.LGel.trigger(lGEvents.afterSlide, {\r\n                    prevIndex: prevIndex,\r\n                    index: index,\r\n                    fromTouch: fromTouch,\r\n                    fromThumb: fromThumb,\r\n                });\r\n            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\r\n        }\r\n        this.index = index;\r\n    };\r\n    LightGallery.prototype.updateCurrentCounter = function (index) {\r\n        this.getElementById('lg-counter-current').html(index + 1 + '');\r\n    };\r\n    LightGallery.prototype.updateCounterTotal = function () {\r\n        this.getElementById('lg-counter-all').html(this.galleryItems.length + '');\r\n    };\r\n    LightGallery.prototype.getSlideType = function (item) {\r\n        if (item.__slideVideoInfo) {\r\n            return 'video';\r\n        }\r\n        else if (item.iframe) {\r\n            return 'iframe';\r\n        }\r\n        else {\r\n            return 'image';\r\n        }\r\n    };\r\n    LightGallery.prototype.touchMove = function (startCoords, endCoords, e) {\r\n        var distanceX = endCoords.pageX - startCoords.pageX;\r\n        var distanceY = endCoords.pageY - startCoords.pageY;\r\n        var allowSwipe = false;\r\n        if (this.swipeDirection) {\r\n            allowSwipe = true;\r\n        }\r\n        else {\r\n            if (Math.abs(distanceX) > 15) {\r\n                this.swipeDirection = 'horizontal';\r\n                allowSwipe = true;\r\n            }\r\n            else if (Math.abs(distanceY) > 15) {\r\n                this.swipeDirection = 'vertical';\r\n                allowSwipe = true;\r\n            }\r\n        }\r\n        if (!allowSwipe) {\r\n            return;\r\n        }\r\n        var $currentSlide = this.getSlideItem(this.index);\r\n        if (this.swipeDirection === 'horizontal') {\r\n            e === null || e === void 0 ? void 0 : e.preventDefault();\r\n            // reset opacity and transition duration\r\n            this.outer.addClass('lg-dragging');\r\n            // move current slide\r\n            this.setTranslate($currentSlide, distanceX, 0);\r\n            // move next and prev slide with current slide\r\n            var width = $currentSlide.get().offsetWidth;\r\n            var slideWidthAmount = (width * 15) / 100;\r\n            var gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);\r\n            this.setTranslate(this.outer.find('.lg-prev-slide').first(), -width + distanceX - gutter, 0);\r\n            this.setTranslate(this.outer.find('.lg-next-slide').first(), width + distanceX + gutter, 0);\r\n        }\r\n        else if (this.swipeDirection === 'vertical') {\r\n            if (this.settings.swipeToClose) {\r\n                e === null || e === void 0 ? void 0 : e.preventDefault();\r\n                this.$container.addClass('lg-dragging-vertical');\r\n                var opacity = 1 - Math.abs(distanceY) / window.innerHeight;\r\n                this.$backdrop.css('opacity', opacity);\r\n                var scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\r\n                this.setTranslate($currentSlide, 0, distanceY, scale, scale);\r\n                if (Math.abs(distanceY) > 100) {\r\n                    this.outer\r\n                        .addClass('lg-hide-items')\r\n                        .removeClass('lg-components-open');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.touchEnd = function (endCoords, startCoords, event) {\r\n        var _this = this;\r\n        var distance;\r\n        // keep slide animation for any mode while dragg/swipe\r\n        if (this.settings.mode !== 'lg-slide') {\r\n            this.outer.addClass('lg-slide');\r\n        }\r\n        // set transition duration\r\n        setTimeout(function () {\r\n            _this.$container.removeClass('lg-dragging-vertical');\r\n            _this.outer\r\n                .removeClass('lg-dragging lg-hide-items')\r\n                .addClass('lg-components-open');\r\n            var triggerClick = true;\r\n            if (_this.swipeDirection === 'horizontal') {\r\n                distance = endCoords.pageX - startCoords.pageX;\r\n                var distanceAbs = Math.abs(endCoords.pageX - startCoords.pageX);\r\n                if (distance < 0 &&\r\n                    distanceAbs > _this.settings.swipeThreshold) {\r\n                    _this.goToNextSlide(true);\r\n                    triggerClick = false;\r\n                }\r\n                else if (distance > 0 &&\r\n                    distanceAbs > _this.settings.swipeThreshold) {\r\n                    _this.goToPrevSlide(true);\r\n                    triggerClick = false;\r\n                }\r\n            }\r\n            else if (_this.swipeDirection === 'vertical') {\r\n                distance = Math.abs(endCoords.pageY - startCoords.pageY);\r\n                if (_this.settings.closable &&\r\n                    _this.settings.swipeToClose &&\r\n                    distance > 100) {\r\n                    _this.closeGallery();\r\n                    return;\r\n                }\r\n                else {\r\n                    _this.$backdrop.css('opacity', 1);\r\n                }\r\n            }\r\n            _this.outer.find('.lg-item').removeAttr('style');\r\n            if (triggerClick &&\r\n                Math.abs(endCoords.pageX - startCoords.pageX) < 5) {\r\n                // Trigger click if distance is less than 5 pix\r\n                var target = $LG(event.target);\r\n                if (_this.isPosterElement(target)) {\r\n                    _this.LGel.trigger(lGEvents.posterClick);\r\n                }\r\n            }\r\n            _this.swipeDirection = undefined;\r\n        });\r\n        // remove slide class once drag/swipe is completed if mode is not slide\r\n        setTimeout(function () {\r\n            if (!_this.outer.hasClass('lg-dragging') &&\r\n                _this.settings.mode !== 'lg-slide') {\r\n                _this.outer.removeClass('lg-slide');\r\n            }\r\n        }, this.settings.speed + 100);\r\n    };\r\n    LightGallery.prototype.enableSwipe = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isMoved = false;\r\n        var isSwiping = false;\r\n        if (this.settings.enableSwipe) {\r\n            this.$inner.on('touchstart.lg', function (e) {\r\n                _this.dragOrSwipeEnabled = true;\r\n                var $item = _this.getSlideItem(_this.index);\r\n                if (($LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) &&\r\n                    !_this.outer.hasClass('lg-zoomed') &&\r\n                    !_this.lgBusy &&\r\n                    e.touches.length === 1) {\r\n                    isSwiping = true;\r\n                    _this.touchAction = 'swipe';\r\n                    _this.manageSwipeClass();\r\n                    startCoords = {\r\n                        pageX: e.touches[0].pageX,\r\n                        pageY: e.touches[0].pageY,\r\n                    };\r\n                }\r\n            });\r\n            this.$inner.on('touchmove.lg', function (e) {\r\n                if (isSwiping &&\r\n                    _this.touchAction === 'swipe' &&\r\n                    e.touches.length === 1) {\r\n                    endCoords = {\r\n                        pageX: e.touches[0].pageX,\r\n                        pageY: e.touches[0].pageY,\r\n                    };\r\n                    _this.touchMove(startCoords, endCoords, e);\r\n                    isMoved = true;\r\n                }\r\n            });\r\n            this.$inner.on('touchend.lg', function (event) {\r\n                if (_this.touchAction === 'swipe') {\r\n                    if (isMoved) {\r\n                        isMoved = false;\r\n                        _this.touchEnd(endCoords, startCoords, event);\r\n                    }\r\n                    else if (isSwiping) {\r\n                        var target = $LG(event.target);\r\n                        if (_this.isPosterElement(target)) {\r\n                            _this.LGel.trigger(lGEvents.posterClick);\r\n                        }\r\n                    }\r\n                    _this.touchAction = undefined;\r\n                    isSwiping = false;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    LightGallery.prototype.enableDrag = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isDraging = false;\r\n        var isMoved = false;\r\n        if (this.settings.enableDrag) {\r\n            this.outer.on('mousedown.lg', function (e) {\r\n                _this.dragOrSwipeEnabled = true;\r\n                var $item = _this.getSlideItem(_this.index);\r\n                if ($LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) {\r\n                    if (!_this.outer.hasClass('lg-zoomed') && !_this.lgBusy) {\r\n                        e.preventDefault();\r\n                        if (!_this.lgBusy) {\r\n                            _this.manageSwipeClass();\r\n                            startCoords = {\r\n                                pageX: e.pageX,\r\n                                pageY: e.pageY,\r\n                            };\r\n                            isDraging = true;\r\n                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                            _this.outer.get().scrollLeft += 1;\r\n                            _this.outer.get().scrollLeft -= 1;\r\n                            // *\r\n                            _this.outer\r\n                                .removeClass('lg-grab')\r\n                                .addClass('lg-grabbing');\r\n                            _this.LGel.trigger(lGEvents.dragStart);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            $LG(window).on(\"mousemove.lg.global\" + this.lgId, function (e) {\r\n                if (isDraging && _this.lgOpened) {\r\n                    isMoved = true;\r\n                    endCoords = {\r\n                        pageX: e.pageX,\r\n                        pageY: e.pageY,\r\n                    };\r\n                    _this.touchMove(startCoords, endCoords);\r\n                    _this.LGel.trigger(lGEvents.dragMove);\r\n                }\r\n            });\r\n            $LG(window).on(\"mouseup.lg.global\" + this.lgId, function (event) {\r\n                if (!_this.lgOpened) {\r\n                    return;\r\n                }\r\n                var target = $LG(event.target);\r\n                if (isMoved) {\r\n                    isMoved = false;\r\n                    _this.touchEnd(endCoords, startCoords, event);\r\n                    _this.LGel.trigger(lGEvents.dragEnd);\r\n                }\r\n                else if (_this.isPosterElement(target)) {\r\n                    _this.LGel.trigger(lGEvents.posterClick);\r\n                }\r\n                // Prevent execution on click\r\n                if (isDraging) {\r\n                    isDraging = false;\r\n                    _this.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    LightGallery.prototype.triggerPosterClick = function () {\r\n        var _this = this;\r\n        this.$inner.on('click.lg', function (event) {\r\n            if (!_this.dragOrSwipeEnabled &&\r\n                _this.isPosterElement($LG(event.target))) {\r\n                _this.LGel.trigger(lGEvents.posterClick);\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.manageSwipeClass = function () {\r\n        var _touchNext = this.index + 1;\r\n        var _touchPrev = this.index - 1;\r\n        if (this.settings.loop && this.galleryItems.length > 2) {\r\n            if (this.index === 0) {\r\n                _touchPrev = this.galleryItems.length - 1;\r\n            }\r\n            else if (this.index === this.galleryItems.length - 1) {\r\n                _touchNext = 0;\r\n            }\r\n        }\r\n        this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');\r\n        if (_touchPrev > -1) {\r\n            this.getSlideItem(_touchPrev).addClass('lg-prev-slide');\r\n        }\r\n        this.getSlideItem(_touchNext).addClass('lg-next-slide');\r\n    };\r\n    /**\r\n     * Go to next slide\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.goToNextSlide();\r\n     * @see <a href=\"/demos/methods/\">Demo</a>\r\n     */\r\n    LightGallery.prototype.goToNextSlide = function (fromTouch) {\r\n        var _this = this;\r\n        var _loop = this.settings.loop;\r\n        if (fromTouch && this.galleryItems.length < 3) {\r\n            _loop = false;\r\n        }\r\n        if (!this.lgBusy) {\r\n            if (this.index + 1 < this.galleryItems.length) {\r\n                this.index++;\r\n                this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                    index: this.index,\r\n                });\r\n                this.slide(this.index, !!fromTouch, false, 'next');\r\n            }\r\n            else {\r\n                if (_loop) {\r\n                    this.index = 0;\r\n                    this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                        index: this.index,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'next');\r\n                }\r\n                else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                    this.outer.addClass('lg-right-end');\r\n                    setTimeout(function () {\r\n                        _this.outer.removeClass('lg-right-end');\r\n                    }, 400);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Go to previous slides\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery({});\r\n     *  plugin.goToPrevSlide();\r\n     * @see <a href=\"/demos/methods/\">Demo</a>\r\n     *\r\n     */\r\n    LightGallery.prototype.goToPrevSlide = function (fromTouch) {\r\n        var _this = this;\r\n        var _loop = this.settings.loop;\r\n        if (fromTouch && this.galleryItems.length < 3) {\r\n            _loop = false;\r\n        }\r\n        if (!this.lgBusy) {\r\n            if (this.index > 0) {\r\n                this.index--;\r\n                this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                    index: this.index,\r\n                    fromTouch: fromTouch,\r\n                });\r\n                this.slide(this.index, !!fromTouch, false, 'prev');\r\n            }\r\n            else {\r\n                if (_loop) {\r\n                    this.index = this.galleryItems.length - 1;\r\n                    this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                        index: this.index,\r\n                        fromTouch: fromTouch,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'prev');\r\n                }\r\n                else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                    this.outer.addClass('lg-left-end');\r\n                    setTimeout(function () {\r\n                        _this.outer.removeClass('lg-left-end');\r\n                    }, 400);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.keyPress = function () {\r\n        var _this = this;\r\n        $LG(window).on(\"keydown.lg.global\" + this.lgId, function (e) {\r\n            if (_this.lgOpened &&\r\n                _this.settings.escKey === true &&\r\n                e.keyCode === 27) {\r\n                e.preventDefault();\r\n                if (_this.settings.allowMediaOverlap &&\r\n                    _this.outer.hasClass('lg-can-toggle') &&\r\n                    _this.outer.hasClass('lg-components-open')) {\r\n                    _this.outer.removeClass('lg-components-open');\r\n                }\r\n                else {\r\n                    _this.closeGallery();\r\n                }\r\n            }\r\n            if (_this.lgOpened && _this.galleryItems.length > 1) {\r\n                if (e.keyCode === 37) {\r\n                    e.preventDefault();\r\n                    _this.goToPrevSlide();\r\n                }\r\n                if (e.keyCode === 39) {\r\n                    e.preventDefault();\r\n                    _this.goToNextSlide();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.arrow = function () {\r\n        var _this = this;\r\n        this.getElementById('lg-prev').on('click.lg', function () {\r\n            _this.goToPrevSlide();\r\n        });\r\n        this.getElementById('lg-next').on('click.lg', function () {\r\n            _this.goToNextSlide();\r\n        });\r\n    };\r\n    LightGallery.prototype.arrowDisable = function (index) {\r\n        // Disable arrows if settings.hideControlOnEnd is true\r\n        if (!this.settings.loop && this.settings.hideControlOnEnd) {\r\n            var $prev = this.getElementById('lg-prev');\r\n            var $next = this.getElementById('lg-next');\r\n            if (index + 1 === this.galleryItems.length) {\r\n                $next.attr('disabled', 'disabled').addClass('disabled');\r\n            }\r\n            else {\r\n                $next.removeAttr('disabled').removeClass('disabled');\r\n            }\r\n            if (index === 0) {\r\n                $prev.attr('disabled', 'disabled').addClass('disabled');\r\n            }\r\n            else {\r\n                $prev.removeAttr('disabled').removeClass('disabled');\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.setTranslate = function ($el, xValue, yValue, scaleX, scaleY) {\r\n        if (scaleX === void 0) { scaleX = 1; }\r\n        if (scaleY === void 0) { scaleY = 1; }\r\n        $el.css('transform', 'translate3d(' +\r\n            xValue +\r\n            'px, ' +\r\n            yValue +\r\n            'px, 0px) scale3d(' +\r\n            scaleX +\r\n            ', ' +\r\n            scaleY +\r\n            ', 1)');\r\n    };\r\n    LightGallery.prototype.mousewheel = function () {\r\n        var _this = this;\r\n        var lastCall = 0;\r\n        this.outer.on('wheel.lg', function (e) {\r\n            if (!e.deltaY || _this.galleryItems.length < 2) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            var now = new Date().getTime();\r\n            if (now - lastCall < 1000) {\r\n                return;\r\n            }\r\n            lastCall = now;\r\n            if (e.deltaY > 0) {\r\n                _this.goToNextSlide();\r\n            }\r\n            else if (e.deltaY < 0) {\r\n                _this.goToPrevSlide();\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.isSlideElement = function (target) {\r\n        return (target.hasClass('lg-outer') ||\r\n            target.hasClass('lg-item') ||\r\n            target.hasClass('lg-img-wrap'));\r\n    };\r\n    LightGallery.prototype.isPosterElement = function (target) {\r\n        var playButton = this.getSlideItem(this.index)\r\n            .find('.lg-video-play-button')\r\n            .get();\r\n        return (target.hasClass('lg-video-poster') ||\r\n            target.hasClass('lg-video-play-button') ||\r\n            (playButton && playButton.contains(target.get())));\r\n    };\r\n    /**\r\n     * Maximize minimize inline gallery.\r\n     * @category lGPublicMethods\r\n     */\r\n    LightGallery.prototype.toggleMaximize = function () {\r\n        var _this = this;\r\n        this.getElementById('lg-maximize').on('click.lg', function () {\r\n            _this.$container.toggleClass('lg-inline');\r\n            _this.refreshOnResize();\r\n        });\r\n    };\r\n    LightGallery.prototype.invalidateItems = function () {\r\n        for (var index = 0; index < this.items.length; index++) {\r\n            var element = this.items[index];\r\n            var $element = $LG(element);\r\n            $element.off(\"click.lgcustom-item-\" + $element.attr('data-lg-id'));\r\n        }\r\n    };\r\n    LightGallery.prototype.trapFocus = function () {\r\n        var _this = this;\r\n        this.$container.get().focus({\r\n            preventScroll: true,\r\n        });\r\n        $LG(window).on(\"keydown.lg.global\" + this.lgId, function (e) {\r\n            if (!_this.lgOpened) {\r\n                return;\r\n            }\r\n            var isTabPressed = e.key === 'Tab' || e.keyCode === 9;\r\n            if (!isTabPressed) {\r\n                return;\r\n            }\r\n            var focusableEls = utils.getFocusableElements(_this.$container.get());\r\n            var firstFocusableEl = focusableEls[0];\r\n            var lastFocusableEl = focusableEls[focusableEls.length - 1];\r\n            if (e.shiftKey) {\r\n                if (document.activeElement === firstFocusableEl) {\r\n                    lastFocusableEl.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n            else {\r\n                if (document.activeElement === lastFocusableEl) {\r\n                    firstFocusableEl.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.manageCloseGallery = function () {\r\n        var _this = this;\r\n        if (!this.settings.closable)\r\n            return;\r\n        var mousedown = false;\r\n        this.getElementById('lg-close').on('click.lg', function () {\r\n            _this.closeGallery();\r\n        });\r\n        if (this.settings.closeOnTap) {\r\n            // If you drag the slide and release outside gallery gets close on chrome\r\n            // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\r\n            this.outer.on('mousedown.lg', function (e) {\r\n                var target = $LG(e.target);\r\n                if (_this.isSlideElement(target)) {\r\n                    mousedown = true;\r\n                }\r\n                else {\r\n                    mousedown = false;\r\n                }\r\n            });\r\n            this.outer.on('mousemove.lg', function () {\r\n                mousedown = false;\r\n            });\r\n            this.outer.on('mouseup.lg', function (e) {\r\n                var target = $LG(e.target);\r\n                if (_this.isSlideElement(target) && mousedown) {\r\n                    if (!_this.outer.hasClass('lg-dragging')) {\r\n                        _this.closeGallery();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Close lightGallery if it is opened.\r\n     *\r\n     * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\r\n     * @return returns the estimated time to close gallery completely including the close animation duration\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.closeGallery();\r\n     *\r\n     */\r\n    LightGallery.prototype.closeGallery = function (force) {\r\n        var _this = this;\r\n        if (!this.lgOpened || (!this.settings.closable && !force)) {\r\n            return 0;\r\n        }\r\n        this.LGel.trigger(lGEvents.beforeClose);\r\n        if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) {\r\n            $LG(window).scrollTop(this.prevScrollTop);\r\n        }\r\n        var currentItem = this.items[this.index];\r\n        var transform;\r\n        if (this.zoomFromOrigin && currentItem) {\r\n            var _a = this.mediaContainerPosition, top_4 = _a.top, bottom = _a.bottom;\r\n            var _b = this.galleryItems[this.index], __slideVideoInfo = _b.__slideVideoInfo, poster = _b.poster;\r\n            var imageSize = utils.getSize(currentItem, this.outer, top_4 + bottom, __slideVideoInfo && poster && this.settings.videoMaxSize);\r\n            transform = utils.getTransform(currentItem, this.outer, top_4, bottom, imageSize);\r\n        }\r\n        if (this.zoomFromOrigin && transform) {\r\n            this.outer.addClass('lg-closing lg-zoom-from-image');\r\n            this.getSlideItem(this.index)\r\n                .addClass('lg-start-end-progress')\r\n                .css('transition-duration', this.settings.startAnimationDuration + 'ms')\r\n                .css('transform', transform);\r\n        }\r\n        else {\r\n            this.outer.addClass('lg-hide-items');\r\n            // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\r\n            // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\r\n            this.outer.removeClass('lg-zoom-from-image');\r\n        }\r\n        // Unbind all events added by lightGallery\r\n        // @todo\r\n        //this.$el.off('.lg.tm');\r\n        this.destroyModules();\r\n        this.lGalleryOn = false;\r\n        this.isDummyImageRemoved = false;\r\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n        clearTimeout(this.hideBarTimeout);\r\n        this.hideBarTimeout = false;\r\n        $LG('html').removeClass('lg-on');\r\n        this.outer.removeClass('lg-visible lg-components-open');\r\n        // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\r\n        this.$backdrop.removeClass('in').css('opacity', 0);\r\n        var removeTimeout = this.zoomFromOrigin && transform\r\n            ? Math.max(this.settings.startAnimationDuration, this.settings.backdropDuration)\r\n            : this.settings.backdropDuration;\r\n        this.$container.removeClass('lg-show-in');\r\n        // Once the closign animation is completed and gallery is invisible\r\n        setTimeout(function () {\r\n            if (_this.zoomFromOrigin && transform) {\r\n                _this.outer.removeClass('lg-zoom-from-image');\r\n            }\r\n            _this.$container.removeClass('lg-show');\r\n            // Reset scrollbar\r\n            _this.resetScrollBar();\r\n            // Need to remove inline opacity as it is used in the stylesheet as well\r\n            _this.$backdrop\r\n                .removeAttr('style')\r\n                .css('transition-duration', _this.settings.backdropDuration + 'ms');\r\n            _this.outer.removeClass(\"lg-closing \" + _this.settings.startClass);\r\n            _this.getSlideItem(_this.index).removeClass('lg-start-end-progress');\r\n            _this.$inner.empty();\r\n            if (_this.lgOpened) {\r\n                _this.LGel.trigger(lGEvents.afterClose, {\r\n                    instance: _this,\r\n                });\r\n            }\r\n            if (_this.$container.get()) {\r\n                _this.$container.get().blur();\r\n            }\r\n            _this.lgOpened = false;\r\n        }, removeTimeout + 100);\r\n        return removeTimeout + 100;\r\n    };\r\n    LightGallery.prototype.initModules = function () {\r\n        this.plugins.forEach(function (module) {\r\n            try {\r\n                module.init();\r\n            }\r\n            catch (err) {\r\n                console.warn(\"lightGallery:- make sure lightGallery module is properly initiated\");\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.destroyModules = function (destroy) {\r\n        this.plugins.forEach(function (module) {\r\n            try {\r\n                if (destroy) {\r\n                    module.destroy();\r\n                }\r\n                else {\r\n                    module.closeGallery && module.closeGallery();\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.warn(\"lightGallery:- make sure lightGallery module is properly destroyed\");\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Refresh lightGallery with new set of children.\r\n     *\r\n     * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\r\n     *\r\n     * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\r\n     * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  // Delete or add children, then call\r\n     *  plugin.refresh();\r\n     *\r\n     */\r\n    LightGallery.prototype.refresh = function (galleryItems) {\r\n        if (!this.settings.dynamic) {\r\n            this.invalidateItems();\r\n        }\r\n        if (galleryItems) {\r\n            this.galleryItems = galleryItems;\r\n        }\r\n        else {\r\n            this.galleryItems = this.getItems();\r\n        }\r\n        this.updateControls();\r\n        this.openGalleryOnItemClick();\r\n        this.LGel.trigger(lGEvents.updateSlides);\r\n    };\r\n    LightGallery.prototype.updateControls = function () {\r\n        this.addSlideVideoInfo(this.galleryItems);\r\n        this.updateCounterTotal();\r\n        this.manageSingleSlideClassName();\r\n    };\r\n    LightGallery.prototype.destroyGallery = function () {\r\n        this.destroyModules(true);\r\n        if (!this.settings.dynamic) {\r\n            this.invalidateItems();\r\n        }\r\n        $LG(window).off(\".lg.global\" + this.lgId);\r\n        this.LGel.off('.lg');\r\n        this.$container.remove();\r\n    };\r\n    /**\r\n     * Destroy lightGallery.\r\n     * Destroy lightGallery and its plugin instances completely\r\n     *\r\n     * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.\r\n     * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.\r\n     * You can use refresh method most of the times.\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.destroy();\r\n     *\r\n     */\r\n    LightGallery.prototype.destroy = function () {\r\n        var closeTimeout = this.closeGallery(true);\r\n        if (closeTimeout) {\r\n            setTimeout(this.destroyGallery.bind(this), closeTimeout);\r\n        }\r\n        else {\r\n            this.destroyGallery();\r\n        }\r\n        return closeTimeout;\r\n    };\r\n    return LightGallery;\r\n}());\n\nfunction lightGallery(el, options) {\r\n    return new LightGallery(el, options);\r\n}\n\nexport default lightGallery;\n//# sourceMappingURL=lightgallery.es5.js.map\n","import { LightGallery } from './lightgallery';\nimport { VideoSource } from './plugins/video/types';\n\n/**\n * List of lightGallery events\n * All events should be documented here\n * Below interfaces are used to build the website documentations\n * */\nexport const lGEvents: {\n    [key: string]: string;\n} = {\n    afterAppendSlide: 'lgAfterAppendSlide',\n    init: 'lgInit',\n    hasVideo: 'lgHasVideo',\n    containerResize: 'lgContainerResize',\n    updateSlides: 'lgUpdateSlides',\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\n    beforeOpen: 'lgBeforeOpen',\n    afterOpen: 'lgAfterOpen',\n    slideItemLoad: 'lgSlideItemLoad',\n    beforeSlide: 'lgBeforeSlide',\n    afterSlide: 'lgAfterSlide',\n    posterClick: 'lgPosterClick',\n    dragStart: 'lgDragStart',\n    dragMove: 'lgDragMove',\n    dragEnd: 'lgDragEnd',\n    beforeNextSlide: 'lgBeforeNextSlide',\n    beforePrevSlide: 'lgBeforePrevSlide',\n    beforeClose: 'lgBeforeClose',\n    afterClose: 'lgAfterClose',\n    rotateLeft: 'lgRotateLeft',\n    rotateRight: 'lgRotateRight',\n    flipHorizontal: 'lgFlipHorizontal',\n    flipVertical: 'lgFlipVertical',\n    autoplay: 'lgAutoplay',\n    autoplayStart: 'lgAutoplayStart',\n    autoplayStop: 'lgAutoplayStop',\n};\n\n// Follow the below format for the event documentation\n// @method is the method name when event is used with Angular/React components\n\n/**\n * Fired only once when lightGallery is initialized\n * @name lgInit\n * @method onInit\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action on lightGallery initialization.\n *   // Init event returns the plugin instance that can be used to call any lightGalley public method\n *   let pluginInstance = null;\n *   lg.addEventListener('lgInit', (event) => {\n *      pluginInstance = event.detail.instance;\n *   });\n *   lightGallery(lg);\n * @see <a href=\"/docs/methods\">Methods<a>\n */\nexport interface InitDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired when the slide content has been inserted into it's slide container.\n * @name lgAfterAppendSlide\n * @method onAfterAppendSlide\n */\nexport interface AfterAppendSlideEventDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired immediately before opening the gallery\n * @name lgBeforeOpen\n * @method onBeforeOpen\n */\nexport interface BeforeOpenDetail {}\n\n/**\n * Fired immediately after opening the gallery\n * @name lgAfterOpen\n * @method onAfterOpen\n */\nexport interface AfterOpenDetail {}\n\n/**\n * Fired once the media inside the slide has been completely loaded .\n * @name lgSlideItemLoad\n * @method onSlideItemLoad\n */\nexport interface SlideItemLoadDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * For the first slide, lightGallery adds some delay for displaying the loaded slide item.\n     * This delay is required for the transition effect when the slide item is displayed\n     * Respect the delay when you use this event\n     */\n    delay: number;\n\n    // Will be true for the first slide\n    isFirstSlide: boolean;\n}\n\n/**\n * Fired immediately before each slide transition.\n * @name lgBeforeSlide\n * @method onBeforeSlide\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action before each slide transition\n *   lg.addEventListener('lgBeforeSlide', (event) => {\n *       const { index, prevIndex } = event.detail;\n *       alert(index, prevIndex);\n *   });\n *   lightGallery(lg);\n */\nexport interface BeforeSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired immediately after each slide transition.\n * @name lgAfterSlide\n * @method onAfterSlide\n */\nexport interface AfterSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired when the video poster is clicked.\n * @name lgPosterClick\n * @method onPosterClick\n */\nexport interface PosterClickDetail {}\n\n/**\n * Fired when the drag event to move to different slide starts.\n * @name lgDragStart\n * @method onDragStart\n */\nexport interface DragStartDetail {}\n\n/**\n * Fired periodically during the drag operation.\n * @name lgDragMove\n * @method onDragMove\n */\nexport interface DragMoveDetail {}\n\n/**\n * Fired when the user has finished the drag operation\n * @name lgDragEnd\n * @method onDragEnd\n */\nexport interface DragEndDetail {}\n\n/**\n * Fired immediately before the start of the close process.\n * @name lgBeforeClose\n * @method onBeforeClose\n */\nexport interface BeforeCloseDetail {}\n\n/**\n * Fired immediately once lightGallery is closed.\n * @name lgAfterClose\n * @method onAfterClose\n */\nexport interface AfterCloseDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired immediately before each \"next\" slide transition\n * @name lgBeforeNextSlide\n * @method onBeforeNextSlide\n */\nexport interface BeforeNextSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired immediately before each \"prev\" slide transition\n * @name lgBeforePrevSlide\n * @method onBeforePrevSlide\n */\nexport interface BeforePrevSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired when the sub-html content (ex : title/ description) has been appended into the slide.\n * @name lgAfterAppendSubHtml\n * @method onAfterAppendSubHtml\n */\nexport interface AfterAppendSubHtmlDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the lightGallery container has been resized.\n * @name lgContainerResize\n * @method onContainerResize\n */\nexport interface ContainerResizeDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when lightGallery detects video slide\n * @name lgHasVideo\n * @method onHasVideo\n */\nexport interface HasVideoDetail {\n    /**\n     * Index of the slide,\n     */\n    index: number;\n    /**\n     * Video source\n     */\n    src: string;\n    /**\n     * HTML5 video source if available\n     * <p>\n       HTML5 video source = source: {\n            src: string;\n            type: string;\n        }[];\n        attributes: HTMLVideoElement;\n     * </p>\n     */\n    html5Video: VideoSource;\n    /**\n     * True if video has poster\n     */\n    hasPoster: boolean;\n}\n\n/**\n * Fired when the image is rotated in anticlockwise direction\n * @name lgRotateLeft\n * @method onRotateLeft\n */\nexport interface RotateLeftDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is rotated in clockwise direction\n * @name lgRotateRight\n * @method onRotateRight\n */\nexport interface RotateRightDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped horizontally\n * @name lgFlipHorizontal\n * @method onFlipHorizontal\n */\nexport interface FlipHorizontalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped vertically\n * @name lgFlipVertical\n * @method onFlipVertical\n */\nexport interface FlipVerticalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n","import { GalleryItem } from './lg-utils';\nimport { LgQuery } from './lgQuery';\nimport { LightGallery } from './lightgallery';\nimport { AutoplaySettings } from './plugins/autoplay/lg-autoplay-settings';\nimport { CommentSettings } from './plugins/comment/lg-comment-settings';\nimport { FullscreenSettings } from './plugins/fullscreen/lg-fullscreen-settings';\nimport { HashSettings } from './plugins/hash/lg-hash-settings';\nimport { PagerSettings } from './plugins/pager/lg-pager-settings';\nimport { RotateSettings } from './plugins/rotate/lg-rotate-settings';\nimport { ShareSettings } from './plugins/share/lg-share-settings';\nimport { ThumbnailsSettings } from './plugins/thumbnail/lg-thumbnail-settings';\nimport { VideoSettings } from './plugins/video/lg-video-settings';\nimport { ZoomSettings } from './plugins/zoom/lg-zoom-settings';\n\ntype LightGalleryCoreMobileSettings = Exclude<\n    LightGalleryCoreSettings,\n    'mobileSettings'\n>;\n\n// @todo use separate mobile settings for plugins\nexport interface MobileSettings\n    extends LightGalleryCoreMobileSettings,\n        Partial<ZoomSettings>,\n        Partial<ThumbnailsSettings>,\n        Partial<VideoSettings>,\n        Partial<AutoplaySettings>,\n        Partial<CommentSettings>,\n        Partial<FullscreenSettings>,\n        Partial<HashSettings>,\n        Partial<PagerSettings>,\n        Partial<RotateSettings>,\n        Partial<ShareSettings> {}\n\nexport interface LightGalleryCoreStrings {\n    closeGallery: string;\n    toggleMaximize: string;\n    previousSlide: string;\n    nextSlide: string;\n    download: string;\n    playVideo: string;\n    mediaLoadingFailed: string;\n}\n\nexport type LightGalleryAllSettings = LightGalleryCoreSettings &\n    ZoomSettings &\n    ThumbnailsSettings &\n    VideoSettings &\n    AutoplaySettings &\n    CommentSettings &\n    FullscreenSettings &\n    HashSettings &\n    PagerSettings &\n    RotateSettings &\n    ShareSettings;\n\nexport type LightGallerySettings = Partial<LightGalleryAllSettings>;\n\nexport interface LightGalleryCoreSettings {\n    /**\n     * Type of transition between images.\n     */\n    mode:\n        | 'lg-slide'\n        | 'lg-fade'\n        | 'lg-zoom-in'\n        | 'lg-zoom-in-big'\n        | 'lg-zoom-out'\n        | 'lg-zoom-out-big'\n        | 'lg-zoom-out-in'\n        | 'lg-zoom-in-out'\n        | 'lg-soft-zoom'\n        | 'lg-scale-up'\n        | 'lg-slide-circular'\n        | 'lg-slide-circular-vertical'\n        | 'lg-slide-vertical'\n        | 'lg-slide-vertical-growth'\n        | 'lg-slide-skew-only'\n        | 'lg-slide-skew-only-rev'\n        | 'lg-slide-skew-only-y'\n        | 'lg-slide-skew-only-y-rev'\n        | 'lg-slide-skew'\n        | 'lg-slide-skew-rev'\n        | 'lg-slide-skew-cross'\n        | 'lg-slide-skew-cross-rev'\n        | 'lg-slide-skew-ver'\n        | 'lg-slide-skew-ver-rev'\n        | 'lg-slide-skew-ver-cross'\n        | 'lg-slide-skew-ver-cross-rev'\n        | 'lg-lollipop'\n        | 'lg-lollipop-rev'\n        | 'lg-rotate'\n        | 'lg-rotate-rev'\n        | 'lg-tube';\n\n    /**\n     * Slide animation CSS easing property\n     */\n    easing: string;\n\n    /**\n     *Transition duration (in ms).\n     */\n    speed: number;\n\n    /**\n     * If you are using lightGallery for commercial projects, you need to purchase a commercial license\n     * to get the license key. For projects that are compatible with GPLv3 license,\n     * please contact us for getting a license key at <a href=\"mailto:contact@lightgalleryjs.com\">contact@lightgalleryjs.com</a>.\n     * If you want to test lightGallery before purchasing a commercial license, you can\n     * use `0000-0000-000-0000` as a temporary license key\n     */\n\n    licenseKey: string;\n\n    /**\n     * Height of the gallery.\n     * example '100%' , '300px'\n     */\n    height: string;\n\n    /**\n     * Width of the gallery.\n     * example '100%' , '300px'\n     */\n    width: string;\n\n    /**\n     * Add custom class for gallery container\n     * This can be used to set different style for different galleries\n     */\n    addClass: string;\n\n    /**\n     * Start animation class for the gallery.\n     * @description\n     * <ul>\n     * <li>startClass will be empty zoomFromOrigin is true.</li>\n     * <li>This can be used to change the starting effect when the image is loaded</li>\n     * <li>This is also applied when navigating to new slides</li>\n     * </ul>\n     */\n    startClass: string;\n\n    /**\n     * Enable zoom from origin effect.\n     * @description You need to know the original image size upfront and provide it via data-lg-size attribute as <code> data-lg-size=\"1920-1280</code>\"\n     *\n     * If you don't know, the size of a few images in the list, you can skip the data-lg-size attribute for the particular slides,\n     * lightGallery will show the default animation if data-lg-size is not available\n     *\n     * If you are using responsive images,\n     * you can pass a comma separated list of sizes combined with a max-width (up to what size the particular image should be used)\n     *\n     * example -\n     * <code> data-lg-size=\"240-160-375, 400-267-480, 1600-1067\"\n     * data-responsive=\"img-240.jpg 375, img-400.jpg 480\"\n     * data-src=\"img-1600.jpg\" </code>\n     *\n     * In the above example, upto 375 width img.240.jpg and lg-size 240-160 will be used.\n     * Similarly, upto 480 pixel width size 400-267 and img-400.jpg will be used\n     * And above 480, lg-size 1600-1067 and img-1600.jpg will be used\n     *\n     * <ul>\n     * <li>At the moment, zoomFromOrigin options is supported only for image slides.</li>\n     * <li>Will be false if dynamic option is enabled or galleryID found in the URL.</li>\n     * <li>startClass will be empty if zoomFromOrigin is true to avoid css conflicts.</li>\n     * </ul>\n     */\n    zoomFromOrigin: boolean;\n\n    /**\n     * Zoom from image animation duration\n     */\n    startAnimationDuration: number;\n\n    /**\n     * Backdrop transition duration.\n     * Note - Do not change the value of backdrop via css.\n     */\n    backdropDuration: number;\n\n    /**\n     * Configure where the gallery should be appended.\n     * Useful to create inline galleries and more\n     * It is an empty string in the default settings and later assigned to document.body to avoid accessing document for SSR\n     */\n    container: HTMLElement | '';\n\n    /**\n     * Delay for hiding gallery controls in ms.\n     * Pass <code>0</code> if you don't want to hide the controls\n     */\n    hideBarsDelay: number;\n\n    /**\n     * Delay in hiding controls for the first time when gallery is opened\n     */\n    showBarsAfter: number;\n\n    /**\n     * Delay slide transitions.\n     * @description This is useful if you want to do any action in the current slide before moving to next slide.\n     * <section>\n     * For example, fading out the captions before going to next slide.\n     * <code>.lg-slide-progress</code> class name is added to the current slide immediately after calling the slide method.\n     * But transition begins only after the delay\n     * </section>\n     */\n    slideDelay: number;\n\n    /**\n     * Support legacy browsers\n     * @description Currently this is used only for adding support to srcset attribute via picturefill library\n     * If true lightGallery will show warning message to include picturefill library\n     */\n    supportLegacyBrowser: boolean;\n\n    /**\n     * If true, toolbar, captions and thumbnails will not overlap with media element\n     * This will not effect thumbnails if animateThumb is false\n     * Also, toggle thumbnails button is not displayed if allowMediaOverlap is false\n     * <section>\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\n     * Therefore, the height of the caption is calculated dynamically, only once based on the first slide caption.\n     * </section>\n     * <section>\n     * if you have dynamic captions for each media,\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\n     * </section>\n     */\n    allowMediaOverlap: boolean;\n\n    /**\n     * Video max size.\n     * @description This can be over-written by passing specific size via data-lg-size attribute\n     * Recommended video resolution and & aspect ratios <a href=\"https://support.google.com/youtube/answer/6375112\">https://support.google.com/youtube/answer/6375112</a>\n     */\n    videoMaxSize: string;\n\n    /**\n     * Automatically load poster image for YouTube videos\n     */\n    loadYouTubePoster: boolean;\n\n    /**\n     * Height of the caption for calculating allowMediaOverlap positions\n     * Note - this is only used to find the position of media item if allowMediaOverlap is true.\n     * Not for setting height of the captions\n     * Set 0 if you want to calculate the height of captions dynamically\n     */\n    defaultCaptionHeight: number;\n\n    /**\n     * aria-labelledby attribute fot gallery\n     */\n    ariaLabelledby: string;\n\n    /**\n     * aria-describedby attribute for gallery\n     */\n    ariaDescribedby: string;\n\n    /**\n     * Hide scrollbar when gallery is opened\n     * @version V2.5.0\n     */\n    hideScrollbar: boolean;\n\n    /**\n     * Reset to previous scrollPosition when lightGallery is closed\n     * @description By default, lightGallery doesn't hide the scrollbar for a smooth opening transition.\n     * If a user changes the scroll position, lightGallery resets it to the previous value\n     * @version V2.5.0\n     */\n    resetScrollPosition: boolean;\n\n    /**\n     * If false user won't be abel to close the gallery at all\n     * This is useful for creating inline galleries.\n     */\n    closable: boolean;\n\n    /**\n     * allows vertical drag/swipe to close gallery\n     * <code>false</code> if option <code>closable</code> is <code>false</code>\n     */\n    swipeToClose: boolean;\n    /**\n     * allows clicks on black area to close gallery.\n     */\n    closeOnTap: boolean;\n\n    /**\n     * If false, close button won't be displayed.\n     * Useful for creating inline galleries.\n     */\n    showCloseIcon: boolean;\n\n    /**\n     * Show maximize icon.\n     * Useful for creating inline galleries.\n     */\n    showMaximizeIcon: boolean;\n\n    /**\n     * If false, will disable the ability to loop back to the beginning of the gallery from the last slide.\n     */\n    loop: boolean;\n\n    /**\n     * Whether the LightGallery could be closed by pressing the \"Esc\" key.\n     */\n    escKey: boolean;\n\n    /**\n     * Enable keyboard navigation\n     */\n    keyPress: boolean;\n\n    /**\n     * Trap focus within the lightGallery\n     * @version V2.5.0\n     */\n    trapFocus: boolean;\n\n    /**\n     * If false, prev/next buttons will not be displayed.\n     */\n    controls: boolean;\n\n    /**\n     * Enable slideEnd animation\n     */\n    slideEndAnimation: boolean;\n\n    /**\n     * If true, prev/next button will be hidden on first/last image.\n     * @description Note - this option will be ignored if <code>loop</code> or <code>slideEndAnimation</code> is set to true\n     */\n    hideControlOnEnd: boolean;\n\n    /**\n     * ability to navigate to next/prev slides on mousewheel\n     */\n    mousewheel: boolean;\n\n    /**\n     * Option to get captions from alt or title tags.\n     */\n    getCaptionFromTitleOrAlt: boolean;\n\n    /**\n     * control where the sub-html should be appended.\n     * If you choose '.lg-outer', you are responsible for placing the div at the right position.\n     * '.lg-outer' is useful if you want show custom HTML outside the normal gallery\n     */\n    appendSubHtmlTo: '.lg-sub-html' | '.lg-item' | '.lg-outer';\n\n    /**\n     * Set to true if the selector in \"data-sub-html\" should use the current item as its origin.\n     */\n    subHtmlSelectorRelative: boolean;\n\n    /**\n     * number of preload slides\n     * @description will exicute only after the current slide is fully loaded.\n     * for example, if you click on 4th image and if preload = 1 then 3rd slide and 5th\n     * slide will be loaded in the background after the 4th slide is fully loaded..\n     * if preload is 2 then 2nd 3rd 5th 6th slides will be preloaded.\n     */\n    preload: number;\n\n    /**\n     * Control how many slide items should be kept in dom at a time\n     * @description To improve performance by reducing number of gallery items in the dom,\n     * lightGallery keeps only the lowest possible number of slides in the dom at a time.\n     * This has a minimum value of 3\n     */\n    numberOfSlideItemsInDom: number;\n\n    /**\n     * Custom selector property instead of direct children.\n     * @description Based on your markup structure, you can specify custom selectors to fetch media data for the gallery\n     * Pass \"this\" to select same element\n     * You can also pass HTMLCollection directly\n     * Example - '.my-selector' | '#my-selector' | this | document.querySelectorAll('.my-selector')\n     */\n    selector: string | HTMLCollection[];\n\n    /**\n     * By default selector element relative to the current gallery.\n     * Instead of that you can tell lightGallery to select element relative to another element.\n     * Example - '.my-selector-container' | '#my-selector-container'\n     * In the code this become selector =  document.querySelector(this.s.selectWithin ).querySelectorAll(this.s.selector);\n     */\n    selectWithin: string;\n\n    /**\n     * Custom html for next control\n     */\n    nextHtml: string;\n\n    /**\n     * Custom html for prev control\n     */\n    prevHtml: string;\n\n    /**\n     * specify which slide should load initially\n     */\n    index: number;\n\n    /**\n     * Set width for iframe.\n     */\n    iframeWidth: string;\n\n    /**\n     * Set height for iframe.\n     */\n    iframeHeight: string;\n\n    /**\n     * Set max width for iframe.\n     */\n    iframeMaxWidth: string;\n\n    /**\n     * Set max height for iframe.\n     */\n    iframeMaxHeight: string;\n\n    /**\n     * Enable download button.\n     * @description By default download url will be taken from data-src/href attribute but it supports only for modern browsers.\n     * If you want you can provide another url for download via data-download-url.\n     * pass false in data-download-url if you want to hide download button for the particular slide.\n     */\n    download: boolean;\n\n    /**\n     * Whether to show total number of images and index number of currently displayed image.\n     */\n    counter: boolean;\n\n    /**\n     * Where the counter should be appended\n     */\n    appendCounterTo: string;\n\n    /**\n     * By setting the swipeThreshold (in px) you can set how far the user must swipe for the next/prev image.\n     */\n    swipeThreshold: number;\n\n    /**\n     * Enables swipe support for touch devices\n     */\n    enableSwipe: boolean;\n\n    /**\n     * Enables desktop mouse drag support\n     */\n    enableDrag: boolean;\n\n    /**\n     * LightGallery can be instantiated and launched programmatically by setting this option to true and populating dynamicEl option (see below) with the definitions of images.\n     */\n    dynamic: boolean;\n\n    /**\n     * An array of objects (src, iframe, subHtml, thumb, poster, responsive, srcset sizes) representing gallery elements.\n     */\n    dynamicEl: GalleryItem[];\n\n    /**\n     * Fetch custom properties from the selector\n     * @description this is useful for plugin development\n     * By default lightGallery fetches and store all the props selectors to\n     * reduce frequent dom interaction for fetching props every time.\n     *\n     * If you need any addition data to be fetched and stored in the galleryItems variable,\n     * you can do this just by passing the prop names via extraProps\n     * @example\n     * HTML:\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-custom-prop=\"abc\"><img src=\"thumb.jpg\" /></a>\n     *     <a href=\"a.jpg\" data-custom-prop=\"xyz\"><img src=\"thumb.jpg\" /></a>\n     * </div>\n     * JS:\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     extraProps: ['customProp']\n     * })\n     * // Note - If you are using dynamic mode, you can pass any custom prop in the galleryItem\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     dynamic: true,\n     *     dynamicEl: [{\n     *         src: 'img/img1.jpg',\n     *         customProp:'abc',\n     *     }]\n     * })\n     *\n     */\n    extraProps: string[];\n\n    /**\n     * Option to fetch different thumbnail image other than first image\n     * @description If you want to use external image for thumbnail,\n     * add the path of that image inside \"data-\" attribute\n     * and set value of this option to the name of your custom attribute.\n     *\n     * @example\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-external-thumb-image=\"images/externalThumb.jpg\" ><img src=\"thumb.jpg\" /></a>\n     * </div>\n     *\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     exThumbImage: 'data-external-thumb-image'\n     * })\n     */\n    exThumbImage: string;\n\n    /**\n     * Function to detect mobile devices\n     */\n    isMobile?: () => boolean;\n\n    /**\n     * Separate settings for mobile devices\n     * @description Note - this is applied only at the time of loading\n     * by default controls and close buttons are disabled on mobile devices.\n     * use this options if you want to enable them or change any other settings for mobile devices\n     * Note - mobileSettings does not merge default values, You need to provide all mobileSettings including default values\n     */\n    mobileSettings: Partial<MobileSettings>;\n\n    /**\n     * Customize string.\n     * @description This can be useful if you want to localize the lightGallery strings to other languages.\n     * Use your own service to translate the strings and pass it via settings.strings\n     * You can find dedicated strings option for all lightGallery modules in their respective documentation.\n     * Note - You need to provide values for all the strings. For example, even if you just want to change the closeGallery string, you need to provide all the other strings as well.\n     */\n    strings: LightGalleryCoreStrings;\n\n    plugins: (new (instance: LightGallery, $LG: LgQuery) => any)[];\n}\n\nexport const lightGalleryCoreSettings: LightGalleryCoreSettings = {\n    mode: 'lg-slide',\n    easing: 'ease',\n    speed: 400,\n    licenseKey: '0000-0000-000-0000',\n    height: '100%',\n    width: '100%',\n    addClass: '',\n    startClass: 'lg-start-zoom',\n    backdropDuration: 300,\n    container: '',\n    startAnimationDuration: 400,\n    zoomFromOrigin: true,\n    hideBarsDelay: 0,\n    showBarsAfter: 10000,\n    slideDelay: 0,\n    supportLegacyBrowser: true,\n    allowMediaOverlap: false,\n    videoMaxSize: '1280-720',\n    loadYouTubePoster: true,\n    defaultCaptionHeight: 0,\n    ariaLabelledby: '',\n    ariaDescribedby: '',\n    resetScrollPosition: true,\n    hideScrollbar: false,\n    closable: true,\n    swipeToClose: true,\n    closeOnTap: true,\n    showCloseIcon: true,\n    showMaximizeIcon: false,\n    loop: true,\n    escKey: true,\n    keyPress: true,\n    trapFocus: true,\n    controls: true,\n    slideEndAnimation: true,\n    hideControlOnEnd: false,\n    mousewheel: false,\n    getCaptionFromTitleOrAlt: true,\n    appendSubHtmlTo: '.lg-sub-html',\n    subHtmlSelectorRelative: false,\n    preload: 2,\n    numberOfSlideItemsInDom: 10,\n    selector: '',\n    selectWithin: '',\n    nextHtml: '',\n    prevHtml: '',\n    index: 0,\n    iframeWidth: '100%',\n    iframeHeight: '100%',\n    iframeMaxWidth: '100%',\n    iframeMaxHeight: '100%',\n    download: true,\n    counter: true,\n    appendCounterTo: '.lg-toolbar',\n    swipeThreshold: 50,\n    enableSwipe: true,\n    enableDrag: true,\n    dynamic: false,\n    dynamicEl: [],\n    extraProps: [],\n    exThumbImage: '',\n    isMobile: undefined,\n    mobileSettings: {\n        controls: false,\n        showCloseIcon: false,\n        download: false,\n    } as MobileSettings,\n    plugins: [],\n    strings: {\n        closeGallery: 'Close gallery',\n        toggleMaximize: 'Toggle maximize',\n        previousSlide: 'Previous slide',\n        nextSlide: 'Next slide',\n        download: 'Download',\n        playVideo: 'Play video',\n        mediaLoadingFailed: 'Oops... Failed to load content...',\n    } as LightGalleryCoreStrings,\n};\n","interface Offset {\n    left: number;\n    top: number;\n}\n\nfunction initLgPolyfills() {\n    (function () {\n        if (typeof window.CustomEvent === 'function') return false;\n\n        function CustomEvent(event: string, params: any) {\n            params = params || {\n                bubbles: false,\n                cancelable: false,\n                detail: null,\n            };\n            const evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(\n                event,\n                params.bubbles,\n                params.cancelable,\n                params.detail,\n            );\n            return evt;\n        }\n\n        window.CustomEvent = CustomEvent as any;\n    })();\n    (function () {\n        if (!Element.prototype.matches) {\n            Element.prototype.matches =\n                (Element.prototype as any).msMatchesSelector ||\n                Element.prototype.webkitMatchesSelector;\n        }\n    })();\n}\n\nexport type LgQuery = (selector: any) => lgQuery;\nexport class lgQuery {\n    static eventListeners: { [key: string]: any[] } = {};\n    static generateUUID(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function (c) {\n                const r = (Math.random() * 16) | 0,\n                    v = c == 'x' ? r : (r & 0x3) | 0x8;\n                return v.toString(16);\n            },\n        );\n    }\n\n    private selector: any;\n    private firstElement: any;\n    private cssVenderPrefixes: string[] = [\n        'TransitionDuration',\n        'TransitionTimingFunction',\n        'Transform',\n        'Transition',\n    ];\n    constructor(selector: string | Element) {\n        this.selector = this._getSelector(selector);\n        this.firstElement = this._getFirstEl();\n        return this;\n    }\n\n    private _getSelector(\n        selector: string | Element,\n        context: Element | Document = document,\n    ): Element | null | NodeListOf<Element> {\n        if (typeof selector !== 'string') {\n            return selector;\n        }\n        context = context || document;\n        const fl = selector.substring(0, 1);\n        if (fl === '#') {\n            return context.querySelector(selector);\n        } else {\n            return context.querySelectorAll(selector);\n        }\n    }\n\n    private _each(\n        func: (\n            elements: Element | NodeListOf<Element> | null,\n            index: number,\n        ) => void,\n    ): this {\n        if (!this.selector) {\n            return this;\n        }\n        if (this.selector.length !== undefined) {\n            [].forEach.call(this.selector, func);\n        } else {\n            func(this.selector, 0);\n        }\n        return this;\n    }\n\n    private _setCssVendorPrefix(\n        el: any,\n        cssProperty: string,\n        value?: string | number,\n    ): void {\n        // prettier-ignore\n        const property = cssProperty.replace(/-([a-z])/gi, function (\n            s,\n            group1,\n        ) {\n            return group1.toUpperCase();\n        });\n        if (this.cssVenderPrefixes.indexOf(property) !== -1) {\n            el.style[\n                property.charAt(0).toLowerCase() + property.slice(1)\n            ] = value;\n            el.style['webkit' + property] = value;\n            el.style['moz' + property] = value;\n            el.style['ms' + property] = value;\n            el.style['o' + property] = value;\n        } else {\n            el.style[property] = value;\n        }\n    }\n\n    private _getFirstEl() {\n        if (this.selector && this.selector.length !== undefined) {\n            return this.selector[0];\n        } else {\n            return this.selector;\n        }\n    }\n\n    private isEventMatched(event: string, eventName: string): boolean {\n        const eventNamespace = eventName.split('.');\n        return event\n            .split('.')\n            .filter((e) => e)\n            .every((e) => {\n                return eventNamespace.indexOf(e) !== -1;\n            });\n    }\n\n    attr(attr: string): string;\n    attr(attr: string, value: string | number | boolean): this;\n    attr(attr: string, value?: string | number | boolean): string | this {\n        if (value === undefined) {\n            if (!this.firstElement) {\n                return '';\n            }\n            return this.firstElement.getAttribute(attr);\n        }\n        this._each((el: any) => {\n            el.setAttribute(attr, value);\n        });\n        return this;\n    }\n\n    find(selector: any): lgQuery {\n        return $LG(this._getSelector(selector, this.selector));\n    }\n\n    first(): lgQuery {\n        if (this.selector && this.selector.length !== undefined) {\n            return $LG(this.selector[0]);\n        } else {\n            return $LG(this.selector);\n        }\n    }\n\n    eq(index: number): lgQuery {\n        return $LG(this.selector[index]);\n    }\n\n    parent(): lgQuery {\n        return $LG(this.selector.parentElement);\n    }\n\n    get(): HTMLElement {\n        return this._getFirstEl();\n    }\n\n    removeAttr(attributes: string): this {\n        const attrs = attributes.split(' ');\n        this._each((el: any) => {\n            attrs.forEach((attr: string) => el.removeAttribute(attr));\n        });\n        return this;\n    }\n\n    wrap(className: string): this {\n        if (!this.firstElement) {\n            return this;\n        }\n        const wrapper = document.createElement('div');\n        wrapper.className = className;\n        this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\n        this.firstElement.parentNode.removeChild(this.firstElement);\n        wrapper.appendChild(this.firstElement);\n        return this;\n    }\n\n    addClass(classNames = ''): this {\n        this._each((el: any) => {\n            // IE doesn't support multiple arguments\n            classNames.split(' ').forEach((className) => {\n                if (className) {\n                    el.classList.add(className);\n                }\n            });\n        });\n        return this;\n    }\n\n    removeClass(classNames: string): this {\n        this._each((el: any) => {\n            // IE doesn't support multiple arguments\n            classNames.split(' ').forEach((className) => {\n                if (className) {\n                    el.classList.remove(className);\n                }\n            });\n        });\n        return this;\n    }\n\n    hasClass(className: string): boolean {\n        if (!this.firstElement) {\n            return false;\n        }\n        return this.firstElement.classList.contains(className);\n    }\n    hasAttribute(attribute: string): boolean {\n        if (!this.firstElement) {\n            return false;\n        }\n        return this.firstElement.hasAttribute(attribute);\n    }\n    toggleClass(className: string): this {\n        if (!this.firstElement) {\n            return this;\n        }\n        if (this.hasClass(className)) {\n            this.removeClass(className);\n        } else {\n            this.addClass(className);\n        }\n        return this;\n    }\n\n    css(property: string, value?: string | number): this {\n        this._each((el: any) => {\n            this._setCssVendorPrefix(el, property, value);\n        });\n        return this;\n    }\n    // Need to pass separate namespaces for separate elements\n    on(events: string, listener: (e: any) => void): this {\n        if (!this.selector) {\n            return this;\n        }\n        events.split(' ').forEach((event: string) => {\n            if (!Array.isArray(lgQuery.eventListeners[event])) {\n                lgQuery.eventListeners[event] = [];\n            }\n            lgQuery.eventListeners[event].push(listener);\n            this.selector.addEventListener(event.split('.')[0], listener);\n        });\n\n        return this;\n    }\n    // @todo - test this\n    once(event: string, listener: (e: any) => void): this {\n        this.on(event, () => {\n            this.off(event);\n            listener(event);\n        });\n        return this;\n    }\n    off(event: string): this {\n        if (!this.selector) {\n            return this;\n        }\n        Object.keys(lgQuery.eventListeners).forEach((eventName) => {\n            if (this.isEventMatched(event, eventName)) {\n                lgQuery.eventListeners[eventName].forEach((listener) => {\n                    this.selector.removeEventListener(\n                        eventName.split('.')[0],\n                        listener,\n                    );\n                });\n                lgQuery.eventListeners[eventName] = [];\n            }\n        });\n\n        return this;\n    }\n    trigger<Detail>(event: string, detail?: Detail): this {\n        if (!this.firstElement) {\n            return this;\n        }\n\n        const customEvent = new CustomEvent(event.split('.')[0], {\n            detail: detail || null,\n        });\n        this.firstElement.dispatchEvent(customEvent);\n        return this;\n    }\n\n    // Does not support IE\n    load(url: string): this {\n        fetch(url)\n            .then((res) => res.text())\n            .then((html) => {\n                this.selector.innerHTML = html;\n            });\n        return this;\n    }\n\n    html(): string;\n    html(html: string): this;\n    html(html?: string): string | this {\n        if (html === undefined) {\n            if (!this.firstElement) {\n                return '';\n            }\n            return this.firstElement.innerHTML;\n        }\n        this._each((el: any) => {\n            el.innerHTML = html;\n        });\n        return this;\n    }\n    append(html: string | HTMLElement): this {\n        this._each((el: any) => {\n            if (typeof html === 'string') {\n                el.insertAdjacentHTML('beforeend', html);\n            } else {\n                el.appendChild(html);\n            }\n        });\n        return this;\n    }\n    prepend(html: string): this {\n        this._each((el: any) => {\n            el.insertAdjacentHTML('afterbegin', html);\n        });\n        return this;\n    }\n    remove(): this {\n        this._each((el: any) => {\n            el.parentNode.removeChild(el);\n        });\n        return this;\n    }\n    empty(): this {\n        this._each((el: any) => {\n            el.innerHTML = '';\n        });\n        return this;\n    }\n    // Supports only window\n    scrollTop(): number;\n    scrollTop(scrollTop: number): this;\n    scrollTop(scrollTop?: number): number | this {\n        if (scrollTop !== undefined) {\n            document.body.scrollTop = scrollTop;\n            document.documentElement.scrollTop = scrollTop;\n            return this;\n        } else {\n            return (\n                window.pageYOffset ||\n                document.documentElement.scrollTop ||\n                document.body.scrollTop ||\n                0\n            );\n        }\n    }\n    // Supports only window\n    scrollLeft(): number;\n    scrollLeft(scrollLeft?: number): this;\n    scrollLeft(scrollLeft?: number): number | this {\n        if (scrollLeft !== undefined) {\n            document.body.scrollLeft = scrollLeft;\n            document.documentElement.scrollLeft = scrollLeft;\n            return this;\n        } else {\n            return (\n                window.pageXOffset ||\n                document.documentElement.scrollLeft ||\n                document.body.scrollLeft ||\n                0\n            );\n        }\n    }\n    offset(): Offset {\n        if (!this.firstElement) {\n            return {\n                left: 0,\n                top: 0,\n            };\n        }\n        const rect = this.firstElement.getBoundingClientRect();\n        const bodyMarginLeft = $LG('body').style().marginLeft;\n\n        // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\n        return {\n            left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\n            top: rect.top + this.scrollTop(),\n        };\n    }\n    style(): CSSStyleDeclaration {\n        if (!this.firstElement) {\n            return {} as CSSStyleDeclaration;\n        }\n        return (\n            this.firstElement.currentStyle ||\n            window.getComputedStyle(this.firstElement)\n        );\n    }\n    // Width without padding and border even if box-sizing is used.\n    width(): number {\n        const style = this.style();\n        return (\n            this.firstElement.clientWidth -\n            parseFloat(style.paddingLeft) -\n            parseFloat(style.paddingRight)\n        );\n    }\n    // Height without padding and border even if box-sizing is used.\n    height(): number {\n        const style = this.style();\n        return (\n            this.firstElement.clientHeight -\n            parseFloat(style.paddingTop) -\n            parseFloat(style.paddingBottom)\n        );\n    }\n}\n\nexport function $LG(selector: any): lgQuery {\n    initLgPolyfills();\n    return new lgQuery(selector);\n}\n","import { $LG, lgQuery } from './lgQuery';\nimport { VideoSource } from './plugins/video/types';\nimport { VideoInfo } from './types';\n\nexport interface ImageSize {\n    width: number;\n    height: number;\n}\n\nexport interface ImageSources {\n    media?: string;\n    srcset: string;\n    sizes?: string;\n    type?: string;\n}\n\nexport interface GalleryItem {\n    /**\n     * url of the media\n     * @data-attr data-src\n     */\n    src?: string;\n\n    /**\n     * Source attributes for the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source#attributes\">picture</a> element\n     * @data-attr data-sources\n     */\n    sources?: ImageSources[];\n\n    /**\n     * Thumbnail url\n     * @description By default lightGallery uses the image inside gallery selector as thumbnail.\n     * But, If you want to use external image for thumbnail,\n     * pass the thumbnail url via any data attribute and\n     * pass the attribute name via exThumbImage option\n     * @example\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-external-thumb-image=\"images/externalThumb.jpg\" ><img src=\"thumb.jpg\" /></a>\n     * </div>\n     *\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     exThumbImage: 'data-external-thumb-image'\n     * })\n     * @data-attr data-*\n     */\n    thumb?: string;\n\n    /**\n     * alt attribute for the image\n     * @data-attr alt\n     */\n    alt?: string;\n\n    /**\n     * Title attribute for the video\n     * @data-attr title\n     */\n    title?: string;\n\n    /**\n     * Title for iframe\n     * @data-attr data-iframe-title\n     */\n    iframeTitle?: string;\n\n    /**\n     * Caption for the slide\n     * @description You can either pass the HTML markup or the ID or class name of the element which contains the captions\n     * @data-attr data-sub-html\n     */\n    subHtml?: string;\n\n    /**\n     * url of the file which contain the sub html.\n     * @description Note - Does not support Internet Explorer browser\n     * @data-attr data-sub-html-url\n     */\n    subHtmlUrl?: string;\n\n    /**\n     * Video source\n     * @data-attr data-video\n     */\n    video?: VideoSource;\n\n    /**\n     * Poster url\n     * @data-attr data-poster\n     */\n    poster?: string;\n\n    /**\n     * Custom slide name to use in the url when hash plugin is enabled\n     * @data-attr data-slide-name\n     */\n    slideName?: string;\n\n    /**\n     * List of images and viewport's max width separated by comma.\n     * @description Ex?: img/1-375.jpg 375, img/1-480.jpg 480, img/1-757.jpg 757.\n     * @data-attr data-responsive\n     */\n    responsive?: string;\n\n    /**\n     * srcset attribute values for the main image\n     * @data-attr data-srcset\n     */\n    srcset?: string;\n\n    /**\n     * srcset sizes attribute for the main image\n     * @data-attr data-sizes\n     */\n    sizes?: string;\n\n    /**\n     * Set true is you want to open your url in an iframe\n     * @data-attr data-iframe\n     */\n    iframe?: boolean;\n\n    /**\n     * Download url for your image/video.\n     * @description Pass false if you want to disable the download button.\n     * @data-attr data-download-url\n     */\n    downloadUrl?: string | boolean;\n\n    /**\n     * Name of the file after it is downloaded.\n     * @description The HTML value of the download attribute.\n     * There are no restrictions on allowed values, and the browser will automatically\n     * detect the correct file extension and add it to the file (.img, .pdf, .txt, .html, etc.).\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download\">More info</a>\n     * @data-attr data-download\n     */\n    download?: string | boolean;\n\n    /**\n     * Actual size of the image in px.\n     * @description This is used in zoom plugin to see the actual size of the image when double taped on the image.\n     * @data-attr data-width\n     */\n    width?: string;\n\n    /**\n     * Facebook share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL is taken.\n     * @data-attr data-facebook-share-url\n     */\n    facebookShareUrl?: string;\n\n    /**\n     * Tweet text\n     * @data-attr data-tweet-text\n     */\n    tweetText?: string;\n\n    /**\n     * Twitter share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL will be taken.\n     * @data-attr data-twitter-share-url\n     */\n    twitterShareUrl?: string;\n\n    /**\n     * Pinterest share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL will be taken.\n     * Note?: Pinterest requires absolute URL\n     * @data-attr data-pinterest-share-url\n     */\n    pinterestShareUrl?: string;\n\n    /**\n     * Description for Pinterest post.\n     * @data-attr data-pinterest-text\n     */\n    pinterestText?: string;\n\n    /**\n     * Facebook comments body html\n     * @description Please refer <a href=\"https://developers.facebook.com/docs/plugins/comments/#comments-plugin\">facebook official documentation</a> for generating the HTML markup\n     * @example\n     * <div\n     *      class=\"fb-comments\"\n     *      data-href=\"https://www.lightgalleryjs.com/demos/comment-box/#facebook-comments-demo\"\n     *      data-width=\"400\"\n     *      data-numposts=\"5\">\n     * </div>\n     * @data-attr data-fb-html\n     */\n    fbHtml?: string;\n\n    /**\n     * Disqus page identifier\n     * @description Please refer official <a href=\"https://help.disqus.com/en/articles/1717084-javascript-configuration-variables\">disqus documentation</a> for more info\n     * @data-attr data-disqus-identifier\n     */\n    disqusIdentifier?: string;\n\n    /**\n     * Disqus page url\n     * @description Please refer official <a href=\"https://help.disqus.com/en/articles/1717084-javascript-configuration-variables\">disqus documentation</a> for more info\n     * @data-attr data-disqus-url\n     */\n    disqusUrl?: string;\n\n    __slideVideoInfo?: VideoInfo;\n    [key: string]: any;\n}\n\nconst defaultDynamicOptions = [\n    'src',\n    'sources',\n    'subHtml',\n    'subHtmlUrl',\n    'html',\n    'video',\n    'poster',\n    'slideName',\n    'responsive',\n    'srcset',\n    'sizes',\n    'iframe',\n    'downloadUrl',\n    'download',\n    'width',\n    'facebookShareUrl',\n    'tweetText',\n    'iframeTitle',\n    'twitterShareUrl',\n    'pinterestShareUrl',\n    'pinterestText',\n    'fbHtml',\n    'disqusIdentifier',\n    'disqusUrl',\n];\n\n// Convert html data-attribute to camalcase\nexport function convertToData(attr: string): string {\n    // FInd a way for lgsize\n    if (attr === 'href') {\n        return 'src';\n    }\n    attr = attr.replace('data-', '');\n    attr = attr.charAt(0).toLowerCase() + attr.slice(1);\n    attr = attr.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n\n    return attr;\n}\n\nconst utils = {\n    /**\n     * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\n     */\n    getSize(\n        el: HTMLElement,\n        container: lgQuery,\n        spacing = 0,\n        defaultLgSize?: string,\n    ): ImageSize | undefined {\n        const LGel = $LG(el);\n        let lgSize = LGel.attr('data-lg-size') || defaultLgSize;\n\n        if (!lgSize) {\n            return;\n        }\n\n        const isResponsiveSizes = lgSize.split(',');\n        // if at-least two viewport sizes are available\n        if (isResponsiveSizes[1]) {\n            const wWidth = window.innerWidth;\n            for (let i = 0; i < isResponsiveSizes.length; i++) {\n                const size = isResponsiveSizes[i];\n                const responsiveWidth = parseInt(size.split('-')[2], 10);\n                if (responsiveWidth > wWidth) {\n                    lgSize = size;\n                    break;\n                }\n\n                // take last item as last option\n                if (i === isResponsiveSizes.length - 1) {\n                    lgSize = size;\n                }\n            }\n        }\n\n        const size = lgSize.split('-');\n\n        const width = parseInt(size[0], 10);\n        const height = parseInt(size[1], 10);\n\n        const cWidth = container.width();\n        const cHeight = container.height() - spacing;\n\n        const maxWidth = Math.min(cWidth, width);\n        const maxHeight = Math.min(cHeight, height);\n\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n\n        return { width: width * ratio, height: height * ratio };\n    },\n\n    /**\n     * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\n     * @param {jQuery Element}\n     * @returns {String} Transform CSS string\n     */\n    getTransform(\n        el: HTMLElement,\n        container: lgQuery,\n        top: number,\n        bottom: number,\n        imageSize?: ImageSize,\n    ): string | undefined {\n        if (!imageSize) {\n            return;\n        }\n        const LGel = $LG(el).find('img').first();\n        if (!LGel.get()) {\n            return;\n        }\n\n        const containerRect = container.get().getBoundingClientRect();\n\n        const wWidth = containerRect.width;\n\n        // using innerWidth to include mobile safari bottom bar\n        const wHeight = container.height() - (top + bottom);\n\n        const elWidth = LGel.width();\n        const elHeight = LGel.height();\n\n        const elStyle = LGel.style();\n        let x =\n            (wWidth - elWidth) / 2 -\n            LGel.offset().left +\n            (parseFloat(elStyle.paddingLeft) || 0) +\n            (parseFloat(elStyle.borderLeft) || 0) +\n            $LG(window).scrollLeft() +\n            containerRect.left;\n        let y =\n            (wHeight - elHeight) / 2 -\n            LGel.offset().top +\n            (parseFloat(elStyle.paddingTop) || 0) +\n            (parseFloat(elStyle.borderTop) || 0) +\n            $LG(window).scrollTop() +\n            top;\n\n        const scX = elWidth / imageSize.width;\n        const scY = elHeight / imageSize.height;\n\n        const transform =\n            'translate3d(' +\n            (x *= -1) +\n            'px, ' +\n            (y *= -1) +\n            'px, 0) scale3d(' +\n            scX +\n            ', ' +\n            scY +\n            ', 1)';\n        return transform;\n    },\n\n    getIframeMarkup(\n        iframeWidth: string,\n        iframeHeight: string,\n        iframeMaxWidth: string,\n        iframeMaxHeight: string,\n        src?: string,\n        iframeTitle?: string,\n    ): string {\n        const title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : '';\n        return `<div class=\"lg-video-cont lg-has-iframe\" style=\"width:${iframeWidth}; max-width:${iframeMaxWidth}; height: ${iframeHeight}; max-height:${iframeMaxHeight}\">\n                    <iframe class=\"lg-object\" frameborder=\"0\" ${title} src=\"${src}\"  allowfullscreen=\"true\"></iframe>\n                </div>`;\n    },\n\n    getImgMarkup(\n        index: number,\n        src: string,\n        altAttr: string,\n        srcset?: string,\n        sizes?: string,\n        sources?: ImageSources[],\n    ): string {\n        const srcsetAttr = srcset ? `srcset=\"${srcset}\"` : '';\n        const sizesAttr = sizes ? `sizes=\"${sizes}\"` : '';\n        const imgMarkup = `<img ${altAttr} ${srcsetAttr}  ${sizesAttr} class=\"lg-object lg-image\" data-index=\"${index}\" src=\"${src}\" />`;\n        let sourceTag = '';\n        if (sources) {\n            const sourceObj =\n                typeof sources === 'string' ? JSON.parse(sources) : sources;\n\n            sourceTag = sourceObj.map((source: any) => {\n                let attrs = '';\n                Object.keys(source).forEach((key) => {\n                    // Do not remove the first space as it is required to separate the attributes\n                    attrs += ` ${key}=\"${source[key]}\"`;\n                });\n                return `<source ${attrs}></source>`;\n            });\n        }\n        return `${sourceTag}${imgMarkup}`;\n    },\n\n    // Get src from responsive src\n    getResponsiveSrc(srcItms: string[]): string {\n        const rsWidth = [];\n        const rsSrc = [];\n        let src = '';\n        for (let i = 0; i < srcItms.length; i++) {\n            const _src = srcItms[i].split(' ');\n\n            // Manage empty space\n            if (_src[0] === '') {\n                _src.splice(0, 1);\n            }\n\n            rsSrc.push(_src[0]);\n            rsWidth.push(_src[1]);\n        }\n\n        const wWidth = window.innerWidth;\n        for (let j = 0; j < rsWidth.length; j++) {\n            if (parseInt(rsWidth[j], 10) > wWidth) {\n                src = rsSrc[j];\n                break;\n            }\n        }\n        return src;\n    },\n\n    isImageLoaded(img: HTMLImageElement): boolean {\n        if (!img) return false;\n        // During the onload event, IE correctly identifies any images that\n        // weren’t downloaded as not complete. Others should too. Gecko-based\n        // browsers act like NS4 in that they report this incorrectly.\n        if (!img.complete) {\n            return false;\n        }\n\n        // However, they do have two very useful properties: naturalWidth and\n        // naturalHeight. These give the true size of the image. If it failed\n        // to load, either of these should be zero.\n        if (img.naturalWidth === 0) {\n            return false;\n        }\n\n        // No other way of checking: assume it’s ok.\n        return true;\n    },\n\n    getVideoPosterMarkup(\n        _poster: string,\n        dummyImg: string,\n        videoContStyle: string,\n        playVideoString: string,\n        _isVideo?: VideoInfo,\n    ): string {\n        let videoClass = '';\n        if (_isVideo && _isVideo.youtube) {\n            videoClass = 'lg-has-youtube';\n        } else if (_isVideo && _isVideo.vimeo) {\n            videoClass = 'lg-has-vimeo';\n        } else {\n            videoClass = 'lg-has-html5';\n        }\n\n        return `<div class=\"lg-video-cont ${videoClass}\" style=\"${videoContStyle}\">\n                <div class=\"lg-video-play-button\">\n                <svg\n                    viewBox=\"0 0 20 20\"\n                    preserveAspectRatio=\"xMidYMid\"\n                    focusable=\"false\"\n                    aria-labelledby=\"${playVideoString}\"\n                    role=\"img\"\n                    class=\"lg-video-play-icon\"\n                >\n                    <title>${playVideoString}</title>\n                    <polygon class=\"lg-video-play-icon-inner\" points=\"1,0 20,10 1,20\"></polygon>\n                </svg>\n                <svg class=\"lg-video-play-icon-bg\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle></svg>\n                <svg class=\"lg-video-play-icon-circle\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle>\n                </svg>\n            </div>\n            ${dummyImg || ''}\n            <img class=\"lg-object lg-video-poster\" src=\"${_poster}\" />\n        </div>`;\n    },\n\n    getFocusableElements(container: HTMLElement): NodeListOf<Element> {\n        const elements = container.querySelectorAll(\n            'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])',\n        );\n        const visibleElements = [].filter.call(elements, (element) => {\n            const style = window.getComputedStyle(element);\n            return style.display !== 'none' && style.visibility !== 'hidden';\n        });\n        return (visibleElements as unknown) as NodeListOf<Element>;\n    },\n\n    /**\n     * @desc Create dynamic elements array from gallery items when dynamic option is false\n     * It helps to avoid frequent DOM interaction\n     * and avoid multiple checks for dynamic elments\n     *\n     * @returns {Array} dynamicEl\n     */\n    getDynamicOptions(\n        items: any,\n        extraProps: string[],\n        getCaptionFromTitleOrAlt: boolean,\n        exThumbImage: string,\n    ): GalleryItem[] {\n        const dynamicElements: GalleryItem[] = [];\n        const availableDynamicOptions = [\n            ...defaultDynamicOptions,\n            ...extraProps,\n        ];\n        [].forEach.call(items, (item: HTMLElement) => {\n            const dynamicEl: GalleryItem = {} as GalleryItem;\n            for (let i = 0; i < item.attributes.length; i++) {\n                const attr = item.attributes[i];\n                if (attr.specified) {\n                    const dynamicAttr = convertToData(attr.name);\n                    let label = '';\n                    if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {\n                        label = dynamicAttr;\n                    }\n                    if (label) {\n                        (dynamicEl as any)[label] = attr.value;\n                    }\n                }\n            }\n            const currentItem = $LG(item);\n            const alt = currentItem.find('img').first().attr('alt');\n            const title = currentItem.attr('title');\n\n            const thumb = exThumbImage\n                ? currentItem.attr(exThumbImage)\n                : currentItem.find('img').first().attr('src');\n            dynamicEl.thumb = thumb;\n\n            if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {\n                dynamicEl.subHtml = title || alt || '';\n            }\n            dynamicEl.alt = alt || title || '';\n            dynamicElements.push(dynamicEl);\n        });\n        return dynamicElements;\n    },\n    isMobile(): boolean {\n        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    },\n    /**\n     * @desc Check the given src is video\n     * @param {String} src\n     * @return {Object} video type\n     * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\n     *\n     * @todo - this information can be moved to dynamicEl to avoid frequent calls\n     */\n\n    isVideo(\n        src: string,\n        isHTML5VIdeo: boolean,\n        index: number,\n    ): VideoInfo | undefined {\n        if (!src) {\n            if (isHTML5VIdeo) {\n                return {\n                    html5: true,\n                };\n            } else {\n                console.error(\n                    'lightGallery :- data-src is not provided on slide item ' +\n                        (index + 1) +\n                        '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/',\n                );\n                return;\n            }\n        }\n\n        const youtube = src.match(\n            /\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)([\\&|?][\\S]*)*/i,\n        );\n        const vimeo = src.match(\n            /\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)(.*)?/i,\n        );\n        const wistia = src.match(\n            /https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/,\n        );\n\n        if (youtube) {\n            return {\n                youtube,\n            };\n        } else if (vimeo) {\n            return {\n                vimeo,\n            };\n        } else if (wistia) {\n            return {\n                wistia,\n            };\n        }\n    },\n};\n\nexport default utils;\n","import {\n    AfterAppendSlideEventDetail,\n    AfterAppendSubHtmlDetail,\n    BeforeSlideDetail,\n    lGEvents,\n    SlideItemLoadDetail,\n} from './lg-events';\nimport {\n    LightGalleryAllSettings,\n    lightGalleryCoreSettings,\n    LightGallerySettings,\n} from './lg-settings';\nimport utils, { GalleryItem, ImageSize } from './lg-utils';\nimport { $LG, lgQuery } from './lgQuery';\nimport {\n    Coords,\n    MediaContainerPosition,\n    SlideDirection,\n    VideoInfo,\n} from './types';\n\ndeclare let picturefill: any;\n\n// @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\n// @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\n\n// Unique id for each gallery\nlet lgId = 0;\n\nexport class LightGallery {\n    public settings!: LightGalleryAllSettings;\n    public galleryItems!: GalleryItem[];\n\n    // Current gallery item\n    public lgId!: number;\n\n    public el!: HTMLElement;\n    public LGel!: lgQuery;\n    public lgOpened = false;\n\n    public index = 0;\n\n    // lightGallery modules\n    public plugins: any[] = [];\n\n    // false when lightGallery load first slide content;\n    public lGalleryOn = false;\n\n    // True when a slide animation is in progress\n    public lgBusy = false;\n\n    // Type of touch action - {swipe, zoomSwipe, pinch}\n    public touchAction?: 'swipe' | 'zoomSwipe' | 'pinch';\n\n    // Direction of swipe/drag - {horizontal, vertical}\n    public swipeDirection?: 'horizontal' | 'vertical';\n\n    // Timeout function for hiding controls;\n    public hideBarTimeout: any;\n\n    public currentItemsInDom: string[] = [];\n\n    public outer!: lgQuery;\n\n    public items: any;\n\n    public $backdrop!: lgQuery;\n    public $lgComponents!: lgQuery;\n\n    public $container!: lgQuery;\n\n    public $inner!: lgQuery;\n    public $content!: lgQuery;\n    public $toolbar!: lgQuery;\n\n    // Scroll top value before lightGallery is opened\n    public prevScrollTop = 0;\n\n    public bodyPaddingRight = 0;\n\n    private zoomFromOrigin!: boolean;\n\n    private currentImageSize?: ImageSize;\n\n    private isDummyImageRemoved = false;\n\n    private dragOrSwipeEnabled = false;\n\n    public mediaContainerPosition = {\n        top: 0,\n        bottom: 0,\n    };\n\n    constructor(element: HTMLElement, options?: LightGallerySettings) {\n        if (!element) {\n            return this;\n        }\n        lgId++;\n        this.lgId = lgId;\n\n        this.el = element;\n        this.LGel = $LG(element);\n\n        this.generateSettings(options);\n\n        this.buildModules();\n\n        // When using dynamic mode, ensure dynamicEl is an array\n        if (\n            this.settings.dynamic &&\n            this.settings.dynamicEl !== undefined &&\n            !Array.isArray(this.settings.dynamicEl)\n        ) {\n            throw 'When using dynamic mode, you must also define dynamicEl as an Array.';\n        }\n\n        this.galleryItems = this.getItems();\n        this.normalizeSettings();\n\n        // Gallery items\n\n        this.init();\n\n        this.validateLicense();\n\n        return this;\n    }\n\n    private generateSettings(options?: LightGallerySettings) {\n        // lightGallery settings\n        this.settings = {\n            ...lightGalleryCoreSettings,\n            ...options,\n        } as LightGalleryAllSettings;\n        if (\n            this.settings.isMobile &&\n            typeof this.settings.isMobile === 'function'\n                ? this.settings.isMobile()\n                : utils.isMobile()\n        ) {\n            const mobileSettings = {\n                ...this.settings.mobileSettings,\n                ...this.settings.mobileSettings,\n            };\n            this.settings = { ...this.settings, ...mobileSettings };\n        }\n    }\n\n    private normalizeSettings() {\n        if (this.settings.slideEndAnimation) {\n            this.settings.hideControlOnEnd = false;\n        }\n        if (!this.settings.closable) {\n            this.settings.swipeToClose = false;\n        }\n\n        // And reset it on close to get the correct value next time\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n\n        // At the moment, Zoom from image doesn't support dynamic options\n        // @todo add zoomFromOrigin support for dynamic images\n        if (this.settings.dynamic) {\n            this.zoomFromOrigin = false;\n        }\n\n        if (!this.settings.container) {\n            this.settings.container = document.body;\n        }\n\n        // settings.preload should not be grater than $item.length\n        this.settings.preload = Math.min(\n            this.settings.preload,\n            this.galleryItems.length,\n        );\n    }\n\n    init(): void {\n        this.addSlideVideoInfo(this.galleryItems);\n\n        this.buildStructure();\n\n        this.LGel.trigger(lGEvents.init, {\n            instance: this,\n        });\n\n        if (this.settings.keyPress) {\n            this.keyPress();\n        }\n\n        setTimeout(() => {\n            this.enableDrag();\n            this.enableSwipe();\n            this.triggerPosterClick();\n        }, 50);\n\n        this.arrow();\n        if (this.settings.mousewheel) {\n            this.mousewheel();\n        }\n\n        if (!this.settings.dynamic) {\n            this.openGalleryOnItemClick();\n        }\n    }\n\n    openGalleryOnItemClick(): void {\n        // Using for loop instead of using bubbling as the items can be any html element.\n        for (let index = 0; index < this.items.length; index++) {\n            const element = this.items[index];\n            const $element = $LG(element);\n            // Using different namespace for click because click event should not unbind if selector is same object('this')\n            // @todo manage all event listners - should have namespace that represent element\n            const uuid = lgQuery.generateUUID();\n            $element\n                .attr('data-lg-id', uuid)\n                .on(`click.lgcustom-item-${uuid}`, (e) => {\n                    e.preventDefault();\n                    const currentItemIndex = this.settings.index || index;\n                    this.openGallery(currentItemIndex, element);\n                });\n        }\n    }\n\n    /**\n     * Module constructor\n     * Modules are build incrementally.\n     * Gallery should be opened only once all the modules are initialized.\n     * use moduleBuildTimeout to make sure this\n     */\n    buildModules(): void {\n        this.settings.plugins.forEach((plugin) => {\n            this.plugins.push(new plugin(this, $LG));\n        });\n    }\n\n    validateLicense(): void {\n        if (!this.settings.licenseKey) {\n            console.error('Please provide a valid license key');\n        } else if (this.settings.licenseKey === '0000-0000-000-0000') {\n            console.warn(\n                `lightGallery: ${this.settings.licenseKey} license key is not valid for production use`,\n            );\n        }\n    }\n\n    getSlideItem(index: number): lgQuery {\n        return $LG(this.getSlideItemId(index));\n    }\n\n    getSlideItemId(index: number): string {\n        return `#lg-item-${this.lgId}-${index}`;\n    }\n\n    getIdName(id: string): string {\n        return `${id}-${this.lgId}`;\n    }\n    getElementById(id: string): lgQuery {\n        return $LG(`#${this.getIdName(id)}`);\n    }\n\n    manageSingleSlideClassName(): void {\n        if (this.galleryItems.length < 2) {\n            this.outer.addClass('lg-single-item');\n        } else {\n            this.outer.removeClass('lg-single-item');\n        }\n    }\n\n    buildStructure(): void {\n        const container = this.$container && this.$container.get();\n        if (container) {\n            return;\n        }\n        let controls = '';\n        let subHtmlCont = '';\n\n        // Create controls\n        if (this.settings.controls) {\n            controls = `<button type=\"button\" id=\"${this.getIdName(\n                'lg-prev',\n            )}\" aria-label=\"${\n                this.settings.strings['previousSlide']\n            }\" class=\"lg-prev lg-icon\"> ${this.settings.prevHtml} </button>\n                <button type=\"button\" id=\"${this.getIdName(\n                    'lg-next',\n                )}\" aria-label=\"${\n                this.settings.strings['nextSlide']\n            }\" class=\"lg-next lg-icon\"> ${this.settings.nextHtml} </button>`;\n        }\n\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\n            subHtmlCont =\n                '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\n        }\n\n        let addClasses = '';\n\n        if (this.settings.allowMediaOverlap) {\n            // Do not remove space before last single quote\n            addClasses += 'lg-media-overlap ';\n        }\n\n        const ariaLabelledby = this.settings.ariaLabelledby\n            ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"'\n            : '';\n        const ariaDescribedby = this.settings.ariaDescribedby\n            ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"'\n            : '';\n\n        const containerClassName = `lg-container ${this.settings.addClass} ${\n            document.body !== this.settings.container ? 'lg-inline' : ''\n        }`;\n        const closeIcon =\n            this.settings.closable && this.settings.showCloseIcon\n                ? `<button type=\"button\" aria-label=\"${\n                      this.settings.strings['closeGallery']\n                  }\" id=\"${this.getIdName(\n                      'lg-close',\n                  )}\" class=\"lg-close lg-icon\"></button>`\n                : '';\n        const maximizeIcon = this.settings.showMaximizeIcon\n            ? `<button type=\"button\" aria-label=\"${\n                  this.settings.strings['toggleMaximize']\n              }\" id=\"${this.getIdName(\n                  'lg-maximize',\n              )}\" class=\"lg-maximize lg-icon\"></button>`\n            : '';\n        const template = `\n        <div class=\"${containerClassName}\" id=\"${this.getIdName(\n            'lg-container',\n        )}\" tabindex=\"-1\" aria-modal=\"true\" ${ariaLabelledby} ${ariaDescribedby} role=\"dialog\"\n        >\n            <div id=\"${this.getIdName(\n                'lg-backdrop',\n            )}\" class=\"lg-backdrop\"></div>\n\n            <div id=\"${this.getIdName(\n                'lg-outer',\n            )}\" class=\"lg-outer lg-use-css3 lg-css3 lg-hide-items ${addClasses} \">\n\n              <div id=\"${this.getIdName('lg-content')}\" class=\"lg-content\">\n                <div id=\"${this.getIdName('lg-inner')}\" class=\"lg-inner\">\n                </div>\n                ${controls}\n              </div>\n                <div id=\"${this.getIdName(\n                    'lg-toolbar',\n                )}\" class=\"lg-toolbar lg-group\">\n                    ${maximizeIcon}\n                    ${closeIcon}\n                    </div>\n                    ${\n                        this.settings.appendSubHtmlTo === '.lg-outer'\n                            ? subHtmlCont\n                            : ''\n                    }\n                <div id=\"${this.getIdName(\n                    'lg-components',\n                )}\" class=\"lg-components\">\n                    ${\n                        this.settings.appendSubHtmlTo === '.lg-sub-html'\n                            ? subHtmlCont\n                            : ''\n                    }\n                </div>\n            </div>\n        </div>\n        `;\n\n        $LG(this.settings.container).append(template);\n\n        if (document.body !== this.settings.container) {\n            $LG(this.settings.container).css('position', 'relative');\n        }\n\n        this.outer = this.getElementById('lg-outer');\n        this.$lgComponents = this.getElementById('lg-components');\n        this.$backdrop = this.getElementById('lg-backdrop');\n        this.$container = this.getElementById('lg-container');\n        this.$inner = this.getElementById('lg-inner');\n        this.$content = this.getElementById('lg-content');\n        this.$toolbar = this.getElementById('lg-toolbar');\n\n        this.$backdrop.css(\n            'transition-duration',\n            this.settings.backdropDuration + 'ms',\n        );\n\n        let outerClassNames = `${this.settings.mode} `;\n\n        this.manageSingleSlideClassName();\n\n        if (this.settings.enableDrag) {\n            outerClassNames += 'lg-grab ';\n        }\n\n        this.outer.addClass(outerClassNames);\n\n        this.$inner.css('transition-timing-function', this.settings.easing);\n        this.$inner.css('transition-duration', this.settings.speed + 'ms');\n\n        if (this.settings.download) {\n            this.$toolbar.append(\n                `<a id=\"${this.getIdName(\n                    'lg-download',\n                )}\" target=\"_blank\" rel=\"noopener\" aria-label=\"${\n                    this.settings.strings['download']\n                }\" download class=\"lg-download lg-icon\"></a>`,\n            );\n        }\n\n        this.counter();\n\n        $LG(window).on(\n            `resize.lg.global${this.lgId} orientationchange.lg.global${this.lgId}`,\n            () => {\n                this.refreshOnResize();\n            },\n        );\n\n        this.hideBars();\n\n        this.manageCloseGallery();\n        this.toggleMaximize();\n\n        this.initModules();\n    }\n\n    refreshOnResize(): void {\n        if (this.lgOpened) {\n            const currentGalleryItem = this.galleryItems[this.index];\n            const { __slideVideoInfo } = currentGalleryItem;\n\n            this.mediaContainerPosition = this.getMediaContainerPosition();\n            const { top, bottom } = this.mediaContainerPosition;\n            this.currentImageSize = utils.getSize(\n                this.items[this.index],\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && this.settings.videoMaxSize,\n            );\n            if (__slideVideoInfo) {\n                this.resizeVideoSlide(this.index, this.currentImageSize);\n            }\n            if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\n                const imgStyle = this.getDummyImgStyles(this.currentImageSize);\n                this.outer\n                    .find('.lg-current .lg-dummy-img')\n                    .first()\n                    .attr('style', imgStyle);\n            }\n            this.LGel.trigger(lGEvents.containerResize);\n        }\n    }\n\n    resizeVideoSlide(index: number, imageSize?: ImageSize): void {\n        const lgVideoStyle = this.getVideoContStyle(imageSize);\n        const currentSlide = this.getSlideItem(index);\n        currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);\n    }\n\n    /**\n     * Update slides dynamically.\n     * Add, edit or delete slides dynamically when lightGallery is opened.\n     * Modify the current gallery items and pass it via updateSlides method\n     * @note\n     * - Do not mutate existing lightGallery items directly.\n     * - Always pass new list of gallery items\n     * - You need to take care of thumbnails outside the gallery if any\n     * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.\n     * @param items Gallery items\n     * @param index After the update operation, which slide gallery should navigate to\n     * @category lGPublicMethods\n     * @example\n     * const plugin = lightGallery();\n     *\n     * // Adding slides dynamically\n     * let galleryItems = [\n     * // Access existing lightGallery items\n     * // galleryItems are automatically generated internally from the gallery HTML markup\n     * // or directly from galleryItems when dynamic gallery is used\n     *   ...plugin.galleryItems,\n     *     ...[\n     *       {\n     *         src: 'img/img-1.png',\n     *           thumb: 'img/thumb1.png',\n     *         },\n     *     ],\n     *   ];\n     *   plugin.updateSlides(\n     *     galleryItems,\n     *     plugin.index,\n     *   );\n     *\n     *\n     * // Remove slides dynamically\n     * galleryItems = JSON.parse(\n     *   JSON.stringify(updateSlideInstance.galleryItems),\n     * );\n     * galleryItems.shift();\n     * updateSlideInstance.updateSlides(galleryItems, 1);\n     * @see <a href=\"/demos/update-slides/\">Demo</a>\n     */\n    updateSlides(items: GalleryItem[], index: number): void {\n        if (this.index > items.length - 1) {\n            this.index = items.length - 1;\n        }\n        if (items.length === 1) {\n            this.index = 0;\n        }\n        if (!items.length) {\n            this.closeGallery();\n            return;\n        }\n        const currentSrc = this.galleryItems[index].src;\n        this.galleryItems = items;\n        this.updateControls();\n        this.$inner.empty();\n        this.currentItemsInDom = [];\n\n        let _index = 0;\n        // Find the current index based on source value of the slide\n        this.galleryItems.some((galleryItem, itemIndex) => {\n            if (galleryItem.src === currentSrc) {\n                _index = itemIndex;\n                return true;\n            }\n            return false;\n        });\n\n        this.currentItemsInDom = this.organizeSlideItems(_index, -1);\n        this.loadContent(_index, true);\n        this.getSlideItem(_index).addClass('lg-current');\n\n        this.index = _index;\n        this.updateCurrentCounter(_index);\n        this.LGel.trigger(lGEvents.updateSlides);\n    }\n\n    // Get gallery items based on multiple conditions\n    getItems(): GalleryItem[] {\n        // Gallery items\n        this.items = [];\n        if (!this.settings.dynamic) {\n            if (this.settings.selector === 'this') {\n                this.items.push(this.el);\n            } else if (this.settings.selector) {\n                if (typeof this.settings.selector === 'string') {\n                    if (this.settings.selectWithin) {\n                        const selectWithin = $LG(this.settings.selectWithin);\n                        this.items = selectWithin\n                            .find(this.settings.selector)\n                            .get();\n                    } else {\n                        this.items = this.el.querySelectorAll(\n                            this.settings.selector,\n                        );\n                    }\n                } else {\n                    this.items = this.settings.selector;\n                }\n            } else {\n                this.items = this.el.children;\n            }\n            return utils.getDynamicOptions(\n                this.items,\n                this.settings.extraProps,\n                this.settings.getCaptionFromTitleOrAlt,\n                this.settings.exThumbImage,\n            );\n        } else {\n            return this.settings.dynamicEl || [];\n        }\n    }\n\n    shouldHideScrollbar(): boolean {\n        return (\n            this.settings.hideScrollbar &&\n            document.body === this.settings.container\n        );\n    }\n\n    hideScrollbar(): void {\n        if (!this.shouldHideScrollbar()) {\n            return;\n        }\n        this.bodyPaddingRight = parseFloat($LG('body').style().paddingRight);\n        const bodyRect = document.documentElement.getBoundingClientRect();\n        const scrollbarWidth = window.innerWidth - bodyRect.width;\n\n        $LG(document.body).css(\n            'padding-right',\n            scrollbarWidth + this.bodyPaddingRight + 'px',\n        );\n        $LG(document.body).addClass('lg-overlay-open');\n    }\n\n    resetScrollBar(): void {\n        if (!this.shouldHideScrollbar()) {\n            return;\n        }\n        $LG(document.body).css('padding-right', this.bodyPaddingRight + 'px');\n        $LG(document.body).removeClass('lg-overlay-open');\n    }\n\n    /**\n     * Open lightGallery.\n     * Open gallery with specific slide by passing index of the slide as parameter.\n     * @category lGPublicMethods\n     * @param {Number} index  - index of the slide\n     * @param {HTMLElement} element - Which image lightGallery should zoom from\n     *\n     * @example\n     * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\n     * const dynamicGallery = lightGallery($dynamicGallery, {\n     *     dynamic: true,\n     *     dynamicEl: [\n     *         {\n     *              src: 'img/1.jpg',\n     *              thumb: 'img/thumb-1.jpg',\n     *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\n     *         },\n     *         ...\n     *     ],\n     * });\n     * $dynamicGallery.addEventListener('click', function () {\n     *     // Starts with third item.(Optional).\n     *     // This is useful if you want use dynamic mode with\n     *     // custom thumbnails (thumbnails outside gallery),\n     *     dynamicGallery.openGallery(2);\n     * });\n     *\n     */\n    openGallery(index = this.settings.index, element?: HTMLElement): void {\n        // prevent accidental double execution\n        if (this.lgOpened) return;\n        this.lgOpened = true;\n        this.outer.removeClass('lg-hide-items');\n\n        this.hideScrollbar();\n\n        // Add display block, but still has opacity 0\n        this.$container.addClass('lg-show');\n\n        const itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(\n            index,\n            index,\n        );\n        this.currentItemsInDom = itemsToBeInsertedToDom;\n\n        let items = '';\n        itemsToBeInsertedToDom.forEach((item) => {\n            items = items + `<div id=\"${item}\" class=\"lg-item\"></div>`;\n        });\n\n        this.$inner.append(items);\n        this.addHtml(index);\n        let transform: string | undefined = '';\n        this.mediaContainerPosition = this.getMediaContainerPosition();\n        const { top, bottom } = this.mediaContainerPosition;\n        if (!this.settings.allowMediaOverlap) {\n            this.setMediaContainerPosition(top, bottom);\n        }\n        const { __slideVideoInfo } = this.galleryItems[index];\n        if (this.zoomFromOrigin && element) {\n            this.currentImageSize = utils.getSize(\n                element,\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && this.settings.videoMaxSize,\n            );\n            transform = utils.getTransform(\n                element,\n                this.outer,\n                top,\n                bottom,\n                this.currentImageSize,\n            );\n        }\n        if (!this.zoomFromOrigin || !transform) {\n            this.outer.addClass(this.settings.startClass);\n            this.getSlideItem(index).removeClass('lg-complete');\n        }\n        const timeout = this.settings.zoomFromOrigin\n            ? 100\n            : this.settings.backdropDuration;\n        setTimeout(() => {\n            this.outer.addClass('lg-components-open');\n        }, timeout);\n        this.index = index;\n        this.LGel.trigger(lGEvents.beforeOpen);\n\n        // add class lg-current to remove initial transition\n        this.getSlideItem(index).addClass('lg-current');\n\n        this.lGalleryOn = false;\n        // Store the current scroll top value to scroll back after closing the gallery..\n        this.prevScrollTop = $LG(window).scrollTop();\n\n        setTimeout(() => {\n            // Need to check both zoomFromOrigin and transform values as we need to set set the\n            // default opening animation if user missed to add the lg-size attribute\n\n            if (this.zoomFromOrigin && transform) {\n                const currentSlide = this.getSlideItem(index);\n                currentSlide.css('transform', transform);\n                setTimeout(() => {\n                    currentSlide\n                        .addClass('lg-start-progress lg-start-end-progress')\n                        .css(\n                            'transition-duration',\n                            this.settings.startAnimationDuration + 'ms',\n                        );\n                    this.outer.addClass('lg-zoom-from-image');\n                });\n                setTimeout(() => {\n                    currentSlide.css('transform', 'translate3d(0, 0, 0)');\n                }, 100);\n            }\n\n            setTimeout(() => {\n                this.$backdrop.addClass('in');\n                this.$container.addClass('lg-show-in');\n            }, 10);\n\n            setTimeout(() => {\n                if (\n                    this.settings.trapFocus &&\n                    document.body === this.settings.container\n                ) {\n                    this.trapFocus();\n                }\n            }, this.settings.backdropDuration + 50);\n\n            // lg-visible class resets gallery opacity to 1\n            if (!this.zoomFromOrigin || !transform) {\n                setTimeout(() => {\n                    this.outer.addClass('lg-visible');\n                }, this.settings.backdropDuration);\n            }\n\n            // initiate slide function\n            this.slide(index, false, false, false);\n\n            this.LGel.trigger(lGEvents.afterOpen);\n        });\n\n        if (document.body === this.settings.container) {\n            $LG('html').addClass('lg-on');\n        }\n    }\n\n    /**\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\n     * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\n     * if you have dynamic captions for each media,\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\n     */\n    public getMediaContainerPosition(): MediaContainerPosition {\n        if (this.settings.allowMediaOverlap) {\n            return {\n                top: 0,\n                bottom: 0,\n            };\n        }\n        const top = this.$toolbar.get().clientHeight || 0;\n        const subHtml = this.outer.find('.lg-components .lg-sub-html').get();\n        const captionHeight =\n            this.settings.defaultCaptionHeight ||\n            (subHtml && subHtml.clientHeight) ||\n            0;\n        const thumbContainer = this.outer.find('.lg-thumb-outer').get();\n        const thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\n        const bottom = thumbHeight + captionHeight;\n        return {\n            top,\n            bottom,\n        };\n    }\n\n    private setMediaContainerPosition(top = 0, bottom = 0): void {\n        this.$content.css('top', top + 'px').css('bottom', bottom + 'px');\n    }\n\n    hideBars(): void {\n        // Hide controllers if mouse doesn't move for some period\n        setTimeout(() => {\n            this.outer.removeClass('lg-hide-items');\n            if (this.settings.hideBarsDelay > 0) {\n                this.outer.on('mousemove.lg click.lg touchstart.lg', () => {\n                    this.outer.removeClass('lg-hide-items');\n\n                    clearTimeout(this.hideBarTimeout);\n\n                    // Timeout will be cleared on each slide movement also\n                    this.hideBarTimeout = setTimeout(() => {\n                        this.outer.addClass('lg-hide-items');\n                    }, this.settings.hideBarsDelay);\n                });\n                this.outer.trigger('mousemove.lg');\n            }\n        }, this.settings.showBarsAfter);\n    }\n\n    initPictureFill($img: lgQuery): void {\n        if (this.settings.supportLegacyBrowser) {\n            try {\n                picturefill({\n                    elements: [$img.get()],\n                });\n            } catch (e) {\n                console.warn(\n                    'lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.',\n                );\n            }\n        }\n    }\n\n    /**\n     *  @desc Create image counter\n     *  Ex: 1/10\n     */\n    counter(): void {\n        if (this.settings.counter) {\n            const counterHtml = `<div class=\"lg-counter\" role=\"status\" aria-live=\"polite\">\n                <span id=\"${this.getIdName(\n                    'lg-counter-current',\n                )}\" class=\"lg-counter-current\">${this.index + 1} </span> /\n                <span id=\"${this.getIdName(\n                    'lg-counter-all',\n                )}\" class=\"lg-counter-all\">${\n                this.galleryItems.length\n            } </span></div>`;\n            this.outer.find(this.settings.appendCounterTo).append(counterHtml);\n        }\n    }\n\n    /**\n     *  @desc add sub-html into the slide\n     *  @param {Number} index - index of the slide\n     */\n    addHtml(index: number): void {\n        let subHtml;\n        let subHtmlUrl;\n        if (this.galleryItems[index].subHtmlUrl) {\n            subHtmlUrl = this.galleryItems[index].subHtmlUrl;\n        } else {\n            subHtml = this.galleryItems[index].subHtml;\n        }\n\n        if (!subHtmlUrl) {\n            if (subHtml) {\n                // get first letter of sub-html\n                // if first letter starts with . or # get the html form the jQuery object\n                const fL = subHtml.substring(0, 1);\n                if (fL === '.' || fL === '#') {\n                    if (\n                        this.settings.subHtmlSelectorRelative &&\n                        !this.settings.dynamic\n                    ) {\n                        subHtml = $LG(this.items)\n                            .eq(index)\n                            .find(subHtml)\n                            .first()\n                            .html();\n                    } else {\n                        subHtml = $LG(subHtml).first().html();\n                    }\n                }\n            } else {\n                subHtml = '';\n            }\n        }\n\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\n            if (subHtmlUrl) {\n                this.outer.find('.lg-sub-html').load(subHtmlUrl);\n            } else {\n                this.outer.find('.lg-sub-html').html(subHtml as string);\n            }\n        } else {\n            const currentSlide = $LG(this.getSlideItemId(index));\n            if (subHtmlUrl) {\n                currentSlide.load(subHtmlUrl);\n            } else {\n                currentSlide.append(\n                    `<div class=\"lg-sub-html\">${subHtml}</div>`,\n                );\n            }\n        }\n\n        // Add lg-empty-html class if title doesn't exist\n        if (typeof subHtml !== 'undefined' && subHtml !== null) {\n            if (subHtml === '') {\n                this.outer\n                    .find(this.settings.appendSubHtmlTo)\n                    .addClass('lg-empty-html');\n            } else {\n                this.outer\n                    .find(this.settings.appendSubHtmlTo)\n                    .removeClass('lg-empty-html');\n            }\n        }\n\n        this.LGel.trigger<AfterAppendSubHtmlDetail>(\n            lGEvents.afterAppendSubHtml,\n            {\n                index,\n            },\n        );\n    }\n\n    /**\n     *  @desc Preload slides\n     *  @param {Number} index - index of the slide\n     * @todo preload not working for the first slide, Also, should work for the first and last slide as well\n     */\n    preload(index: number): void {\n        for (let i = 1; i <= this.settings.preload; i++) {\n            if (i >= this.galleryItems.length - index) {\n                break;\n            }\n\n            this.loadContent(index + i, false);\n        }\n\n        for (let j = 1; j <= this.settings.preload; j++) {\n            if (index - j < 0) {\n                break;\n            }\n\n            this.loadContent(index - j, false);\n        }\n    }\n\n    getDummyImgStyles(imageSize?: ImageSize): string {\n        if (!imageSize) return '';\n        return `width:${imageSize.width}px;\n                margin-left: -${imageSize.width / 2}px;\n                margin-top: -${imageSize.height / 2}px;\n                height:${imageSize.height}px`;\n    }\n    getVideoContStyle(imageSize?: ImageSize): string {\n        if (!imageSize) return '';\n        return `width:${imageSize.width}px;\n                height:${imageSize.height}px`;\n    }\n\n    getDummyImageContent(\n        $currentSlide: lgQuery,\n        index: number,\n        alt: string,\n    ): string {\n        let $currentItem;\n        if (!this.settings.dynamic) {\n            $currentItem = $LG(this.items).eq(index);\n        }\n        if ($currentItem) {\n            let _dummyImgSrc;\n            if (!this.settings.exThumbImage) {\n                _dummyImgSrc = $currentItem.find('img').first().attr('src');\n            } else {\n                _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\n            }\n            if (!_dummyImgSrc) return '';\n            const imgStyle = this.getDummyImgStyles(this.currentImageSize);\n            const dummyImgContent = `<img ${alt} style=\"${imgStyle}\" class=\"lg-dummy-img\" src=\"${_dummyImgSrc}\" />`;\n\n            $currentSlide.addClass('lg-first-slide');\n            this.outer.addClass('lg-first-slide-loading');\n\n            return dummyImgContent;\n        }\n        return '';\n    }\n\n    setImgMarkup(src: string, $currentSlide: lgQuery, index: number): void {\n        const currentGalleryItem = this.galleryItems[index];\n        const { alt, srcset, sizes, sources } = currentGalleryItem;\n\n        // Use the thumbnail as dummy image which will be resized to actual image size and\n        // displayed on top of actual image\n        let imgContent = '';\n        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n        if (this.isFirstSlideWithZoomAnimation()) {\n            imgContent = this.getDummyImageContent(\n                $currentSlide,\n                index,\n                altAttr,\n            );\n        } else {\n            imgContent = utils.getImgMarkup(\n                index,\n                src,\n                altAttr,\n                srcset,\n                sizes,\n                sources,\n            );\n        }\n        const imgMarkup = `<picture class=\"lg-img-wrap\"> ${imgContent}</picture>`;\n        $currentSlide.prepend(imgMarkup);\n    }\n\n    onSlideObjectLoad(\n        $slide: lgQuery,\n        isHTML5VideoWithoutPoster: boolean,\n        onLoad: () => void,\n        onError: () => void,\n    ): void {\n        const mediaObject = $slide.find('.lg-object').first();\n        if (\n            utils.isImageLoaded(mediaObject.get() as HTMLImageElement) ||\n            isHTML5VideoWithoutPoster\n        ) {\n            onLoad();\n        } else {\n            mediaObject.on('load.lg error.lg', () => {\n                onLoad && onLoad();\n            });\n            mediaObject.on('error.lg', () => {\n                onError && onError();\n            });\n        }\n    }\n\n    /**\n     *\n     * @param $el Current slide item\n     * @param index\n     * @param delay Delay is 0 except first time\n     * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin\n     * @param isFirstSlide\n     */\n    onLgObjectLoad(\n        currentSlide: lgQuery,\n        index: number,\n        delay: number,\n        speed: number,\n        isFirstSlide: boolean,\n        isHTML5VideoWithoutPoster: boolean,\n    ): void {\n        this.onSlideObjectLoad(\n            currentSlide,\n            isHTML5VideoWithoutPoster,\n            () => {\n                this.triggerSlideItemLoad(\n                    currentSlide,\n                    index,\n                    delay,\n                    speed,\n                    isFirstSlide,\n                );\n            },\n            () => {\n                currentSlide.addClass('lg-complete lg-complete_');\n                currentSlide.html(\n                    '<span class=\"lg-error-msg\">' +\n                        this.settings.strings['mediaLoadingFailed'] +\n                        '</span>',\n                );\n            },\n        );\n    }\n\n    triggerSlideItemLoad(\n        $currentSlide: lgQuery,\n        index: number,\n        delay: number,\n        speed: number,\n        isFirstSlide: boolean,\n    ): void {\n        const currentGalleryItem = this.galleryItems[index];\n\n        // Adding delay for video slides without poster for better performance and user experience\n        // Videos should start playing once once the gallery is completely loaded\n        const _speed =\n            isFirstSlide &&\n            this.getSlideType(currentGalleryItem) === 'video' &&\n            !currentGalleryItem.poster\n                ? speed\n                : 0;\n        setTimeout(() => {\n            $currentSlide.addClass('lg-complete lg-complete_');\n            this.LGel.trigger<SlideItemLoadDetail>(lGEvents.slideItemLoad, {\n                index,\n                delay: delay || 0,\n                isFirstSlide,\n            });\n        }, _speed);\n    }\n\n    isFirstSlideWithZoomAnimation(): boolean {\n        return !!(\n            !this.lGalleryOn &&\n            this.zoomFromOrigin &&\n            this.currentImageSize\n        );\n    }\n\n    // Add video slideInfo\n    addSlideVideoInfo(items: GalleryItem[]): void {\n        items.forEach((element, index) => {\n            element.__slideVideoInfo = utils.isVideo(\n                element.src as string,\n                !!element.video,\n                index,\n            );\n            if (\n                element.__slideVideoInfo &&\n                this.settings.loadYouTubePoster &&\n                !element.poster &&\n                element.__slideVideoInfo.youtube\n            ) {\n                element.poster = `//img.youtube.com/vi/${element.__slideVideoInfo.youtube[1]}/maxresdefault.jpg`;\n            }\n        });\n    }\n\n    /**\n     *  Load slide content into slide.\n     *  This is used to load content into slides that is not visible too\n     *  @param {Number} index - index of the slide.\n     *  @param {Boolean} rec - if true call loadcontent() function again.\n     */\n    loadContent(index: number, rec: boolean): void {\n        const currentGalleryItem = this.galleryItems[index];\n        const $currentSlide = $LG(this.getSlideItemId(index));\n\n        const { poster, srcset, sizes, sources } = currentGalleryItem;\n        let { src } = currentGalleryItem;\n\n        const video = currentGalleryItem.video;\n\n        const _html5Video =\n            video && typeof video === 'string' ? JSON.parse(video) : video;\n\n        if (currentGalleryItem.responsive) {\n            const srcDyItms = currentGalleryItem.responsive.split(',');\n            src = utils.getResponsiveSrc(srcDyItms) || src;\n        }\n\n        const videoInfo = currentGalleryItem.__slideVideoInfo;\n        let lgVideoStyle = '';\n\n        const iframe = !!currentGalleryItem.iframe;\n\n        const isFirstSlide = !this.lGalleryOn;\n\n        // delay for adding complete class. it is 0 except first time.\n        let delay = 0;\n        if (isFirstSlide) {\n            if (this.zoomFromOrigin && this.currentImageSize) {\n                delay = this.settings.startAnimationDuration + 10;\n            } else {\n                delay = this.settings.backdropDuration + 10;\n            }\n        }\n\n        if (!$currentSlide.hasClass('lg-loaded')) {\n            if (videoInfo) {\n                const { top, bottom } = this.mediaContainerPosition;\n                const videoSize = utils.getSize(\n                    this.items[index],\n                    this.outer,\n                    top + bottom,\n                    videoInfo && this.settings.videoMaxSize,\n                );\n                lgVideoStyle = this.getVideoContStyle(videoSize);\n            }\n            if (iframe) {\n                const markup = utils.getIframeMarkup(\n                    this.settings.iframeWidth,\n                    this.settings.iframeHeight,\n                    this.settings.iframeMaxWidth,\n                    this.settings.iframeMaxHeight,\n                    src,\n                    currentGalleryItem.iframeTitle,\n                );\n                $currentSlide.prepend(markup);\n            } else if (poster) {\n                let dummyImg = '';\n                const hasStartAnimation =\n                    isFirstSlide &&\n                    this.zoomFromOrigin &&\n                    this.currentImageSize;\n                if (hasStartAnimation) {\n                    dummyImg = this.getDummyImageContent(\n                        $currentSlide,\n                        index,\n                        '',\n                    );\n                }\n\n                const markup = utils.getVideoPosterMarkup(\n                    poster,\n                    dummyImg || '',\n                    lgVideoStyle,\n                    this.settings.strings['playVideo'],\n                    videoInfo,\n                );\n                $currentSlide.prepend(markup);\n            } else if (videoInfo) {\n                const markup = `<div class=\"lg-video-cont \" style=\"${lgVideoStyle}\"></div>`;\n                $currentSlide.prepend(markup);\n            } else {\n                this.setImgMarkup(src as string, $currentSlide, index);\n                if (srcset || sources) {\n                    const $img = $currentSlide.find('.lg-object');\n                    this.initPictureFill($img);\n                }\n            }\n            if (poster || videoInfo) {\n                this.LGel.trigger(lGEvents.hasVideo, {\n                    index,\n                    src: src,\n                    html5Video: _html5Video,\n                    hasPoster: !!poster,\n                });\n            }\n\n            this.LGel.trigger<AfterAppendSlideEventDetail>(\n                lGEvents.afterAppendSlide,\n                { index },\n            );\n\n            if (\n                this.lGalleryOn &&\n                this.settings.appendSubHtmlTo === '.lg-item'\n            ) {\n                this.addHtml(index);\n            }\n        }\n\n        // For first time add some delay for displaying the start animation.\n        let _speed = 0;\n\n        // Do not change the delay value because it is required for zoom plugin.\n        // If gallery opened from direct url (hash) speed value should be 0\n        if (delay && !$LG(document.body).hasClass('lg-from-hash')) {\n            _speed = delay;\n        }\n\n        // Only for first slide and zoomFromOrigin is enabled\n        if (this.isFirstSlideWithZoomAnimation()) {\n            setTimeout(() => {\n                $currentSlide\n                    .removeClass('lg-start-end-progress lg-start-progress')\n                    .removeAttr('style');\n            }, this.settings.startAnimationDuration + 100);\n            if (!$currentSlide.hasClass('lg-loaded')) {\n                setTimeout(() => {\n                    if (this.getSlideType(currentGalleryItem) === 'image') {\n                        const { alt } = currentGalleryItem;\n                        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n                        $currentSlide\n                            .find('.lg-img-wrap')\n                            .append(\n                                utils.getImgMarkup(\n                                    index,\n                                    src as string,\n                                    altAttr,\n                                    srcset,\n                                    sizes,\n                                    currentGalleryItem.sources,\n                                ),\n                            );\n                        if (srcset || sources) {\n                            const $img = $currentSlide.find('.lg-object');\n                            this.initPictureFill($img);\n                        }\n                    }\n                    if (\n                        this.getSlideType(currentGalleryItem) === 'image' ||\n                        (this.getSlideType(currentGalleryItem) === 'video' &&\n                            poster)\n                    ) {\n                        this.onLgObjectLoad(\n                            $currentSlide,\n                            index,\n                            delay,\n                            _speed,\n                            true,\n                            false,\n                        );\n\n                        // load remaining slides once the slide is completely loaded\n                        this.onSlideObjectLoad(\n                            $currentSlide,\n                            !!(videoInfo && videoInfo.html5 && !poster),\n                            () => {\n                                this.loadContentOnFirstSlideLoad(\n                                    index,\n                                    $currentSlide,\n                                    _speed,\n                                );\n                            },\n                            () => {\n                                this.loadContentOnFirstSlideLoad(\n                                    index,\n                                    $currentSlide,\n                                    _speed,\n                                );\n                            },\n                        );\n                    }\n                }, this.settings.startAnimationDuration + 100);\n            }\n        }\n\n        // SLide content has been added to dom\n        $currentSlide.addClass('lg-loaded');\n\n        if (\n            !this.isFirstSlideWithZoomAnimation() ||\n            (this.getSlideType(currentGalleryItem) === 'video' && !poster)\n        ) {\n            this.onLgObjectLoad(\n                $currentSlide,\n                index,\n                delay,\n                _speed,\n                isFirstSlide,\n                !!(videoInfo && videoInfo.html5 && !poster),\n            );\n        }\n\n        // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\n        if (\n            (!this.zoomFromOrigin || !this.currentImageSize) &&\n            $currentSlide.hasClass('lg-complete_') &&\n            !this.lGalleryOn\n        ) {\n            setTimeout(() => {\n                $currentSlide.addClass('lg-complete');\n            }, this.settings.backdropDuration);\n        }\n\n        // Content loaded\n        // Need to set lGalleryOn before calling preload function\n        this.lGalleryOn = true;\n\n        if (rec === true) {\n            if (!$currentSlide.hasClass('lg-complete_')) {\n                $currentSlide\n                    .find('.lg-object')\n                    .first()\n                    .on('load.lg error.lg', () => {\n                        this.preload(index);\n                    });\n            } else {\n                this.preload(index);\n            }\n        }\n    }\n\n    /**\n     * @desc Remove dummy image content and load next slides\n     * Called only for the first time if zoomFromOrigin animation is enabled\n     * @param index\n     * @param $currentSlide\n     * @param speed\n     */\n    loadContentOnFirstSlideLoad(\n        index: number,\n        $currentSlide: lgQuery,\n        speed: number,\n    ): void {\n        setTimeout(() => {\n            $currentSlide.find('.lg-dummy-img').remove();\n            $currentSlide.removeClass('lg-first-slide');\n            this.outer.removeClass('lg-first-slide-loading');\n            this.isDummyImageRemoved = true;\n            this.preload(index);\n        }, speed + 300);\n    }\n\n    getItemsToBeInsertedToDom(\n        index: number,\n        prevIndex: number,\n        numberOfItems = 0,\n    ): string[] {\n        const itemsToBeInsertedToDom: string[] = [];\n        // Minimum 2 items should be there\n        let possibleNumberOfItems = Math.max(numberOfItems, 3);\n        possibleNumberOfItems = Math.min(\n            possibleNumberOfItems,\n            this.galleryItems.length,\n        );\n        const prevIndexItem = `lg-item-${this.lgId}-${prevIndex}`;\n        if (this.galleryItems.length <= 3) {\n            this.galleryItems.forEach((_element, index) => {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${index}`);\n            });\n            return itemsToBeInsertedToDom;\n        }\n\n        if (index < (this.galleryItems.length - 1) / 2) {\n            for (\n                let idx = index;\n                idx > index - possibleNumberOfItems / 2 && idx >= 0;\n                idx--\n            ) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${idx}`);\n            }\n            const numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for (\n                let idx = 0;\n                idx < possibleNumberOfItems - numberOfExistingItems;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${index + idx + 1}`,\n                );\n            }\n        } else {\n            for (\n                let idx = index;\n                idx <= this.galleryItems.length - 1 &&\n                idx < index + possibleNumberOfItems / 2;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${idx}`);\n            }\n            const numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for (\n                let idx = 0;\n                idx < possibleNumberOfItems - numberOfExistingItems;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${index - idx - 1}`,\n                );\n            }\n        }\n        if (this.settings.loop) {\n            if (index === this.galleryItems.length - 1) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${0}`);\n            } else if (index === 0) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${this.galleryItems.length - 1}`,\n                );\n            }\n        }\n        if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {\n            itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${prevIndex}`);\n        }\n\n        return itemsToBeInsertedToDom;\n    }\n\n    organizeSlideItems(index: number, prevIndex: number): string[] {\n        const itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(\n            index,\n            prevIndex,\n            this.settings.numberOfSlideItemsInDom,\n        );\n\n        itemsToBeInsertedToDom.forEach((item) => {\n            if (this.currentItemsInDom.indexOf(item) === -1) {\n                this.$inner.append(`<div id=\"${item}\" class=\"lg-item\"></div>`);\n            }\n        });\n\n        this.currentItemsInDom.forEach((item) => {\n            if (itemsToBeInsertedToDom.indexOf(item) === -1) {\n                $LG(`#${item}`).remove();\n            }\n        });\n        return itemsToBeInsertedToDom;\n    }\n\n    /**\n     * Get previous index of the slide\n     */\n    getPreviousSlideIndex(): number {\n        let prevIndex = 0;\n        try {\n            const currentItemId = this.outer\n                .find('.lg-current')\n                .first()\n                .attr('id');\n            prevIndex = parseInt(currentItemId.split('-')[3]) || 0;\n        } catch (error) {\n            prevIndex = 0;\n        }\n        return prevIndex;\n    }\n\n    setDownloadValue(index: number): void {\n        if (this.settings.download) {\n            const currentGalleryItem = this.galleryItems[index];\n            const hideDownloadBtn =\n                currentGalleryItem.downloadUrl === false ||\n                currentGalleryItem.downloadUrl === 'false';\n            if (hideDownloadBtn) {\n                this.outer.addClass('lg-hide-download');\n            } else {\n                const $download = this.getElementById('lg-download');\n                this.outer.removeClass('lg-hide-download');\n                $download.attr(\n                    'href',\n                    currentGalleryItem.downloadUrl ||\n                        (currentGalleryItem.src as string),\n                );\n                if (currentGalleryItem.download) {\n                    $download.attr('download', currentGalleryItem.download);\n                }\n            }\n        }\n    }\n\n    makeSlideAnimation(\n        direction: 'next' | 'prev',\n        currentSlideItem: lgQuery,\n        previousSlideItem: lgQuery,\n    ): void {\n        if (this.lGalleryOn) {\n            previousSlideItem.addClass('lg-slide-progress');\n        }\n        setTimeout(\n            () => {\n                // remove all transitions\n                this.outer.addClass('lg-no-trans');\n\n                this.outer\n                    .find('.lg-item')\n                    .removeClass('lg-prev-slide lg-next-slide');\n\n                if (direction === 'prev') {\n                    //prevslide\n                    currentSlideItem.addClass('lg-prev-slide');\n                    previousSlideItem.addClass('lg-next-slide');\n                } else {\n                    // next slide\n                    currentSlideItem.addClass('lg-next-slide');\n                    previousSlideItem.addClass('lg-prev-slide');\n                }\n\n                // give 50 ms for browser to add/remove class\n                setTimeout(() => {\n                    this.outer.find('.lg-item').removeClass('lg-current');\n\n                    currentSlideItem.addClass('lg-current');\n\n                    // reset all transitions\n                    this.outer.removeClass('lg-no-trans');\n                }, 50);\n            },\n            this.lGalleryOn ? this.settings.slideDelay : 0,\n        );\n    }\n\n    /**\n     * Goto a specific slide.\n     * @param {Number} index - index of the slide\n     * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\n     * @param {Boolean} fromThumb - true if slide function called via thumbnail click\n     * @param {String} direction - Direction of the slide(next/prev)\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  // to go to 3rd slide\n     *  plugin.slide(2);\n     *\n     */\n    slide(\n        index: number,\n        fromTouch?: boolean,\n        fromThumb?: boolean,\n        direction?: SlideDirection | false,\n    ): void {\n        const prevIndex = this.getPreviousSlideIndex();\n        this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\n\n        // Prevent multiple call, Required for hsh plugin\n        if (this.lGalleryOn && prevIndex === index) {\n            return;\n        }\n\n        const numberOfGalleryItems = this.galleryItems.length;\n\n        if (!this.lgBusy) {\n            if (this.settings.counter) {\n                this.updateCurrentCounter(index);\n            }\n\n            const currentSlideItem = this.getSlideItem(index);\n            const previousSlideItem = this.getSlideItem(prevIndex);\n\n            const currentGalleryItem = this.galleryItems[index];\n            const videoInfo = currentGalleryItem.__slideVideoInfo;\n\n            this.outer.attr(\n                'data-lg-slide-type',\n                this.getSlideType(currentGalleryItem),\n            );\n            this.setDownloadValue(index);\n\n            if (videoInfo) {\n                const { top, bottom } = this.mediaContainerPosition;\n                const videoSize = utils.getSize(\n                    this.items[index],\n                    this.outer,\n                    top + bottom,\n                    videoInfo && this.settings.videoMaxSize,\n                );\n                this.resizeVideoSlide(index, videoSize);\n            }\n\n            this.LGel.trigger<BeforeSlideDetail>(lGEvents.beforeSlide, {\n                prevIndex,\n                index,\n                fromTouch: !!fromTouch,\n                fromThumb: !!fromThumb,\n            });\n\n            this.lgBusy = true;\n\n            clearTimeout(this.hideBarTimeout);\n\n            this.arrowDisable(index);\n\n            if (!direction) {\n                if (index < prevIndex) {\n                    direction = 'prev';\n                } else if (index > prevIndex) {\n                    direction = 'next';\n                }\n            }\n\n            if (!fromTouch) {\n                this.makeSlideAnimation(\n                    direction as SlideDirection,\n                    currentSlideItem,\n                    previousSlideItem,\n                );\n            } else {\n                this.outer\n                    .find('.lg-item')\n                    .removeClass('lg-prev-slide lg-current lg-next-slide');\n                let touchPrev;\n                let touchNext;\n                if (numberOfGalleryItems > 2) {\n                    touchPrev = index - 1;\n                    touchNext = index + 1;\n\n                    if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\n                        // next slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    } else if (\n                        index === numberOfGalleryItems - 1 &&\n                        prevIndex === 0\n                    ) {\n                        // prev slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    }\n                } else {\n                    touchPrev = 0;\n                    touchNext = 1;\n                }\n\n                if (direction === 'prev') {\n                    this.getSlideItem(touchNext).addClass('lg-next-slide');\n                } else {\n                    this.getSlideItem(touchPrev).addClass('lg-prev-slide');\n                }\n\n                currentSlideItem.addClass('lg-current');\n            }\n\n            // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\n            if (!this.lGalleryOn) {\n                this.loadContent(index, true);\n            } else {\n                setTimeout(() => {\n                    this.loadContent(index, true);\n                    // Add title if this.settings.appendSubHtmlTo === lg-sub-html\n                    if (this.settings.appendSubHtmlTo !== '.lg-item') {\n                        this.addHtml(index);\n                    }\n                }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));\n            }\n\n            setTimeout(() => {\n                this.lgBusy = false;\n                previousSlideItem.removeClass('lg-slide-progress');\n                this.LGel.trigger(lGEvents.afterSlide, {\n                    prevIndex: prevIndex,\n                    index,\n                    fromTouch,\n                    fromThumb,\n                });\n            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\n        }\n\n        this.index = index;\n    }\n\n    updateCurrentCounter(index: number): void {\n        this.getElementById('lg-counter-current').html(index + 1 + '');\n    }\n\n    updateCounterTotal(): void {\n        this.getElementById('lg-counter-all').html(\n            this.galleryItems.length + '',\n        );\n    }\n\n    getSlideType(item: GalleryItem): 'video' | 'iframe' | 'image' {\n        if (item.__slideVideoInfo) {\n            return 'video';\n        } else if (item.iframe) {\n            return 'iframe';\n        } else {\n            return 'image';\n        }\n    }\n\n    touchMove(startCoords: Coords, endCoords: Coords, e?: TouchEvent): void {\n        const distanceX = endCoords.pageX - startCoords.pageX;\n        const distanceY = endCoords.pageY - startCoords.pageY;\n        let allowSwipe = false;\n\n        if (this.swipeDirection) {\n            allowSwipe = true;\n        } else {\n            if (Math.abs(distanceX) > 15) {\n                this.swipeDirection = 'horizontal';\n                allowSwipe = true;\n            } else if (Math.abs(distanceY) > 15) {\n                this.swipeDirection = 'vertical';\n                allowSwipe = true;\n            }\n        }\n\n        if (!allowSwipe) {\n            return;\n        }\n\n        const $currentSlide = this.getSlideItem(this.index);\n\n        if (this.swipeDirection === 'horizontal') {\n            e?.preventDefault();\n            // reset opacity and transition duration\n            this.outer.addClass('lg-dragging');\n\n            // move current slide\n            this.setTranslate($currentSlide, distanceX, 0);\n\n            // move next and prev slide with current slide\n            const width = $currentSlide.get().offsetWidth;\n            const slideWidthAmount = (width * 15) / 100;\n            const gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);\n            this.setTranslate(\n                this.outer.find('.lg-prev-slide').first(),\n                -width + distanceX - gutter,\n                0,\n            );\n\n            this.setTranslate(\n                this.outer.find('.lg-next-slide').first(),\n                width + distanceX + gutter,\n                0,\n            );\n        } else if (this.swipeDirection === 'vertical') {\n            if (this.settings.swipeToClose) {\n                e?.preventDefault();\n                this.$container.addClass('lg-dragging-vertical');\n\n                const opacity = 1 - Math.abs(distanceY) / window.innerHeight;\n                this.$backdrop.css('opacity', opacity);\n\n                const scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\n                this.setTranslate($currentSlide, 0, distanceY, scale, scale);\n                if (Math.abs(distanceY) > 100) {\n                    this.outer\n                        .addClass('lg-hide-items')\n                        .removeClass('lg-components-open');\n                }\n            }\n        }\n    }\n\n    touchEnd(endCoords: Coords, startCoords: Coords, event: TouchEvent): void {\n        let distance;\n\n        // keep slide animation for any mode while dragg/swipe\n        if (this.settings.mode !== 'lg-slide') {\n            this.outer.addClass('lg-slide');\n        }\n\n        // set transition duration\n        setTimeout(() => {\n            this.$container.removeClass('lg-dragging-vertical');\n            this.outer\n                .removeClass('lg-dragging lg-hide-items')\n                .addClass('lg-components-open');\n\n            let triggerClick = true;\n\n            if (this.swipeDirection === 'horizontal') {\n                distance = endCoords.pageX - startCoords.pageX;\n                const distanceAbs = Math.abs(\n                    endCoords.pageX - startCoords.pageX,\n                );\n                if (\n                    distance < 0 &&\n                    distanceAbs > this.settings.swipeThreshold\n                ) {\n                    this.goToNextSlide(true);\n                    triggerClick = false;\n                } else if (\n                    distance > 0 &&\n                    distanceAbs > this.settings.swipeThreshold\n                ) {\n                    this.goToPrevSlide(true);\n                    triggerClick = false;\n                }\n            } else if (this.swipeDirection === 'vertical') {\n                distance = Math.abs(endCoords.pageY - startCoords.pageY);\n                if (\n                    this.settings.closable &&\n                    this.settings.swipeToClose &&\n                    distance > 100\n                ) {\n                    this.closeGallery();\n                    return;\n                } else {\n                    this.$backdrop.css('opacity', 1);\n                }\n            }\n            this.outer.find('.lg-item').removeAttr('style');\n\n            if (\n                triggerClick &&\n                Math.abs(endCoords.pageX - startCoords.pageX) < 5\n            ) {\n                // Trigger click if distance is less than 5 pix\n                const target = $LG(event.target);\n                if (this.isPosterElement(target)) {\n                    this.LGel.trigger(lGEvents.posterClick);\n                }\n            }\n\n            this.swipeDirection = undefined;\n        });\n\n        // remove slide class once drag/swipe is completed if mode is not slide\n        setTimeout(() => {\n            if (\n                !this.outer.hasClass('lg-dragging') &&\n                this.settings.mode !== 'lg-slide'\n            ) {\n                this.outer.removeClass('lg-slide');\n            }\n        }, this.settings.speed + 100);\n    }\n\n    enableSwipe(): void {\n        let startCoords: Coords = {} as Coords;\n        let endCoords: Coords = {} as Coords;\n        let isMoved = false;\n        let isSwiping = false;\n\n        if (this.settings.enableSwipe) {\n            this.$inner.on('touchstart.lg', (e) => {\n                this.dragOrSwipeEnabled = true;\n                const $item = this.getSlideItem(this.index);\n                if (\n                    ($LG(e.target).hasClass('lg-item') ||\n                        $item.get().contains(e.target)) &&\n                    !this.outer.hasClass('lg-zoomed') &&\n                    !this.lgBusy &&\n                    e.touches.length === 1\n                ) {\n                    isSwiping = true;\n                    this.touchAction = 'swipe';\n                    this.manageSwipeClass();\n                    startCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY,\n                    };\n                }\n            });\n\n            this.$inner.on('touchmove.lg', (e) => {\n                if (\n                    isSwiping &&\n                    this.touchAction === 'swipe' &&\n                    e.touches.length === 1\n                ) {\n                    endCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY,\n                    };\n                    this.touchMove(startCoords, endCoords, e);\n                    isMoved = true;\n                }\n            });\n\n            this.$inner.on('touchend.lg', (event: TouchEvent) => {\n                if (this.touchAction === 'swipe') {\n                    if (isMoved) {\n                        isMoved = false;\n                        this.touchEnd(endCoords, startCoords, event);\n                    } else if (isSwiping) {\n                        const target = $LG(event.target);\n                        if (this.isPosterElement(target)) {\n                            this.LGel.trigger(lGEvents.posterClick);\n                        }\n                    }\n                    this.touchAction = undefined;\n                    isSwiping = false;\n                }\n            });\n        }\n    }\n\n    enableDrag(): void {\n        let startCoords: Coords = {} as Coords;\n        let endCoords: Coords = {} as Coords;\n        let isDraging = false;\n        let isMoved = false;\n        if (this.settings.enableDrag) {\n            this.outer.on('mousedown.lg', (e) => {\n                this.dragOrSwipeEnabled = true;\n                const $item = this.getSlideItem(this.index);\n                if (\n                    $LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target)\n                ) {\n                    if (!this.outer.hasClass('lg-zoomed') && !this.lgBusy) {\n                        e.preventDefault();\n                        if (!this.lgBusy) {\n                            this.manageSwipeClass();\n                            startCoords = {\n                                pageX: e.pageX,\n                                pageY: e.pageY,\n                            };\n                            isDraging = true;\n\n                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                            this.outer.get().scrollLeft += 1;\n                            this.outer.get().scrollLeft -= 1;\n\n                            // *\n\n                            this.outer\n                                .removeClass('lg-grab')\n                                .addClass('lg-grabbing');\n\n                            this.LGel.trigger(lGEvents.dragStart);\n                        }\n                    }\n                }\n            });\n\n            $LG(window).on(`mousemove.lg.global${this.lgId}`, (e) => {\n                if (isDraging && this.lgOpened) {\n                    isMoved = true;\n                    endCoords = {\n                        pageX: e.pageX,\n                        pageY: e.pageY,\n                    };\n                    this.touchMove(startCoords, endCoords);\n                    this.LGel.trigger(lGEvents.dragMove);\n                }\n            });\n\n            $LG(window).on(`mouseup.lg.global${this.lgId}`, (event) => {\n                if (!this.lgOpened) {\n                    return;\n                }\n                const target = $LG(event.target);\n                if (isMoved) {\n                    isMoved = false;\n                    this.touchEnd(endCoords, startCoords, event);\n                    this.LGel.trigger(lGEvents.dragEnd);\n                } else if (this.isPosterElement(target)) {\n                    this.LGel.trigger(lGEvents.posterClick);\n                }\n\n                // Prevent execution on click\n                if (isDraging) {\n                    isDraging = false;\n                    this.outer.removeClass('lg-grabbing').addClass('lg-grab');\n                }\n            });\n        }\n    }\n\n    triggerPosterClick(): void {\n        this.$inner.on('click.lg', (event) => {\n            if (\n                !this.dragOrSwipeEnabled &&\n                this.isPosterElement($LG(event.target))\n            ) {\n                this.LGel.trigger(lGEvents.posterClick);\n            }\n        });\n    }\n\n    manageSwipeClass(): void {\n        let _touchNext = this.index + 1;\n        let _touchPrev = this.index - 1;\n        if (this.settings.loop && this.galleryItems.length > 2) {\n            if (this.index === 0) {\n                _touchPrev = this.galleryItems.length - 1;\n            } else if (this.index === this.galleryItems.length - 1) {\n                _touchNext = 0;\n            }\n        }\n\n        this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');\n        if (_touchPrev > -1) {\n            this.getSlideItem(_touchPrev).addClass('lg-prev-slide');\n        }\n\n        this.getSlideItem(_touchNext).addClass('lg-next-slide');\n    }\n\n    /**\n     * Go to next slide\n     * @param {Boolean} fromTouch - true if slide function called via touch event\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.goToNextSlide();\n     * @see <a href=\"/demos/methods/\">Demo</a>\n     */\n    goToNextSlide(fromTouch?: boolean): void {\n        let _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) {\n            _loop = false;\n        }\n\n        if (!this.lgBusy) {\n            if (this.index + 1 < this.galleryItems.length) {\n                this.index++;\n                this.LGel.trigger(lGEvents.beforeNextSlide, {\n                    index: this.index,\n                });\n                this.slide(this.index, !!fromTouch, false, 'next');\n            } else {\n                if (_loop) {\n                    this.index = 0;\n                    this.LGel.trigger(lGEvents.beforeNextSlide, {\n                        index: this.index,\n                    });\n                    this.slide(this.index, !!fromTouch, false, 'next');\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass('lg-right-end');\n                    setTimeout(() => {\n                        this.outer.removeClass('lg-right-end');\n                    }, 400);\n                }\n            }\n        }\n    }\n\n    /**\n     * Go to previous slides\n     * @param {Boolean} fromTouch - true if slide function called via touch event\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery({});\n     *  plugin.goToPrevSlide();\n     * @see <a href=\"/demos/methods/\">Demo</a>\n     *\n     */\n    goToPrevSlide(fromTouch?: boolean): void {\n        let _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) {\n            _loop = false;\n        }\n\n        if (!this.lgBusy) {\n            if (this.index > 0) {\n                this.index--;\n                this.LGel.trigger(lGEvents.beforePrevSlide, {\n                    index: this.index,\n                    fromTouch,\n                });\n                this.slide(this.index, !!fromTouch, false, 'prev');\n            } else {\n                if (_loop) {\n                    this.index = this.galleryItems.length - 1;\n                    this.LGel.trigger(lGEvents.beforePrevSlide, {\n                        index: this.index,\n                        fromTouch,\n                    });\n                    this.slide(this.index, !!fromTouch, false, 'prev');\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass('lg-left-end');\n                    setTimeout(() => {\n                        this.outer.removeClass('lg-left-end');\n                    }, 400);\n                }\n            }\n        }\n    }\n\n    keyPress(): void {\n        $LG(window).on(`keydown.lg.global${this.lgId}`, (e) => {\n            if (\n                this.lgOpened &&\n                this.settings.escKey === true &&\n                e.keyCode === 27\n            ) {\n                e.preventDefault();\n                if (\n                    this.settings.allowMediaOverlap &&\n                    this.outer.hasClass('lg-can-toggle') &&\n                    this.outer.hasClass('lg-components-open')\n                ) {\n                    this.outer.removeClass('lg-components-open');\n                } else {\n                    this.closeGallery();\n                }\n            }\n            if (this.lgOpened && this.galleryItems.length > 1) {\n                if (e.keyCode === 37) {\n                    e.preventDefault();\n                    this.goToPrevSlide();\n                }\n\n                if (e.keyCode === 39) {\n                    e.preventDefault();\n                    this.goToNextSlide();\n                }\n            }\n        });\n    }\n\n    arrow(): void {\n        this.getElementById('lg-prev').on('click.lg', () => {\n            this.goToPrevSlide();\n        });\n        this.getElementById('lg-next').on('click.lg', () => {\n            this.goToNextSlide();\n        });\n    }\n\n    arrowDisable(index: number): void {\n        // Disable arrows if settings.hideControlOnEnd is true\n        if (!this.settings.loop && this.settings.hideControlOnEnd) {\n            const $prev = this.getElementById('lg-prev');\n            const $next = this.getElementById('lg-next');\n            if (index + 1 === this.galleryItems.length) {\n                $next.attr('disabled', 'disabled').addClass('disabled');\n            } else {\n                $next.removeAttr('disabled').removeClass('disabled');\n            }\n\n            if (index === 0) {\n                $prev.attr('disabled', 'disabled').addClass('disabled');\n            } else {\n                $prev.removeAttr('disabled').removeClass('disabled');\n            }\n        }\n    }\n\n    setTranslate(\n        $el: lgQuery,\n        xValue: number,\n        yValue: number,\n        scaleX = 1,\n        scaleY = 1,\n    ): void {\n        $el.css(\n            'transform',\n            'translate3d(' +\n                xValue +\n                'px, ' +\n                yValue +\n                'px, 0px) scale3d(' +\n                scaleX +\n                ', ' +\n                scaleY +\n                ', 1)',\n        );\n    }\n\n    mousewheel(): void {\n        let lastCall = 0;\n        this.outer.on('wheel.lg', (e) => {\n            if (!e.deltaY || this.galleryItems.length < 2) {\n                return;\n            }\n            e.preventDefault();\n            const now = new Date().getTime();\n            if (now - lastCall < 1000) {\n                return;\n            }\n            lastCall = now;\n            if (e.deltaY > 0) {\n                this.goToNextSlide();\n            } else if (e.deltaY < 0) {\n                this.goToPrevSlide();\n            }\n        });\n    }\n\n    isSlideElement(target: lgQuery): boolean {\n        return (\n            target.hasClass('lg-outer') ||\n            target.hasClass('lg-item') ||\n            target.hasClass('lg-img-wrap')\n        );\n    }\n\n    isPosterElement(target: lgQuery): boolean {\n        const playButton = this.getSlideItem(this.index)\n            .find('.lg-video-play-button')\n            .get();\n        return (\n            target.hasClass('lg-video-poster') ||\n            target.hasClass('lg-video-play-button') ||\n            (playButton && playButton.contains(target.get()))\n        );\n    }\n\n    /**\n     * Maximize minimize inline gallery.\n     * @category lGPublicMethods\n     */\n    toggleMaximize(): void {\n        this.getElementById('lg-maximize').on('click.lg', () => {\n            this.$container.toggleClass('lg-inline');\n            this.refreshOnResize();\n        });\n    }\n\n    invalidateItems(): void {\n        for (let index = 0; index < this.items.length; index++) {\n            const element = this.items[index];\n            const $element = $LG(element);\n            $element.off(`click.lgcustom-item-${$element.attr('data-lg-id')}`);\n        }\n    }\n\n    trapFocus(): void {\n        this.$container.get().focus({\n            preventScroll: true,\n        });\n        $LG(window).on(`keydown.lg.global${this.lgId}`, (e) => {\n            if (!this.lgOpened) {\n                return;\n            }\n\n            const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n            if (!isTabPressed) {\n                return;\n            }\n            const focusableEls = utils.getFocusableElements(\n                this.$container.get(),\n            );\n            const firstFocusableEl = focusableEls[0];\n            const lastFocusableEl = focusableEls[focusableEls.length - 1];\n\n            if (e.shiftKey) {\n                if (document.activeElement === firstFocusableEl) {\n                    (lastFocusableEl as HTMLElement).focus();\n                    e.preventDefault();\n                }\n            } else {\n                if (document.activeElement === lastFocusableEl) {\n                    (firstFocusableEl as HTMLElement).focus();\n                    e.preventDefault();\n                }\n            }\n        });\n    }\n\n    manageCloseGallery(): void {\n        if (!this.settings.closable) return;\n        let mousedown = false;\n        this.getElementById('lg-close').on('click.lg', () => {\n            this.closeGallery();\n        });\n\n        if (this.settings.closeOnTap) {\n            // If you drag the slide and release outside gallery gets close on chrome\n            // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\n            this.outer.on('mousedown.lg', (e) => {\n                const target = $LG(e.target);\n                if (this.isSlideElement(target)) {\n                    mousedown = true;\n                } else {\n                    mousedown = false;\n                }\n            });\n\n            this.outer.on('mousemove.lg', () => {\n                mousedown = false;\n            });\n\n            this.outer.on('mouseup.lg', (e) => {\n                const target = $LG(e.target);\n                if (this.isSlideElement(target) && mousedown) {\n                    if (!this.outer.hasClass('lg-dragging')) {\n                        this.closeGallery();\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Close lightGallery if it is opened.\n     *\n     * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\n     * @return returns the estimated time to close gallery completely including the close animation duration\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.closeGallery();\n     *\n     */\n    closeGallery(force?: boolean): number {\n        if (!this.lgOpened || (!this.settings.closable && !force)) {\n            return 0;\n        }\n        this.LGel.trigger(lGEvents.beforeClose);\n\n        if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) {\n            $LG(window).scrollTop(this.prevScrollTop);\n        }\n\n        const currentItem = this.items[this.index];\n        let transform: string | undefined;\n        if (this.zoomFromOrigin && currentItem) {\n            const { top, bottom } = this.mediaContainerPosition;\n            const { __slideVideoInfo, poster } = this.galleryItems[this.index];\n            const imageSize = utils.getSize(\n                currentItem,\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && poster && this.settings.videoMaxSize,\n            );\n            transform = utils.getTransform(\n                currentItem,\n                this.outer,\n                top,\n                bottom,\n                imageSize,\n            );\n        }\n        if (this.zoomFromOrigin && transform) {\n            this.outer.addClass('lg-closing lg-zoom-from-image');\n            this.getSlideItem(this.index)\n                .addClass('lg-start-end-progress')\n                .css(\n                    'transition-duration',\n                    this.settings.startAnimationDuration + 'ms',\n                )\n                .css('transform', transform);\n        } else {\n            this.outer.addClass('lg-hide-items');\n            // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\n            // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\n            this.outer.removeClass('lg-zoom-from-image');\n        }\n\n        // Unbind all events added by lightGallery\n        // @todo\n        //this.$el.off('.lg.tm');\n\n        this.destroyModules();\n\n        this.lGalleryOn = false;\n        this.isDummyImageRemoved = false;\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n\n        clearTimeout(this.hideBarTimeout);\n        this.hideBarTimeout = false;\n        $LG('html').removeClass('lg-on');\n\n        this.outer.removeClass('lg-visible lg-components-open');\n\n        // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\n        this.$backdrop.removeClass('in').css('opacity', 0);\n\n        const removeTimeout =\n            this.zoomFromOrigin && transform\n                ? Math.max(\n                      this.settings.startAnimationDuration,\n                      this.settings.backdropDuration,\n                  )\n                : this.settings.backdropDuration;\n        this.$container.removeClass('lg-show-in');\n\n        // Once the closign animation is completed and gallery is invisible\n        setTimeout(() => {\n            if (this.zoomFromOrigin && transform) {\n                this.outer.removeClass('lg-zoom-from-image');\n            }\n            this.$container.removeClass('lg-show');\n\n            // Reset scrollbar\n            this.resetScrollBar();\n\n            // Need to remove inline opacity as it is used in the stylesheet as well\n            this.$backdrop\n                .removeAttr('style')\n                .css(\n                    'transition-duration',\n                    this.settings.backdropDuration + 'ms',\n                );\n\n            this.outer.removeClass(`lg-closing ${this.settings.startClass}`);\n\n            this.getSlideItem(this.index).removeClass('lg-start-end-progress');\n            this.$inner.empty();\n            if (this.lgOpened) {\n                this.LGel.trigger(lGEvents.afterClose, {\n                    instance: this,\n                });\n            }\n            if (this.$container.get()) {\n                this.$container.get().blur();\n            }\n\n            this.lgOpened = false;\n        }, removeTimeout + 100);\n        return removeTimeout + 100;\n    }\n\n    initModules(): void {\n        this.plugins.forEach((module) => {\n            try {\n                module.init();\n            } catch (err) {\n                console.warn(\n                    `lightGallery:- make sure lightGallery module is properly initiated`,\n                );\n            }\n        });\n    }\n\n    destroyModules(destroy?: true): void {\n        this.plugins.forEach((module) => {\n            try {\n                if (destroy) {\n                    module.destroy();\n                } else {\n                    module.closeGallery && module.closeGallery();\n                }\n            } catch (err) {\n                console.warn(\n                    `lightGallery:- make sure lightGallery module is properly destroyed`,\n                );\n            }\n        });\n    }\n\n    /**\n     * Refresh lightGallery with new set of children.\n     *\n     * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\n     *\n     * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\n     * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  // Delete or add children, then call\n     *  plugin.refresh();\n     *\n     */\n    refresh(galleryItems?: GalleryItem[]): void {\n        if (!this.settings.dynamic) {\n            this.invalidateItems();\n        }\n        if (galleryItems) {\n            this.galleryItems = galleryItems;\n        } else {\n            this.galleryItems = this.getItems();\n        }\n        this.updateControls();\n        this.openGalleryOnItemClick();\n        this.LGel.trigger(lGEvents.updateSlides);\n    }\n\n    updateControls(): void {\n        this.addSlideVideoInfo(this.galleryItems);\n        this.updateCounterTotal();\n        this.manageSingleSlideClassName();\n    }\n\n    private destroyGallery(): void {\n        this.destroyModules(true);\n        if (!this.settings.dynamic) {\n            this.invalidateItems();\n        }\n        $LG(window).off(`.lg.global${this.lgId}`);\n        this.LGel.off('.lg');\n        this.$container.remove();\n    }\n\n    /**\n     * Destroy lightGallery.\n     * Destroy lightGallery and its plugin instances completely\n     *\n     * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.\n     * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.\n     * You can use refresh method most of the times.\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.destroy();\n     *\n     */\n    destroy(): number {\n        const closeTimeout = this.closeGallery(true);\n        if (closeTimeout) {\n            setTimeout(this.destroyGallery.bind(this), closeTimeout);\n        } else {\n            this.destroyGallery();\n        }\n        return closeTimeout;\n    }\n}\n","import { LightGallerySettings } from './lg-settings';\nimport { LightGallery } from './lightgallery';\n\nfunction lightGallery(\n    el: HTMLElement,\n    options?: LightGallerySettings,\n): LightGallery {\n    return new LightGallery(el, options);\n}\nexport default lightGallery;\n","/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar thumbnailsSettings = {\r\n    thumbnail: true,\r\n    animateThumb: true,\r\n    currentPagerPosition: 'middle',\r\n    alignThumbnails: 'middle',\r\n    thumbWidth: 100,\r\n    thumbHeight: '80px',\r\n    thumbMargin: 5,\r\n    appendThumbnailsTo: '.lg-components',\r\n    toggleThumb: false,\r\n    enableThumbDrag: true,\r\n    enableThumbSwipe: true,\r\n    thumbnailSwipeThreshold: 10,\r\n    loadYouTubeThumbnail: true,\r\n    youTubeThumbSize: 1,\r\n    thumbnailPluginStrings: {\r\n        toggleThumbnails: 'Toggle thumbnails',\r\n    },\r\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n    autoplay: 'lgAutoplay',\r\n    autoplayStart: 'lgAutoplayStart',\r\n    autoplayStop: 'lgAutoplayStop',\r\n};\n\nvar Thumbnail = /** @class */ (function () {\r\n    function Thumbnail(instance, $LG) {\r\n        this.thumbOuterWidth = 0;\r\n        this.thumbTotalWidth = 0;\r\n        this.translateX = 0;\r\n        this.thumbClickable = false;\r\n        // get lightGallery core plugin instance\r\n        this.core = instance;\r\n        this.$LG = $LG;\r\n        return this;\r\n    }\r\n    Thumbnail.prototype.init = function () {\r\n        // extend module default settings with lightGallery core settings\r\n        this.settings = __assign(__assign({}, thumbnailsSettings), this.core.settings);\r\n        this.thumbOuterWidth = 0;\r\n        this.thumbTotalWidth =\r\n            this.core.galleryItems.length *\r\n                (this.settings.thumbWidth + this.settings.thumbMargin);\r\n        // Thumbnail animation value\r\n        this.translateX = 0;\r\n        this.setAnimateThumbStyles();\r\n        if (!this.core.settings.allowMediaOverlap) {\r\n            this.settings.toggleThumb = false;\r\n        }\r\n        if (this.settings.thumbnail) {\r\n            this.build();\r\n            if (this.settings.animateThumb) {\r\n                if (this.settings.enableThumbDrag) {\r\n                    this.enableThumbDrag();\r\n                }\r\n                if (this.settings.enableThumbSwipe) {\r\n                    this.enableThumbSwipe();\r\n                }\r\n                this.thumbClickable = false;\r\n            }\r\n            else {\r\n                this.thumbClickable = true;\r\n            }\r\n            this.toggleThumbBar();\r\n            this.thumbKeyPress();\r\n        }\r\n    };\r\n    Thumbnail.prototype.build = function () {\r\n        var _this = this;\r\n        this.setThumbMarkup();\r\n        this.manageActiveClassOnSlideChange();\r\n        this.$lgThumb.first().on('click.lg touchend.lg', function (e) {\r\n            var $target = _this.$LG(e.target);\r\n            if (!$target.hasAttribute('data-lg-item-id')) {\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                // In IE9 and bellow touch does not support\r\n                // Go to slide if browser does not support css transitions\r\n                if (_this.thumbClickable && !_this.core.lgBusy) {\r\n                    var index = parseInt($target.attr('data-lg-item-id'));\r\n                    _this.core.slide(index, false, true, false);\r\n                }\r\n            }, 50);\r\n        });\r\n        this.core.LGel.on(lGEvents.beforeSlide + \".thumb\", function (event) {\r\n            var index = event.detail.index;\r\n            _this.animateThumb(index);\r\n        });\r\n        this.core.LGel.on(lGEvents.beforeOpen + \".thumb\", function () {\r\n            _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\r\n        });\r\n        this.core.LGel.on(lGEvents.updateSlides + \".thumb\", function () {\r\n            _this.rebuildThumbnails();\r\n        });\r\n        this.core.LGel.on(lGEvents.containerResize + \".thumb\", function () {\r\n            if (!_this.core.lgOpened)\r\n                return;\r\n            setTimeout(function () {\r\n                _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\r\n                _this.animateThumb(_this.core.index);\r\n                _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\r\n            }, 50);\r\n        });\r\n    };\r\n    Thumbnail.prototype.setThumbMarkup = function () {\r\n        var thumbOuterClassNames = 'lg-thumb-outer ';\r\n        if (this.settings.alignThumbnails) {\r\n            thumbOuterClassNames += \"lg-thumb-align-\" + this.settings.alignThumbnails;\r\n        }\r\n        var html = \"<div class=\\\"\" + thumbOuterClassNames + \"\\\">\\n        <div class=\\\"lg-thumb lg-group\\\">\\n        </div>\\n        </div>\";\r\n        this.core.outer.addClass('lg-has-thumb');\r\n        if (this.settings.appendThumbnailsTo === '.lg-components') {\r\n            this.core.$lgComponents.append(html);\r\n        }\r\n        else {\r\n            this.core.outer.append(html);\r\n        }\r\n        this.$thumbOuter = this.core.outer.find('.lg-thumb-outer').first();\r\n        this.$lgThumb = this.core.outer.find('.lg-thumb').first();\r\n        if (this.settings.animateThumb) {\r\n            this.core.outer\r\n                .find('.lg-thumb')\r\n                .css('transition-duration', this.core.settings.speed + 'ms')\r\n                .css('width', this.thumbTotalWidth + 'px')\r\n                .css('position', 'relative');\r\n        }\r\n        this.setThumbItemHtml(this.core.galleryItems);\r\n    };\r\n    Thumbnail.prototype.enableThumbDrag = function () {\r\n        var _this = this;\r\n        var thumbDragUtils = {\r\n            cords: {\r\n                startX: 0,\r\n                endX: 0,\r\n            },\r\n            isMoved: false,\r\n            newTranslateX: 0,\r\n            startTime: new Date(),\r\n            endTime: new Date(),\r\n            touchMoveTime: 0,\r\n        };\r\n        var isDragging = false;\r\n        this.$thumbOuter.addClass('lg-grab');\r\n        this.core.outer\r\n            .find('.lg-thumb')\r\n            .first()\r\n            .on('mousedown.lg.thumb', function (e) {\r\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\r\n                // execute only on .lg-object\r\n                e.preventDefault();\r\n                thumbDragUtils.cords.startX = e.pageX;\r\n                thumbDragUtils.startTime = new Date();\r\n                _this.thumbClickable = false;\r\n                isDragging = true;\r\n                // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                _this.core.outer.get().scrollLeft += 1;\r\n                _this.core.outer.get().scrollLeft -= 1;\r\n                // *\r\n                _this.$thumbOuter\r\n                    .removeClass('lg-grab')\r\n                    .addClass('lg-grabbing');\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mousemove.lg.thumb.global\" + this.core.lgId, function (e) {\r\n            if (!_this.core.lgOpened)\r\n                return;\r\n            if (isDragging) {\r\n                thumbDragUtils.cords.endX = e.pageX;\r\n                thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mouseup.lg.thumb.global\" + this.core.lgId, function () {\r\n            if (!_this.core.lgOpened)\r\n                return;\r\n            if (thumbDragUtils.isMoved) {\r\n                thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\r\n            }\r\n            else {\r\n                _this.thumbClickable = true;\r\n            }\r\n            if (isDragging) {\r\n                isDragging = false;\r\n                _this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');\r\n            }\r\n        });\r\n    };\r\n    Thumbnail.prototype.enableThumbSwipe = function () {\r\n        var _this = this;\r\n        var thumbDragUtils = {\r\n            cords: {\r\n                startX: 0,\r\n                endX: 0,\r\n            },\r\n            isMoved: false,\r\n            newTranslateX: 0,\r\n            startTime: new Date(),\r\n            endTime: new Date(),\r\n            touchMoveTime: 0,\r\n        };\r\n        this.$lgThumb.on('touchstart.lg', function (e) {\r\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\r\n                e.preventDefault();\r\n                thumbDragUtils.cords.startX = e.targetTouches[0].pageX;\r\n                _this.thumbClickable = false;\r\n                thumbDragUtils.startTime = new Date();\r\n            }\r\n        });\r\n        this.$lgThumb.on('touchmove.lg', function (e) {\r\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\r\n                e.preventDefault();\r\n                thumbDragUtils.cords.endX = e.targetTouches[0].pageX;\r\n                thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\r\n            }\r\n        });\r\n        this.$lgThumb.on('touchend.lg', function () {\r\n            if (thumbDragUtils.isMoved) {\r\n                thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\r\n            }\r\n            else {\r\n                _this.thumbClickable = true;\r\n            }\r\n        });\r\n    };\r\n    // Rebuild thumbnails\r\n    Thumbnail.prototype.rebuildThumbnails = function () {\r\n        var _this = this;\r\n        // Remove transitions\r\n        this.$thumbOuter.addClass('lg-rebuilding-thumbnails');\r\n        setTimeout(function () {\r\n            _this.thumbTotalWidth =\r\n                _this.core.galleryItems.length *\r\n                    (_this.settings.thumbWidth + _this.settings.thumbMargin);\r\n            _this.$lgThumb.css('width', _this.thumbTotalWidth + 'px');\r\n            _this.$lgThumb.empty();\r\n            _this.setThumbItemHtml(_this.core.galleryItems);\r\n            _this.animateThumb(_this.core.index);\r\n        }, 50);\r\n        setTimeout(function () {\r\n            _this.$thumbOuter.removeClass('lg-rebuilding-thumbnails');\r\n        }, 200);\r\n    };\r\n    // @ts-check\r\n    Thumbnail.prototype.setTranslate = function (value) {\r\n        this.$lgThumb.css('transform', 'translate3d(-' + value + 'px, 0px, 0px)');\r\n    };\r\n    Thumbnail.prototype.getPossibleTransformX = function (left) {\r\n        if (left > this.thumbTotalWidth - this.thumbOuterWidth) {\r\n            left = this.thumbTotalWidth - this.thumbOuterWidth;\r\n        }\r\n        if (left < 0) {\r\n            left = 0;\r\n        }\r\n        return left;\r\n    };\r\n    Thumbnail.prototype.animateThumb = function (index) {\r\n        this.$lgThumb.css('transition-duration', this.core.settings.speed + 'ms');\r\n        if (this.settings.animateThumb) {\r\n            var position = 0;\r\n            switch (this.settings.currentPagerPosition) {\r\n                case 'left':\r\n                    position = 0;\r\n                    break;\r\n                case 'middle':\r\n                    position =\r\n                        this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;\r\n                    break;\r\n                case 'right':\r\n                    position = this.thumbOuterWidth - this.settings.thumbWidth;\r\n            }\r\n            this.translateX =\r\n                (this.settings.thumbWidth + this.settings.thumbMargin) * index -\r\n                    1 -\r\n                    position;\r\n            if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) {\r\n                this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;\r\n            }\r\n            if (this.translateX < 0) {\r\n                this.translateX = 0;\r\n            }\r\n            this.setTranslate(this.translateX);\r\n        }\r\n    };\r\n    Thumbnail.prototype.onThumbTouchMove = function (thumbDragUtils) {\r\n        thumbDragUtils.newTranslateX = this.translateX;\r\n        thumbDragUtils.isMoved = true;\r\n        thumbDragUtils.touchMoveTime = new Date().valueOf();\r\n        thumbDragUtils.newTranslateX -=\r\n            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\r\n        thumbDragUtils.newTranslateX = this.getPossibleTransformX(thumbDragUtils.newTranslateX);\r\n        // move current slide\r\n        this.setTranslate(thumbDragUtils.newTranslateX);\r\n        this.$thumbOuter.addClass('lg-dragging');\r\n        return thumbDragUtils;\r\n    };\r\n    Thumbnail.prototype.onThumbTouchEnd = function (thumbDragUtils) {\r\n        thumbDragUtils.isMoved = false;\r\n        thumbDragUtils.endTime = new Date();\r\n        this.$thumbOuter.removeClass('lg-dragging');\r\n        var touchDuration = thumbDragUtils.endTime.valueOf() -\r\n            thumbDragUtils.startTime.valueOf();\r\n        var distanceXnew = thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\r\n        var speedX = Math.abs(distanceXnew) / touchDuration;\r\n        // Some magical numbers\r\n        // Can be improved\r\n        if (speedX > 0.15 &&\r\n            thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30) {\r\n            speedX += 1;\r\n            if (speedX > 2) {\r\n                speedX += 1;\r\n            }\r\n            speedX =\r\n                speedX +\r\n                    speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);\r\n            this.$lgThumb.css('transition-duration', Math.min(speedX - 1, 2) + 'settings');\r\n            distanceXnew = distanceXnew * speedX;\r\n            this.translateX = this.getPossibleTransformX(this.translateX - distanceXnew);\r\n            this.setTranslate(this.translateX);\r\n        }\r\n        else {\r\n            this.translateX = thumbDragUtils.newTranslateX;\r\n        }\r\n        if (Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) <\r\n            this.settings.thumbnailSwipeThreshold) {\r\n            this.thumbClickable = true;\r\n        }\r\n        return thumbDragUtils;\r\n    };\r\n    Thumbnail.prototype.getThumbHtml = function (thumb, index, alt) {\r\n        var slideVideoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\r\n        var thumbImg;\r\n        if (slideVideoInfo.youtube) {\r\n            if (this.settings.loadYouTubeThumbnail) {\r\n                thumbImg =\r\n                    '//img.youtube.com/vi/' +\r\n                        slideVideoInfo.youtube[1] +\r\n                        '/' +\r\n                        this.settings.youTubeThumbSize +\r\n                        '.jpg';\r\n            }\r\n            else {\r\n                thumbImg = thumb;\r\n            }\r\n        }\r\n        else {\r\n            thumbImg = thumb;\r\n        }\r\n        var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n        return \"<div data-lg-item-id=\\\"\" + index + \"\\\" class=\\\"lg-thumb-item \" + (index === this.core.index ? ' active' : '') + \"\\\"\\n        style=\\\"width:\" + this.settings.thumbWidth + \"px; height: \" + this.settings.thumbHeight + \";\\n            margin-right: \" + this.settings.thumbMargin + \"px;\\\">\\n            <img \" + altAttr + \" data-lg-item-id=\\\"\" + index + \"\\\" src=\\\"\" + thumbImg + \"\\\" />\\n        </div>\";\r\n    };\r\n    Thumbnail.prototype.getThumbItemHtml = function (items) {\r\n        var thumbList = '';\r\n        for (var i = 0; i < items.length; i++) {\r\n            thumbList += this.getThumbHtml(items[i].thumb, i, items[i].alt);\r\n        }\r\n        return thumbList;\r\n    };\r\n    Thumbnail.prototype.setThumbItemHtml = function (items) {\r\n        var thumbList = this.getThumbItemHtml(items);\r\n        this.$lgThumb.html(thumbList);\r\n    };\r\n    Thumbnail.prototype.setAnimateThumbStyles = function () {\r\n        if (this.settings.animateThumb) {\r\n            this.core.outer.addClass('lg-animate-thumb');\r\n        }\r\n    };\r\n    // Manage thumbnail active calss\r\n    Thumbnail.prototype.manageActiveClassOnSlideChange = function () {\r\n        var _this = this;\r\n        // manage active class for thumbnail\r\n        this.core.LGel.on(lGEvents.beforeSlide + \".thumb\", function (event) {\r\n            var $thumb = _this.core.outer.find('.lg-thumb-item');\r\n            var index = event.detail.index;\r\n            $thumb.removeClass('active');\r\n            $thumb.eq(index).addClass('active');\r\n        });\r\n    };\r\n    // Toggle thumbnail bar\r\n    Thumbnail.prototype.toggleThumbBar = function () {\r\n        var _this = this;\r\n        if (this.settings.toggleThumb) {\r\n            this.core.outer.addClass('lg-can-toggle');\r\n            this.core.$toolbar.append('<button type=\"button\" aria-label=\"' +\r\n                this.settings.thumbnailPluginStrings['toggleThumbnails'] +\r\n                '\" class=\"lg-toggle-thumb lg-icon\"></button>');\r\n            this.core.outer\r\n                .find('.lg-toggle-thumb')\r\n                .first()\r\n                .on('click.lg', function () {\r\n                _this.core.outer.toggleClass('lg-components-open');\r\n            });\r\n        }\r\n    };\r\n    Thumbnail.prototype.thumbKeyPress = function () {\r\n        var _this = this;\r\n        this.$LG(window).on(\"keydown.lg.thumb.global\" + this.core.lgId, function (e) {\r\n            if (!_this.core.lgOpened || !_this.settings.toggleThumb)\r\n                return;\r\n            if (e.keyCode === 38) {\r\n                e.preventDefault();\r\n                _this.core.outer.addClass('lg-components-open');\r\n            }\r\n            else if (e.keyCode === 40) {\r\n                e.preventDefault();\r\n                _this.core.outer.removeClass('lg-components-open');\r\n            }\r\n        });\r\n    };\r\n    Thumbnail.prototype.destroy = function () {\r\n        if (this.settings.thumbnail) {\r\n            this.$LG(window).off(\".lg.thumb.global\" + this.core.lgId);\r\n            this.core.LGel.off('.lg.thumb');\r\n            this.core.LGel.off('.thumb');\r\n            this.$thumbOuter.remove();\r\n            this.core.outer.removeClass('lg-has-thumb');\r\n        }\r\n    };\r\n    return Thumbnail;\r\n}());\n\nexport default Thumbnail;\n//# sourceMappingURL=lg-thumbnail.es5.js.map\n","interface ThumbnailStrings {\n    toggleThumbnails: string;\n}\n\nexport interface ThumbnailsSettings {\n    /**\n     * Enable thumbnails for the gallery\n     */\n    thumbnail: boolean;\n\n    /*\n     * Enable thumbnail animation.\n     */\n    animateThumb: boolean;\n\n    /**\n     * Position of selected thumbnail.\n     */\n    currentPagerPosition: 'left' | 'middle' | 'right';\n\n    /**\n     * Position of thumbnails when the width of all thumbnails combined is less than the gallery's width.\n     *\n     */\n    alignThumbnails: 'left' | 'middle' | 'right';\n\n    /**\n     * Width of each thumbnails.\n     */\n    thumbWidth: number;\n\n    /**\n     * Height of each thumbnails.\n     */\n    thumbHeight: string;\n\n    /**\n     * Spacing between each thumbnails\n     */\n    thumbMargin: number;\n\n    /**\n     * control where the thumbnails should be appended.\n     * By default, thumbnails are appended to '.lg-components' which has inbuilt open close transitions\n     * If you don't want initial thumbnails transitions, or want to do more customization,\n     * you can append thumbnails to the lightGalley outer div -\n     * <a href=\"/demos/thumbnails/#static-thumbnails\">Demo</a>\n     */\n    appendThumbnailsTo: '.lg-outer' | '.lg-components';\n\n    /**\n     * Enable toggle captions and thumbnails.\n     * @description not applicable if allowMediaOverlap is false\n     */\n    toggleThumb: boolean;\n\n    /**\n     * Enables desktop mouse drag support for thumbnails.\n     */\n    enableThumbDrag: boolean;\n\n    /**\n     * Enables thumbnail touch/swipe support for touch devices\n     */\n    enableThumbSwipe: boolean;\n\n    /**\n     * By setting the thumbnailSwipeThreshold (in px) you can set how far the user must swipe for the next/prev slide.\n     */\n    thumbnailSwipeThreshold: number;\n\n    /**\n     * You can automatically load thumbnails for YouTube videos from YouTube by setting loadYouTubeThumbnail true\n     */\n    loadYouTubeThumbnail: boolean;\n\n    /**\n     * You can specify the thumbnail size by setting respective number.\n     */\n    //@todo add demo\n    youTubeThumbSize: number;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    thumbnailPluginStrings: ThumbnailStrings;\n}\n\nexport const thumbnailsSettings: ThumbnailsSettings = {\n    thumbnail: true,\n\n    animateThumb: true,\n    currentPagerPosition: 'middle',\n    alignThumbnails: 'middle',\n\n    thumbWidth: 100,\n    thumbHeight: '80px',\n    thumbMargin: 5,\n\n    appendThumbnailsTo: '.lg-components',\n    toggleThumb: false,\n\n    enableThumbDrag: true,\n    enableThumbSwipe: true,\n    thumbnailSwipeThreshold: 10,\n\n    loadYouTubeThumbnail: true,\n    youTubeThumbSize: 1,\n\n    thumbnailPluginStrings: {\n        toggleThumbnails: 'Toggle thumbnails',\n    } as ThumbnailStrings,\n};\n","import {\n    ThumbnailsSettings,\n    thumbnailsSettings,\n} from './lg-thumbnail-settings';\nimport { LgQuery, lgQuery } from '../../lgQuery';\nimport { LightGallery } from '../../lightgallery';\nimport { GalleryItem } from '../../lg-utils';\nimport { lGEvents } from '../../lg-events';\n\ninterface ThumbDragUtils {\n    cords: {\n        startX: number;\n        endX: number;\n    };\n    isMoved: boolean;\n    newTranslateX: number;\n    startTime: Date;\n    endTime: Date;\n    touchMoveTime: number;\n}\ninterface ThumbnailGalleryItem extends GalleryItem {\n    thumb: string;\n}\nexport default class Thumbnail {\n    private core: LightGallery;\n    private $thumbOuter!: lgQuery;\n    private $lgThumb!: lgQuery;\n    private thumbOuterWidth = 0;\n    private thumbTotalWidth = 0;\n    private translateX = 0;\n    private thumbClickable = false;\n    private settings!: ThumbnailsSettings;\n    private $LG!: LgQuery;\n    constructor(instance: LightGallery, $LG: LgQuery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n\n        return this;\n    }\n\n    init(): void {\n        // extend module default settings with lightGallery core settings\n        this.settings = {\n            ...thumbnailsSettings,\n            ...this.core.settings,\n        };\n        this.thumbOuterWidth = 0;\n        this.thumbTotalWidth =\n            this.core.galleryItems.length *\n            (this.settings.thumbWidth + this.settings.thumbMargin);\n\n        // Thumbnail animation value\n        this.translateX = 0;\n\n        this.setAnimateThumbStyles();\n\n        if (!this.core.settings.allowMediaOverlap) {\n            this.settings.toggleThumb = false;\n        }\n\n        if (this.settings.thumbnail) {\n            this.build();\n            if (this.settings.animateThumb) {\n                if (this.settings.enableThumbDrag) {\n                    this.enableThumbDrag();\n                }\n\n                if (this.settings.enableThumbSwipe) {\n                    this.enableThumbSwipe();\n                }\n\n                this.thumbClickable = false;\n            } else {\n                this.thumbClickable = true;\n            }\n\n            this.toggleThumbBar();\n            this.thumbKeyPress();\n        }\n    }\n\n    build(): void {\n        this.setThumbMarkup();\n        this.manageActiveClassOnSlideChange();\n        this.$lgThumb.first().on('click.lg touchend.lg', (e: CustomEvent) => {\n            const $target = this.$LG(e.target);\n            if (!$target.hasAttribute('data-lg-item-id')) {\n                return;\n            }\n            setTimeout(() => {\n                // In IE9 and bellow touch does not support\n                // Go to slide if browser does not support css transitions\n                if (this.thumbClickable && !this.core.lgBusy) {\n                    const index = parseInt($target.attr('data-lg-item-id'));\n                    this.core.slide(index, false, true, false);\n                }\n            }, 50);\n        });\n\n        this.core.LGel.on(`${lGEvents.beforeSlide}.thumb`, (event) => {\n            const { index } = event.detail;\n            this.animateThumb(index);\n        });\n        this.core.LGel.on(`${lGEvents.beforeOpen}.thumb`, () => {\n            this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n        });\n\n        this.core.LGel.on(`${lGEvents.updateSlides}.thumb`, () => {\n            this.rebuildThumbnails();\n        });\n        this.core.LGel.on(`${lGEvents.containerResize}.thumb`, () => {\n            if (!this.core.lgOpened) return;\n            setTimeout(() => {\n                this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n                this.animateThumb(this.core.index);\n                this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n            }, 50);\n        });\n    }\n\n    setThumbMarkup(): void {\n        let thumbOuterClassNames = 'lg-thumb-outer ';\n\n        if (this.settings.alignThumbnails) {\n            thumbOuterClassNames += `lg-thumb-align-${this.settings.alignThumbnails}`;\n        }\n\n        const html = `<div class=\"${thumbOuterClassNames}\">\n        <div class=\"lg-thumb lg-group\">\n        </div>\n        </div>`;\n\n        this.core.outer.addClass('lg-has-thumb');\n\n        if (this.settings.appendThumbnailsTo === '.lg-components') {\n            this.core.$lgComponents.append(html);\n        } else {\n            this.core.outer.append(html);\n        }\n\n        this.$thumbOuter = this.core.outer.find('.lg-thumb-outer').first();\n        this.$lgThumb = this.core.outer.find('.lg-thumb').first();\n\n        if (this.settings.animateThumb) {\n            this.core.outer\n                .find('.lg-thumb')\n                .css('transition-duration', this.core.settings.speed + 'ms')\n                .css('width', this.thumbTotalWidth + 'px')\n                .css('position', 'relative');\n        }\n\n        this.setThumbItemHtml(\n            (this.core.galleryItems as unknown) as ThumbnailGalleryItem[],\n        );\n    }\n\n    enableThumbDrag(): void {\n        let thumbDragUtils: ThumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0,\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0,\n        };\n\n        let isDragging = false;\n\n        this.$thumbOuter.addClass('lg-grab');\n\n        this.core.outer\n            .find('.lg-thumb')\n            .first()\n            .on('mousedown.lg.thumb', (e) => {\n                if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                    // execute only on .lg-object\n                    e.preventDefault();\n                    thumbDragUtils.cords.startX = e.pageX;\n\n                    thumbDragUtils.startTime = new Date();\n                    this.thumbClickable = false;\n\n                    isDragging = true;\n\n                    // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                    this.core.outer.get().scrollLeft += 1;\n                    this.core.outer.get().scrollLeft -= 1;\n\n                    // *\n                    this.$thumbOuter\n                        .removeClass('lg-grab')\n                        .addClass('lg-grabbing');\n                }\n            });\n\n        this.$LG(window).on(\n            `mousemove.lg.thumb.global${this.core.lgId}`,\n            (e) => {\n                if (!this.core.lgOpened) return;\n                if (isDragging) {\n                    thumbDragUtils.cords.endX = e.pageX;\n\n                    thumbDragUtils = this.onThumbTouchMove(thumbDragUtils);\n                }\n            },\n        );\n\n        this.$LG(window).on(`mouseup.lg.thumb.global${this.core.lgId}`, () => {\n            if (!this.core.lgOpened) return;\n            if (thumbDragUtils.isMoved) {\n                thumbDragUtils = this.onThumbTouchEnd(thumbDragUtils);\n            } else {\n                this.thumbClickable = true;\n            }\n\n            if (isDragging) {\n                isDragging = false;\n                this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');\n            }\n        });\n    }\n\n    enableThumbSwipe(): void {\n        let thumbDragUtils: ThumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0,\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0,\n        };\n\n        this.$lgThumb.on('touchstart.lg', (e: TouchEvent) => {\n            if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.startX = e.targetTouches[0].pageX;\n                this.thumbClickable = false;\n                thumbDragUtils.startTime = new Date();\n            }\n        });\n\n        this.$lgThumb.on('touchmove.lg', (e: TouchEvent) => {\n            if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.endX = e.targetTouches[0].pageX;\n                thumbDragUtils = this.onThumbTouchMove(thumbDragUtils);\n            }\n        });\n\n        this.$lgThumb.on('touchend.lg', () => {\n            if (thumbDragUtils.isMoved) {\n                thumbDragUtils = this.onThumbTouchEnd(thumbDragUtils);\n            } else {\n                this.thumbClickable = true;\n            }\n        });\n    }\n\n    // Rebuild thumbnails\n    rebuildThumbnails(): void {\n        // Remove transitions\n        this.$thumbOuter.addClass('lg-rebuilding-thumbnails');\n        setTimeout(() => {\n            this.thumbTotalWidth =\n                this.core.galleryItems.length *\n                (this.settings.thumbWidth + this.settings.thumbMargin);\n            this.$lgThumb.css('width', this.thumbTotalWidth + 'px');\n            this.$lgThumb.empty();\n            this.setThumbItemHtml(\n                (this.core.galleryItems as unknown) as ThumbnailGalleryItem[],\n            );\n            this.animateThumb(this.core.index);\n        }, 50);\n        setTimeout(() => {\n            this.$thumbOuter.removeClass('lg-rebuilding-thumbnails');\n        }, 200);\n    }\n\n    // @ts-check\n\n    setTranslate(value: number): void {\n        this.$lgThumb.css(\n            'transform',\n            'translate3d(-' + value + 'px, 0px, 0px)',\n        );\n    }\n\n    getPossibleTransformX(left: number): number {\n        if (left > this.thumbTotalWidth - this.thumbOuterWidth) {\n            left = this.thumbTotalWidth - this.thumbOuterWidth;\n        }\n\n        if (left < 0) {\n            left = 0;\n        }\n        return left;\n    }\n\n    animateThumb(index: number): void {\n        this.$lgThumb.css(\n            'transition-duration',\n            this.core.settings.speed + 'ms',\n        );\n        if (this.settings.animateThumb) {\n            let position = 0;\n            switch (this.settings.currentPagerPosition) {\n                case 'left':\n                    position = 0;\n                    break;\n                case 'middle':\n                    position =\n                        this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;\n                    break;\n                case 'right':\n                    position = this.thumbOuterWidth - this.settings.thumbWidth;\n            }\n            this.translateX =\n                (this.settings.thumbWidth + this.settings.thumbMargin) * index -\n                1 -\n                position;\n            if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) {\n                this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;\n            }\n\n            if (this.translateX < 0) {\n                this.translateX = 0;\n            }\n\n            this.setTranslate(this.translateX);\n        }\n    }\n\n    onThumbTouchMove(thumbDragUtils: ThumbDragUtils): ThumbDragUtils {\n        thumbDragUtils.newTranslateX = this.translateX;\n        thumbDragUtils.isMoved = true;\n\n        thumbDragUtils.touchMoveTime = new Date().valueOf();\n\n        thumbDragUtils.newTranslateX -=\n            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n\n        thumbDragUtils.newTranslateX = this.getPossibleTransformX(\n            thumbDragUtils.newTranslateX,\n        );\n\n        // move current slide\n        this.setTranslate(thumbDragUtils.newTranslateX);\n        this.$thumbOuter.addClass('lg-dragging');\n\n        return thumbDragUtils;\n    }\n\n    onThumbTouchEnd(thumbDragUtils: ThumbDragUtils): ThumbDragUtils {\n        thumbDragUtils.isMoved = false;\n        thumbDragUtils.endTime = new Date();\n        this.$thumbOuter.removeClass('lg-dragging');\n\n        const touchDuration =\n            thumbDragUtils.endTime.valueOf() -\n            thumbDragUtils.startTime.valueOf();\n        let distanceXnew =\n            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n        let speedX = Math.abs(distanceXnew) / touchDuration;\n        // Some magical numbers\n        // Can be improved\n        if (\n            speedX > 0.15 &&\n            thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30\n        ) {\n            speedX += 1;\n\n            if (speedX > 2) {\n                speedX += 1;\n            }\n            speedX =\n                speedX +\n                speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);\n            this.$lgThumb.css(\n                'transition-duration',\n                Math.min(speedX - 1, 2) + 'settings',\n            );\n\n            distanceXnew = distanceXnew * speedX;\n\n            this.translateX = this.getPossibleTransformX(\n                this.translateX - distanceXnew,\n            );\n            this.setTranslate(this.translateX);\n        } else {\n            this.translateX = thumbDragUtils.newTranslateX;\n        }\n        if (\n            Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) <\n            this.settings.thumbnailSwipeThreshold\n        ) {\n            this.thumbClickable = true;\n        }\n\n        return thumbDragUtils;\n    }\n\n    getThumbHtml(thumb: string, index: number, alt?: string): string {\n        const slideVideoInfo =\n            this.core.galleryItems[index].__slideVideoInfo || {};\n        let thumbImg;\n\n        if (slideVideoInfo.youtube) {\n            if (this.settings.loadYouTubeThumbnail) {\n                thumbImg =\n                    '//img.youtube.com/vi/' +\n                    slideVideoInfo.youtube[1] +\n                    '/' +\n                    this.settings.youTubeThumbSize +\n                    '.jpg';\n            } else {\n                thumbImg = thumb;\n            }\n        } else {\n            thumbImg = thumb;\n        }\n\n        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n        return `<div data-lg-item-id=\"${index}\" class=\"lg-thumb-item ${\n            index === this.core.index ? ' active' : ''\n        }\"\n        style=\"width:${this.settings.thumbWidth}px; height: ${\n            this.settings.thumbHeight\n        };\n            margin-right: ${this.settings.thumbMargin}px;\">\n            <img ${altAttr} data-lg-item-id=\"${index}\" src=\"${thumbImg}\" />\n        </div>`;\n    }\n\n    getThumbItemHtml(items: ThumbnailGalleryItem[]): string {\n        let thumbList = '';\n        for (let i = 0; i < items.length; i++) {\n            thumbList += this.getThumbHtml(items[i].thumb, i, items[i].alt);\n        }\n\n        return thumbList;\n    }\n\n    setThumbItemHtml(items: ThumbnailGalleryItem[]): void {\n        const thumbList = this.getThumbItemHtml(items);\n        this.$lgThumb.html(thumbList);\n    }\n\n    setAnimateThumbStyles(): void {\n        if (this.settings.animateThumb) {\n            this.core.outer.addClass('lg-animate-thumb');\n        }\n    }\n\n    // Manage thumbnail active calss\n    manageActiveClassOnSlideChange(): void {\n        // manage active class for thumbnail\n        this.core.LGel.on(\n            `${lGEvents.beforeSlide}.thumb`,\n            (event: CustomEvent) => {\n                const $thumb = this.core.outer.find('.lg-thumb-item');\n                const { index } = event.detail;\n                $thumb.removeClass('active');\n                $thumb.eq(index).addClass('active');\n            },\n        );\n    }\n\n    // Toggle thumbnail bar\n    toggleThumbBar(): void {\n        if (this.settings.toggleThumb) {\n            this.core.outer.addClass('lg-can-toggle');\n            this.core.$toolbar.append(\n                '<button type=\"button\" aria-label=\"' +\n                    this.settings.thumbnailPluginStrings['toggleThumbnails'] +\n                    '\" class=\"lg-toggle-thumb lg-icon\"></button>',\n            );\n            this.core.outer\n                .find('.lg-toggle-thumb')\n                .first()\n                .on('click.lg', () => {\n                    this.core.outer.toggleClass('lg-components-open');\n                });\n        }\n    }\n\n    thumbKeyPress(): void {\n        this.$LG(window).on(`keydown.lg.thumb.global${this.core.lgId}`, (e) => {\n            if (!this.core.lgOpened || !this.settings.toggleThumb) return;\n\n            if (e.keyCode === 38) {\n                e.preventDefault();\n                this.core.outer.addClass('lg-components-open');\n            } else if (e.keyCode === 40) {\n                e.preventDefault();\n                this.core.outer.removeClass('lg-components-open');\n            }\n        });\n    }\n\n    destroy(): void {\n        if (this.settings.thumbnail) {\n            this.$LG(window).off(`.lg.thumb.global${this.core.lgId}`);\n            this.core.LGel.off('.lg.thumb');\n            this.core.LGel.off('.thumb');\n            this.$thumbOuter.remove();\n            this.core.outer.removeClass('lg-has-thumb');\n        }\n    }\n}\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$cd5a47cf8ef6d766$export$1e71eb4bef00f6b0","obj","value","$ad1c00e896d27009$export$581ff339ea0ba762","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$f17388ede13a49cc$export$4fa2f4023c9cbda5","getOwnPropertyDescriptors","defineProperties","$f17388ede13a49cc$var$ownKeys","object","enumerableOnly","symbols","push","apply","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","$efec029548ccee7f$export$fdf2a89c76341bbf","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","err","TypeError","$227c6742e0ff6f82$export$1b5e630bc3aea29f","iter","$0c3479cf5570869b$var$isObject","$0c3479cf5570869b$var$extend","src","body","document","querySelector","burgerButton","header","addEventListener","e","stopPropagation","scrollBarWidth","window","innerWidth","documentElement","clientWidth","classList","toggle","style","paddingRight","closest","remove","tagName","scrollY","scrollPos","add","headerHeight","offsetHeight","querySelectorAll","anchor","preventDefault","targetId","getAttribute","targetElement","targetPosition","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","$12f396601cf1ba7d$var$support","$12f396601cf1ba7d$var$deviceCached","$12f396601cf1ba7d$var$browser","$0c3479cf5570869b$var$ssrDocument","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$0c3479cf5570869b$export$39b482c5e57630a8","doc","$0c3479cf5570869b$var$ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","$0c3479cf5570869b$export$407448d2b89b1813","win","$d680807689e9ecb0$export$7ccc53e8f1e7dfc5","delay","$d680807689e9ecb0$export$4368d992c4eafac0","now","$d680807689e9ecb0$export$342063e11d6c3cad","$d680807689e9ecb0$export$3b14a55fb2447963","_arguments","to","undefined","noExtend","_loop","nextSource","HTMLElement","node","nodeType","keysArray","indexOf","nextIndex","nextKey","desc","__swiper__","$d680807689e9ecb0$export$2408f22a0fab9ae5","el","varName","varValue","setProperty","$d680807689e9ecb0$export$43caf9889c228507","_ref","time","swiper","side","window1","startPosition","translate","startTime","duration","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","current","animate","getTime","currentPosition","easeProgress","Math","cos","progress","max","min","PI","overflow","$d680807689e9ecb0$export$f1e1789686576879","element","selector","matches","$d680807689e9ecb0$export$625550452a3fa3ec","text","console","warn","$d680807689e9ecb0$export$db3b6bfb95261072","tag","classes","_el_classList","trim","split","c","$d680807689e9ecb0$export$ae1af26003f05816","prop","$d680807689e9ecb0$export$39b482c5e57630a8","child","previousSibling","$d680807689e9ecb0$export$407448d2b89b1813","parents","parent","parentElement","$d680807689e9ecb0$export$2d1720544b23b823","size","includeMargins","parseFloat","offsetWidth","$d680807689e9ecb0$export$953cecd6e717a553","$12f396601cf1ba7d$var$getSupport","document1","smoothScroll","touch","DocumentTouch","$12f396601cf1ba7d$var$getDevice","overrides","_temp","support","platform","ua","device","screenWidth","screenHeight","android","ipad","ipod","iphone","macos","ios","width","height","match","iPadScreens","os","$12f396601cf1ba7d$var$processLazyPreloader","imageEl","destroyed","slideEl","isElement","slideClass","lazyEl","lazyPreloaderClass","shadowRoot","$12f396601cf1ba7d$var$unlazy","index","slides","removeAttribute","$12f396601cf1ba7d$var$preload","amount","lazyPreloadPrevNext","slidesPerView","slidesPerViewDynamic","ceil","activeIndex","grid","rows","preloadColumns","activeColumn","map","_","includes","column","slideIndexLastInView","rewind","loop","realIndex","i1","$12f396601cf1ba7d$var$transitionEmit","runCallbacks","direction","step","previousIndex","emit","$12f396601cf1ba7d$var$preventEdgeSwipe","event","startX","edgeSwipeDetection","edgeSwipeThreshold","$12f396601cf1ba7d$var$onTouchStart","originalEvent","data","touchEventsData","type","pointerId","targetTouches","touchId","identifier","pageX","touches","enabled","simulateTouch","pointerType","animating","preventInteractionOnTransition","cssMode","loopFix","targetEl","touchEventsTarget","contains","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","$12f396601cf1ba7d$var$closestElement","base","__closestFrom","assignedSlot","found","getRootNode","allowClick","swipeHandler","currentX","currentY","pageY","startY","assign","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","updateSize","swipeDirection","threshold","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchStart","$12f396601cf1ba7d$var$onTouchMove","targetTouch","touchAngle","loopFixed","rtl","rtlTranslate","changedTouches","t","preventedByNestedSwiper","touchReleaseOnEdges","isVertical","maxTranslate","minTranslate","previousX","previousY","diffX","diffY","sqrt","pow","isHorizontal","atan2","abs","cancelable","touchMoveStopPropagation","nested","diff","touchesDiff","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","allowLoopFix","allowSlideNext","allowSlidePrev","startTranslate","getTranslate","setTransition","evt","bubbles","dispatchEvent","allowMomentumBounce","grabCursor","setGrabCursor","currentTranslate","loopSwapReset","disableParentSwiper","resistanceRatio","centeredSlides","slidesSizesGrid","setTranslate","activeSlideIndex","resistance","followFinger","watchSlidesProgress","updateActiveIndex","updateSlidesClasses","onTouchMove","updateProgress","$12f396601cf1ba7d$var$onTouchEnd","currentPos","browser","isSafari","isWebView","slidesGrid","touchEndTime","timeDiff","pathTree","updateClickedSlide","lastClickTime","onTouchEnd","swipeToLast","stopIndex","groupSize","slidesPerGroupSkip","slidesPerGroup","increment","rewindFirstIndex","rewindLastIndex","isBeginning","virtual","isEnd","ratio","increment1","longSwipesMs","longSwipes","slideTo","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$12f396601cf1ba7d$var$onResize","breakpoints","setBreakpoint","snapGrid","isVirtual","updateSlides","isVirtualLoop","slideToLoop","autoplay","running","paused","resizeTimeout","resume","watchOverflow","checkOverflow","$12f396601cf1ba7d$var$onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","$12f396601cf1ba7d$var$onScroll","previousTranslate","scrollLeft","scrollTop","translatesDiff","$12f396601cf1ba7d$var$onLoad","autoHeight","update","$12f396601cf1ba7d$var$onDocumentTouchStart","documentTouchHandlerProceeded","touchAction","$12f396601cf1ba7d$var$events","method","capture","domMethod","onDocumentTouchStart","passive","onClick","onScroll","updateOnWindowResize","onLoad","$12f396601cf1ba7d$var$isGridEnabled","$12f396601cf1ba7d$export$4368d992c4eafac0","init","swiperElementNodeName","initialSlide","resizeObserver","createElements","eventsPrefix","url","setWrapperSize","virtualTranslate","effect","breakpointsBase","spaceBetween","slidesPerGroupAuto","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","roundLengths","uniqueNavElements","slideToClickedSlide","loopAddBlankSlides","loopAdditionalSlides","loopPreventsSliding","passiveListeners","maxBackfaceHiddenSlides","containerModifierClass","slideBlankClass","slideActiveClass","slideVisibleClass","slideFullyVisibleClass","slideNextClass","slidePrevClass","wrapperClass","runCallbacksOnInit","_emitClasses","$12f396601cf1ba7d$var$prototypes","eventsEmitter","on","events","handler","priority","self","eventsListeners","once","onceHandler","off","__emitterProxy","_len","args","_key","onAny","eventsAnyListeners","offAny","splice","eventHandler","context","_len2","_key2","unshift","eventsArray","clientHeight","parseInt","Number","isNaN","slideSize","getDirectionPropertyValue","label","getDirectionLabel","slidesEl","swiperSize","wrongRTL","previousSlidesLength","slidesLength","offsetBefore","offsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","replace","virtualSize","marginLeft","marginRight","marginBottom","marginTop","gridEnabled","initSlides","unsetSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","transform","currentWebKitTransform","webkitTransform","paddingLeft","boxSizing","floor","swiperSlideSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","slidesBefore","slidesAfter","i2","i3","slideIndex","allSlidesSize","slideSizeValue","maxSnap","snap","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","updateAutoHeight","activeSlides","newHeight","getSlideByIndex","getSlideIndexByData","visibleSlides","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","updateSlidesProgress","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isFullyVisible","originalProgress","multiplier","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","activeSlide","prevSlide","nextSlide","getFilteredSlide","nextEls","nextElementSibling","prevEls","previousElementSibling","prev","emitSlidesClasses","newActiveIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","$12f396601cf1ba7d$var$getActiveIndexByTranslate","skip","firstSlideInColumn","initialized","pathEl","slideFound","clickedSlide","clickedIndex","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","WebKitCSSMatrix","a","join","MozTransform","OTransform","MsTransform","msTransform","m41","m42","byController","x","y","translateTo","translateBounds","internal","_$minTranslate","_$maxTranslate","newTranslate","_obj","isH","onTranslateToWrapperTransitionEnd","transition","transitionDuration","transitionDelay","transitionStart","transitionEnd","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","newIndex","targetSlideIndex","cols","needLoopFix","slideRealIndex","slideIndex1","slideNext","perGroup","_clientLeft","clientLeft","slidePrev","prevSnapIndex","normalize","val","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","slideReset","slideToClosest","currentSnap","nextSnap","currentSnap1","slideToIndex","slideSelector","loopedSlides","getSlideIndex","loopCreate","shouldFillGroup","shouldFillGrid","addBlankSlides","amountOfSlides","append","recalcSlides","_ref_slideTo","_$slideTo","_$setTranslate","byMousewheel","fill","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","activeColIndexWithShift","activeColIndex","colIndexToPrepend","__preventObserver__","swiperLoopMoveDOM","prepend","currentSlideTranslate","newSlideTranslate","shift","currentSlideTranslate1","diff1","newSlideTranslate1","shift1","controller","control","loopParams","loopDestroy","newSlidesOrder","swiperSlideIndex","moving","isLocked","cursor","unsetGrabCursor","attachEvents","bind","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","breakpointOnlyParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","wasLoop","changeDirection","isEnabled","hasLoop","containerEl","currentHeight","innerHeight","points","point","substr","sort","b","_points_i","wasLocked","lastSlideRightEdge","addClasses","entries","prefix","resultClasses","classNames","suffixes","item","removeClasses","$12f396601cf1ba7d$var$extendedDefaults","$12f396601cf1ba7d$export$25ce5a424b770e84","protoProps","staticProps","Swiper","instance","Constructor","_swiper_modules","ref","swipers","newParams","$12f396601cf1ba7d$var$calcBrowser","needPerspectiveFix","toLowerCase","String","_ua_split__split__split_map","num","major","minor","isSafariBrowser","need3dFix","modules","__modules__","allModulesParams","mod","extendParams","moduleParamName","moduleParams","auto","swiperParams","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","property","_this","cls","className","updates","getSlideClasses","view","exact","spv","breakLoop","translated","complete","newDirection","needUpdate","currentDirection","mounted","parentNode","toUpperCase","getWrapperSelector","slideSlots","hostEl","mount","lazyElements","deleteInstance","cleanStyles","newDefaults","get","module","m","installModule","$cd860e38c4fd3577$export$db3b6bfb95261072","$392c62a1bf8e97d1$export$2e2bcd8739ae039","bulletSize","pfx","pagination","bulletElement","clickable","hideOnClick","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","hiddenClass","progressbarFillClass","progressbarOppositeClass","clickableClass","lockClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","bulletEl","position","onBulletClick","total","subEl","midIndex","firstIndex","_bulletEl_classList","classesToRemove","suffix","s","flat","bullet","_bullet_classList","_bullet_classList1","bulletIndex","_bullets_i_classList","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","innerHTML","render","paginationHTML","numberOfBullets","_swiper_pagination_bullets","checkProps","_subEl_classList","destroy","isHidden","prototypeGroup","protoMethod","use","observer","animationFrame","resizeHandler","createObserver","ResizeObserver","newWidth","_ref2","contentBoxSize","contentRect","inlineSize","blockSize","observe","removeObserver","unobserve","orientationChangeHandler","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","disconnect","$ffb804eaccb368d6$var$mySwiper","$ffb804eaccb368d6$var$swiperWrapper","$ffb804eaccb368d6$var$initSlider","$ae51a4f8a94c76e1$var$__assign","p","hasOwnProperty","$ae51a4f8a94c76e1$var$lGEvents","afterAppendSlide","hasVideo","containerResize","afterAppendSubHtml","beforeOpen","afterOpen","slideItemLoad","beforeSlide","afterSlide","posterClick","dragStart","dragMove","dragEnd","beforeNextSlide","beforePrevSlide","beforeClose","afterClose","$ae51a4f8a94c76e1$var$lightGalleryCoreSettings","mode","easing","licenseKey","addClass","startClass","backdropDuration","container","startAnimationDuration","zoomFromOrigin","hideBarsDelay","showBarsAfter","slideDelay","supportLegacyBrowser","allowMediaOverlap","videoMaxSize","loadYouTubePoster","defaultCaptionHeight","ariaLabelledby","ariaDescribedby","resetScrollPosition","hideScrollbar","closable","swipeToClose","closeOnTap","showCloseIcon","showMaximizeIcon","escKey","keyPress","trapFocus","controls","slideEndAnimation","hideControlOnEnd","mousewheel","getCaptionFromTitleOrAlt","appendSubHtmlTo","subHtmlSelectorRelative","preload","numberOfSlideItemsInDom","selectWithin","nextHtml","prevHtml","iframeWidth","iframeHeight","iframeMaxWidth","iframeMaxHeight","download","counter","appendCounterTo","swipeThreshold","enableSwipe","enableDrag","dynamic","dynamicEl","extraProps","exThumbImage","isMobile","mobileSettings","plugins","strings","closeGallery","toggleMaximize","previousSlide","playVideo","mediaLoadingFailed","$ae51a4f8a94c76e1$var$lgQuery","lgQuery","cssVenderPrefixes","_getSelector","firstElement","_getFirstEl","generateUUID","r","random","fl","substring","_each","func","_setCssVendorPrefix","cssProperty","group1","charAt","isEventMatched","eventNamespace","every","attr","find","$ae51a4f8a94c76e1$var$$LG","first","eq","removeAttr","attrs","wrap","wrapper","insertBefore","removeChild","appendChild","removeClass","hasClass","hasAttribute","attribute","toggleClass","css","listener","eventListeners","trigger","detail","customEvent","load","fetch","then","res","html","insertAdjacentHTML","empty","pageXOffset","offset","left","rect","bodyMarginLeft","paddingTop","paddingBottom","initCustomEvent","Element","msMatchesSelector","webkitMatchesSelector","$ae51a4f8a94c76e1$var$defaultDynamicOptions","$ae51a4f8a94c76e1$var$utils","getSize","spacing","defaultLgSize","lgSize","LGel","isResponsiveSizes","wWidth","size_1","responsiveWidth","maxWidth","maxHeight","getTransform","bottom","imageSize","containerRect","wHeight","elWidth","elHeight","elStyle","borderLeft","borderTop","getIframeMarkup","iframeTitle","getImgMarkup","altAttr","srcset","sizes","sources","sourceTag","sourceObj","JSON","parse","getResponsiveSrc","srcItms","rsWidth","rsSrc","_src","j","isImageLoaded","img","naturalWidth","getVideoPosterMarkup","_poster","dummyImg","videoContStyle","playVideoString","_isVideo","youtube","vimeo","getFocusableElements","elements","display","visibility","getDynamicOptions","items","dynamicElements","availableDynamicOptions","$ae51a4f8a94c76e1$var$__spreadArrays","il","k","jl","specified","dynamicAttr","g","currentItem","alt","title","thumb","subHtml","isVideo","isHTML5VIdeo","html5","error","wistia","$ae51a4f8a94c76e1$var$lgId","$ae51a4f8a94c76e1$var$LightGallery","LightGallery","lgOpened","lGalleryOn","lgBusy","currentItemsInDom","prevScrollTop","bodyPaddingRight","isDummyImageRemoved","dragOrSwipeEnabled","mediaContainerPosition","lgId","generateSettings","buildModules","settings","galleryItems","getItems","normalizeSettings","validateLicense","addSlideVideoInfo","buildStructure","triggerPosterClick","arrow","openGalleryOnItemClick","_loop_1","this_1","$element","uuid","currentItemIndex","openGallery","plugin","getSlideItem","getSlideItemId","getIdName","manageSingleSlideClassName","outer","$container","subHtmlCont","containerClassName","closeIcon","maximizeIcon","template","$lgComponents","$backdrop","$inner","$content","$toolbar","outerClassNames","refreshOnResize","hideBars","manageCloseGallery","initModules","__slideVideoInfo","currentGalleryItem","getMediaContainerPosition","_a","top_1","currentImageSize","resizeVideoSlide","imgStyle","getDummyImgStyles","lgVideoStyle","getVideoContStyle","currentSlide","currentSrc","updateControls","_index","some","galleryItem","itemIndex","organizeSlideItems","loadContent","updateCurrentCounter","shouldHideScrollbar","bodyRect","scrollbarWidth","resetScrollBar","itemsToBeInsertedToDom","getItemsToBeInsertedToDom","addHtml","setMediaContainerPosition","currentSlide_1","captionHeight","thumbContainer","thumbHeight","hideBarTimeout","initPictureFill","$img","picturefill","counterHtml","subHtmlUrl","fL","getDummyImageContent","$currentSlide","$currentItem","_dummyImgSrc","dummyImgContent","setImgMarkup","imgMarkup","isFirstSlideWithZoomAnimation","onSlideObjectLoad","$slide","isHTML5VideoWithoutPoster","onError","mediaObject","onLgObjectLoad","isFirstSlide","triggerSlideItemLoad","getSlideType","poster","video","rec","_html5Video","responsive","srcDyItms","videoInfo","iframe","top_2","videoSize","markup","html5Video","hasPoster","_speed","loadContentOnFirstSlideLoad","numberOfItems","possibleNumberOfItems","prevIndexItem","_element","idx","numberOfExistingItems","getPreviousSlideIndex","currentItemId","setDownloadValue","downloadUrl","$download","makeSlideAnimation","currentSlideItem","previousSlideItem","fromTouch","fromThumb","numberOfGalleryItems","previousSlideItem_1","top_3","arrowDisable","touchPrev","touchNext","updateCounterTotal","touchMove","startCoords","endCoords","distanceX","distanceY","allowSwipe","gutter","slideWidthAmount","opacity","touchEnd","distance","triggerClick","distanceAbs","goToNextSlide","goToPrevSlide","isPosterElement","isSwiping","$item","manageSwipeClass","isDraging","_touchNext","_touchPrev","keyCode","$prev","$next","$el","xValue","yValue","lastCall","deltaY","isSlideElement","playButton","invalidateItems","focus","preventScroll","focusableEls","firstFocusableEl","lastFocusableEl","shiftKey","mousedown","force","top_4","_b","destroyModules","removeTimeout","refresh","destroyGallery","closeTimeout","$e8a17bef9df77869$var$__assign","$e8a17bef9df77869$var$thumbnailsSettings","thumbnail","animateThumb","currentPagerPosition","alignThumbnails","thumbWidth","thumbMargin","appendThumbnailsTo","toggleThumb","enableThumbDrag","enableThumbSwipe","thumbnailSwipeThreshold","loadYouTubeThumbnail","youTubeThumbSize","thumbnailPluginStrings","toggleThumbnails","$e8a17bef9df77869$var$lGEvents","$e8a17bef9df77869$var$Thumbnail","Thumbnail","$LG","thumbOuterWidth","thumbTotalWidth","translateX","thumbClickable","core","setAnimateThumbStyles","build","toggleThumbBar","thumbKeyPress","setThumbMarkup","manageActiveClassOnSlideChange","$lgThumb","$target","rebuildThumbnails","thumbOuterClassNames","$thumbOuter","setThumbItemHtml","thumbDragUtils","cords","endX","newTranslateX","endTime","touchMoveTime","isDragging","onThumbTouchMove","onThumbTouchEnd","getPossibleTransformX","valueOf","touchDuration","distanceXnew","speedX","getThumbHtml","thumbImg","slideVideoInfo","getThumbItemHtml","thumbList","$thumb"],"version":3,"file":"index.d3f5e219.js.map"}